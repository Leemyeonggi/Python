{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0fbf0010",
   "metadata": {},
   "source": [
    "# 문제 정의 (가설)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43bdcff5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "7fcfe07e",
   "metadata": {},
   "source": [
    "# 데이터 수집"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33b7c800",
   "metadata": {},
   "source": [
    "- DB to Flask to Local"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7daf29f4",
   "metadata": {},
   "outputs": [
    {
     "ename": "OperationalError",
     "evalue": "(2003, \"Can't connect to MySQL server on 'localhost' ([WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다)\")",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mConnectionRefusedError\u001b[0m                    Traceback (most recent call last)",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:613\u001b[0m, in \u001b[0;36mConnection.connect\u001b[1;34m(self, sock)\u001b[0m\n\u001b[0;32m    612\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 613\u001b[0m     sock \u001b[38;5;241m=\u001b[39m socket\u001b[38;5;241m.\u001b[39mcreate_connection(\n\u001b[0;32m    614\u001b[0m         (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhost, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mport), \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mconnect_timeout, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs\n\u001b[0;32m    615\u001b[0m     )\n\u001b[0;32m    616\u001b[0m     \u001b[38;5;28;01mbreak\u001b[39;00m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\socket.py:844\u001b[0m, in \u001b[0;36mcreate_connection\u001b[1;34m(address, timeout, source_address)\u001b[0m\n\u001b[0;32m    843\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 844\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m err\n\u001b[0;32m    845\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m    846\u001b[0m     \u001b[38;5;66;03m# Break explicitly a reference cycle\u001b[39;00m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\socket.py:832\u001b[0m, in \u001b[0;36mcreate_connection\u001b[1;34m(address, timeout, source_address)\u001b[0m\n\u001b[0;32m    831\u001b[0m     sock\u001b[38;5;241m.\u001b[39mbind(source_address)\n\u001b[1;32m--> 832\u001b[0m \u001b[43msock\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43msa\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    833\u001b[0m \u001b[38;5;66;03m# Break explicitly a reference cycle\u001b[39;00m\n",
      "\u001b[1;31mConnectionRefusedError\u001b[0m: [WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mOperationalError\u001b[0m                          Traceback (most recent call last)",
      "Input \u001b[1;32mIn [6]\u001b[0m, in \u001b[0;36m<cell line: 8>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      5\u001b[0m     conn \u001b[38;5;241m=\u001b[39m ps\u001b[38;5;241m.\u001b[39mconnect(host\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlocalhost\u001b[39m\u001b[38;5;124m'\u001b[39m, user\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mroot\u001b[39m\u001b[38;5;124m'\u001b[39m, passwd\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m12345\u001b[39m\u001b[38;5;124m'\u001b[39m, db\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maqu4men\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m conn\n\u001b[1;32m----> 8\u001b[0m conn \u001b[38;5;241m=\u001b[39m \u001b[43mcon\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      9\u001b[0m curs \u001b[38;5;241m=\u001b[39m conn\u001b[38;5;241m.\u001b[39mcursor()\n\u001b[0;32m     10\u001b[0m sql \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mselect * from t_cupholder \u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "Input \u001b[1;32mIn [6]\u001b[0m, in \u001b[0;36mcon\u001b[1;34m()\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mcon\u001b[39m():\n\u001b[1;32m----> 5\u001b[0m     conn \u001b[38;5;241m=\u001b[39m \u001b[43mps\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43mhost\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlocalhost\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muser\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mroot\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpasswd\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m12345\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdb\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43maqu4men\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m      6\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m conn\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:353\u001b[0m, in \u001b[0;36mConnection.__init__\u001b[1;34m(self, user, password, host, database, unix_socket, port, charset, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)\u001b[0m\n\u001b[0;32m    351\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_sock \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m    352\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 353\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:664\u001b[0m, in \u001b[0;36mConnection.connect\u001b[1;34m(self, sock)\u001b[0m\n\u001b[0;32m    662\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m DEBUG:\n\u001b[0;32m    663\u001b[0m         \u001b[38;5;28mprint\u001b[39m(exc\u001b[38;5;241m.\u001b[39mtraceback)\n\u001b[1;32m--> 664\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m exc\n\u001b[0;32m    666\u001b[0m \u001b[38;5;66;03m# If e is neither DatabaseError or IOError, It's a bug.\u001b[39;00m\n\u001b[0;32m    667\u001b[0m \u001b[38;5;66;03m# But raising AssertionError hides original error.\u001b[39;00m\n\u001b[0;32m    668\u001b[0m \u001b[38;5;66;03m# So just reraise it.\u001b[39;00m\n\u001b[0;32m    669\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m\n",
      "\u001b[1;31mOperationalError\u001b[0m: (2003, \"Can't connect to MySQL server on 'localhost' ([WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다)\")"
     ]
    }
   ],
   "source": [
    "import pymysql as ps\n",
    "import pandas as pd\n",
    "\n",
    "def con():\n",
    "    conn = ps.connect(host='localhost', user='root', passwd='12345', db='aqu4men')\n",
    "    return conn\n",
    "\n",
    "conn = con()\n",
    "curs = conn.cursor()\n",
    "sql = f\"select * from t_cupholder \"\n",
    "curs.execute(sql)\n",
    "colname = curs.description\n",
    "rows = curs.fetchall()\n",
    "curs.close()\n",
    "conn.close()\n",
    "\n",
    "col=[]\n",
    "for i in colname:\n",
    "    col.append(i[0].lower())\n",
    "cov = pd.DataFrame(list(rows), columns = col)\n",
    "\n",
    "#불용 data columns drop and save\n",
    "cov2=cov.iloc[:, 3:]\n",
    "for i in range(1,31):\n",
    "    cov2.drop(f'x{i}',axis=1,inplace=True)\n",
    "cov3 = cov2\n",
    "cov3.drop(\"t\",axis=1,inplace=True)\n",
    "cov3.to_csv(\"rawdata1000.csv\", encoding=\"UTF-8-sig\")\n",
    "cov3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "791cfa9a",
   "metadata": {},
   "source": [
    "- Local to Flask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "97e1ea4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>51</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     y1  y2  y3  y4  y5  y6  y7  y8  y9  y10  ...  y22  y23  y24  y25  y26  \\\n",
       "0     0   1   7  13  22  31  35  39  44   50  ...   65   65   66   67   67   \n",
       "1     0   3   7  13  18  22  29  31  33   36  ...   55   54   54   54   54   \n",
       "2    -8   0   8  15  22  27  30  33  37   41  ...   54   55   56   57   57   \n",
       "3    -5  -1   1   5  11  15  19  25  29   33  ...   39   39   39   38   38   \n",
       "4    12  15  18  22  23  25  27  29  30   31  ...   32   32   32   31   31   \n",
       "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
       "995   3   6  12  19  27  35  42  49  56   60  ...   79   79   79   79   79   \n",
       "996   1   2   5  11  17  22  28  34  39   42  ...   51   50   49   48   47   \n",
       "997   1   3   8  15  23  29  36  43  47   51  ...   61   61   60   59   59   \n",
       "998   1   4  10  17  23  29  35  41  46   50  ...   63   63   63   62   61   \n",
       "999   0   0   4  11  17  23  30  36  40   44  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[1000 rows x 31 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('rawdata.csv',encoding='utf-8', index_col='Unnamed: 0')\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76193f31",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "98523acd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>y1</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.978730</td>\n",
       "      <td>0.883421</td>\n",
       "      <td>0.704102</td>\n",
       "      <td>0.636743</td>\n",
       "      <td>0.574155</td>\n",
       "      <td>0.386446</td>\n",
       "      <td>0.314423</td>\n",
       "      <td>0.217257</td>\n",
       "      <td>0.161642</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.035390</td>\n",
       "      <td>-0.033509</td>\n",
       "      <td>-0.033100</td>\n",
       "      <td>-0.031421</td>\n",
       "      <td>-0.030679</td>\n",
       "      <td>-0.030720</td>\n",
       "      <td>-0.033231</td>\n",
       "      <td>-0.034029</td>\n",
       "      <td>-0.028430</td>\n",
       "      <td>0.074123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y2</th>\n",
       "      <td>0.978730</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.935518</td>\n",
       "      <td>0.782180</td>\n",
       "      <td>0.719922</td>\n",
       "      <td>0.659100</td>\n",
       "      <td>0.483293</td>\n",
       "      <td>0.408247</td>\n",
       "      <td>0.308445</td>\n",
       "      <td>0.246008</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013344</td>\n",
       "      <td>-0.013207</td>\n",
       "      <td>-0.014331</td>\n",
       "      <td>-0.014184</td>\n",
       "      <td>-0.015282</td>\n",
       "      <td>-0.016562</td>\n",
       "      <td>-0.020688</td>\n",
       "      <td>-0.023275</td>\n",
       "      <td>-0.018669</td>\n",
       "      <td>0.103914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y3</th>\n",
       "      <td>0.883421</td>\n",
       "      <td>0.935518</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.887740</td>\n",
       "      <td>0.833279</td>\n",
       "      <td>0.772677</td>\n",
       "      <td>0.607739</td>\n",
       "      <td>0.532318</td>\n",
       "      <td>0.432067</td>\n",
       "      <td>0.364828</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043184</td>\n",
       "      <td>0.041507</td>\n",
       "      <td>0.038532</td>\n",
       "      <td>0.037036</td>\n",
       "      <td>0.033741</td>\n",
       "      <td>0.030835</td>\n",
       "      <td>0.024460</td>\n",
       "      <td>0.020072</td>\n",
       "      <td>0.022639</td>\n",
       "      <td>0.157713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y4</th>\n",
       "      <td>0.704102</td>\n",
       "      <td>0.782180</td>\n",
       "      <td>0.887740</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.977621</td>\n",
       "      <td>0.931081</td>\n",
       "      <td>0.786800</td>\n",
       "      <td>0.719421</td>\n",
       "      <td>0.625316</td>\n",
       "      <td>0.561606</td>\n",
       "      <td>...</td>\n",
       "      <td>0.175319</td>\n",
       "      <td>0.171076</td>\n",
       "      <td>0.165194</td>\n",
       "      <td>0.161121</td>\n",
       "      <td>0.154877</td>\n",
       "      <td>0.149779</td>\n",
       "      <td>0.140236</td>\n",
       "      <td>0.131529</td>\n",
       "      <td>0.128906</td>\n",
       "      <td>0.221197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y5</th>\n",
       "      <td>0.636743</td>\n",
       "      <td>0.719922</td>\n",
       "      <td>0.833279</td>\n",
       "      <td>0.977621</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.979193</td>\n",
       "      <td>0.863372</td>\n",
       "      <td>0.807976</td>\n",
       "      <td>0.725001</td>\n",
       "      <td>0.666709</td>\n",
       "      <td>...</td>\n",
       "      <td>0.269906</td>\n",
       "      <td>0.263650</td>\n",
       "      <td>0.256514</td>\n",
       "      <td>0.251142</td>\n",
       "      <td>0.243456</td>\n",
       "      <td>0.237279</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>0.215325</td>\n",
       "      <td>0.211075</td>\n",
       "      <td>0.253040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y6</th>\n",
       "      <td>0.574155</td>\n",
       "      <td>0.659100</td>\n",
       "      <td>0.772677</td>\n",
       "      <td>0.931081</td>\n",
       "      <td>0.979193</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.919714</td>\n",
       "      <td>0.877725</td>\n",
       "      <td>0.807496</td>\n",
       "      <td>0.756573</td>\n",
       "      <td>...</td>\n",
       "      <td>0.356924</td>\n",
       "      <td>0.349396</td>\n",
       "      <td>0.341417</td>\n",
       "      <td>0.335017</td>\n",
       "      <td>0.326581</td>\n",
       "      <td>0.319611</td>\n",
       "      <td>0.306904</td>\n",
       "      <td>0.294924</td>\n",
       "      <td>0.289450</td>\n",
       "      <td>0.281542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y7</th>\n",
       "      <td>0.386446</td>\n",
       "      <td>0.483293</td>\n",
       "      <td>0.607739</td>\n",
       "      <td>0.786800</td>\n",
       "      <td>0.863372</td>\n",
       "      <td>0.919714</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.983649</td>\n",
       "      <td>0.928762</td>\n",
       "      <td>0.882127</td>\n",
       "      <td>...</td>\n",
       "      <td>0.438115</td>\n",
       "      <td>0.427734</td>\n",
       "      <td>0.417970</td>\n",
       "      <td>0.410199</td>\n",
       "      <td>0.400641</td>\n",
       "      <td>0.392642</td>\n",
       "      <td>0.378707</td>\n",
       "      <td>0.364795</td>\n",
       "      <td>0.356872</td>\n",
       "      <td>0.338080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y8</th>\n",
       "      <td>0.314423</td>\n",
       "      <td>0.408247</td>\n",
       "      <td>0.532318</td>\n",
       "      <td>0.719421</td>\n",
       "      <td>0.807976</td>\n",
       "      <td>0.877725</td>\n",
       "      <td>0.983649</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.967053</td>\n",
       "      <td>0.934686</td>\n",
       "      <td>...</td>\n",
       "      <td>0.523683</td>\n",
       "      <td>0.513055</td>\n",
       "      <td>0.502979</td>\n",
       "      <td>0.494442</td>\n",
       "      <td>0.484459</td>\n",
       "      <td>0.475934</td>\n",
       "      <td>0.460783</td>\n",
       "      <td>0.445681</td>\n",
       "      <td>0.436325</td>\n",
       "      <td>0.365451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y9</th>\n",
       "      <td>0.217257</td>\n",
       "      <td>0.308445</td>\n",
       "      <td>0.432067</td>\n",
       "      <td>0.625316</td>\n",
       "      <td>0.725001</td>\n",
       "      <td>0.807496</td>\n",
       "      <td>0.928762</td>\n",
       "      <td>0.967053</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.986215</td>\n",
       "      <td>...</td>\n",
       "      <td>0.613232</td>\n",
       "      <td>0.601722</td>\n",
       "      <td>0.591313</td>\n",
       "      <td>0.581980</td>\n",
       "      <td>0.571155</td>\n",
       "      <td>0.562000</td>\n",
       "      <td>0.545999</td>\n",
       "      <td>0.529506</td>\n",
       "      <td>0.518750</td>\n",
       "      <td>0.386091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y10</th>\n",
       "      <td>0.161642</td>\n",
       "      <td>0.246008</td>\n",
       "      <td>0.364828</td>\n",
       "      <td>0.561606</td>\n",
       "      <td>0.666709</td>\n",
       "      <td>0.756573</td>\n",
       "      <td>0.882127</td>\n",
       "      <td>0.934686</td>\n",
       "      <td>0.986215</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.697318</td>\n",
       "      <td>0.686249</td>\n",
       "      <td>0.676025</td>\n",
       "      <td>0.666469</td>\n",
       "      <td>0.655576</td>\n",
       "      <td>0.646196</td>\n",
       "      <td>0.629693</td>\n",
       "      <td>0.612494</td>\n",
       "      <td>0.600772</td>\n",
       "      <td>0.396364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y11</th>\n",
       "      <td>0.113074</td>\n",
       "      <td>0.189052</td>\n",
       "      <td>0.300578</td>\n",
       "      <td>0.495856</td>\n",
       "      <td>0.605743</td>\n",
       "      <td>0.700824</td>\n",
       "      <td>0.827957</td>\n",
       "      <td>0.890668</td>\n",
       "      <td>0.955563</td>\n",
       "      <td>0.987335</td>\n",
       "      <td>...</td>\n",
       "      <td>0.765944</td>\n",
       "      <td>0.755272</td>\n",
       "      <td>0.745069</td>\n",
       "      <td>0.735464</td>\n",
       "      <td>0.724620</td>\n",
       "      <td>0.715133</td>\n",
       "      <td>0.698798</td>\n",
       "      <td>0.681526</td>\n",
       "      <td>0.668925</td>\n",
       "      <td>0.404693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y12</th>\n",
       "      <td>0.067639</td>\n",
       "      <td>0.135746</td>\n",
       "      <td>0.240337</td>\n",
       "      <td>0.434961</td>\n",
       "      <td>0.547379</td>\n",
       "      <td>0.645092</td>\n",
       "      <td>0.769457</td>\n",
       "      <td>0.840942</td>\n",
       "      <td>0.915927</td>\n",
       "      <td>0.961707</td>\n",
       "      <td>...</td>\n",
       "      <td>0.827954</td>\n",
       "      <td>0.818185</td>\n",
       "      <td>0.808582</td>\n",
       "      <td>0.799446</td>\n",
       "      <td>0.789197</td>\n",
       "      <td>0.779736</td>\n",
       "      <td>0.764203</td>\n",
       "      <td>0.747268</td>\n",
       "      <td>0.734331</td>\n",
       "      <td>0.400532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y13</th>\n",
       "      <td>0.027930</td>\n",
       "      <td>0.088339</td>\n",
       "      <td>0.186194</td>\n",
       "      <td>0.377887</td>\n",
       "      <td>0.491958</td>\n",
       "      <td>0.590783</td>\n",
       "      <td>0.710902</td>\n",
       "      <td>0.788478</td>\n",
       "      <td>0.870787</td>\n",
       "      <td>0.927263</td>\n",
       "      <td>...</td>\n",
       "      <td>0.878790</td>\n",
       "      <td>0.869917</td>\n",
       "      <td>0.861133</td>\n",
       "      <td>0.852523</td>\n",
       "      <td>0.842832</td>\n",
       "      <td>0.833538</td>\n",
       "      <td>0.818575</td>\n",
       "      <td>0.802035</td>\n",
       "      <td>0.789075</td>\n",
       "      <td>0.395042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y14</th>\n",
       "      <td>0.000434</td>\n",
       "      <td>0.053646</td>\n",
       "      <td>0.144561</td>\n",
       "      <td>0.325972</td>\n",
       "      <td>0.439855</td>\n",
       "      <td>0.538833</td>\n",
       "      <td>0.654592</td>\n",
       "      <td>0.735886</td>\n",
       "      <td>0.824146</td>\n",
       "      <td>0.889308</td>\n",
       "      <td>...</td>\n",
       "      <td>0.915520</td>\n",
       "      <td>0.907569</td>\n",
       "      <td>0.899805</td>\n",
       "      <td>0.891921</td>\n",
       "      <td>0.883016</td>\n",
       "      <td>0.874136</td>\n",
       "      <td>0.859702</td>\n",
       "      <td>0.843553</td>\n",
       "      <td>0.831086</td>\n",
       "      <td>0.383823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y15</th>\n",
       "      <td>-0.020124</td>\n",
       "      <td>0.025240</td>\n",
       "      <td>0.108194</td>\n",
       "      <td>0.279106</td>\n",
       "      <td>0.390990</td>\n",
       "      <td>0.488898</td>\n",
       "      <td>0.599678</td>\n",
       "      <td>0.684630</td>\n",
       "      <td>0.777030</td>\n",
       "      <td>0.848955</td>\n",
       "      <td>...</td>\n",
       "      <td>0.944434</td>\n",
       "      <td>0.937602</td>\n",
       "      <td>0.930818</td>\n",
       "      <td>0.923712</td>\n",
       "      <td>0.915694</td>\n",
       "      <td>0.906986</td>\n",
       "      <td>0.893237</td>\n",
       "      <td>0.877501</td>\n",
       "      <td>0.865533</td>\n",
       "      <td>0.369468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y16</th>\n",
       "      <td>-0.033699</td>\n",
       "      <td>0.005284</td>\n",
       "      <td>0.080980</td>\n",
       "      <td>0.244957</td>\n",
       "      <td>0.353385</td>\n",
       "      <td>0.449383</td>\n",
       "      <td>0.553096</td>\n",
       "      <td>0.639782</td>\n",
       "      <td>0.734159</td>\n",
       "      <td>0.811103</td>\n",
       "      <td>...</td>\n",
       "      <td>0.964822</td>\n",
       "      <td>0.958908</td>\n",
       "      <td>0.953225</td>\n",
       "      <td>0.947049</td>\n",
       "      <td>0.939973</td>\n",
       "      <td>0.931972</td>\n",
       "      <td>0.919077</td>\n",
       "      <td>0.903791</td>\n",
       "      <td>0.892599</td>\n",
       "      <td>0.353744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y17</th>\n",
       "      <td>-0.041754</td>\n",
       "      <td>-0.007233</td>\n",
       "      <td>0.062358</td>\n",
       "      <td>0.218696</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>0.418533</td>\n",
       "      <td>0.517123</td>\n",
       "      <td>0.604360</td>\n",
       "      <td>0.698845</td>\n",
       "      <td>0.778759</td>\n",
       "      <td>...</td>\n",
       "      <td>0.978094</td>\n",
       "      <td>0.972957</td>\n",
       "      <td>0.968086</td>\n",
       "      <td>0.962731</td>\n",
       "      <td>0.956371</td>\n",
       "      <td>0.948750</td>\n",
       "      <td>0.936509</td>\n",
       "      <td>0.921673</td>\n",
       "      <td>0.911411</td>\n",
       "      <td>0.339447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y18</th>\n",
       "      <td>-0.041032</td>\n",
       "      <td>-0.010544</td>\n",
       "      <td>0.054692</td>\n",
       "      <td>0.202820</td>\n",
       "      <td>0.305721</td>\n",
       "      <td>0.398034</td>\n",
       "      <td>0.491670</td>\n",
       "      <td>0.578388</td>\n",
       "      <td>0.671896</td>\n",
       "      <td>0.753446</td>\n",
       "      <td>...</td>\n",
       "      <td>0.986775</td>\n",
       "      <td>0.982249</td>\n",
       "      <td>0.978050</td>\n",
       "      <td>0.973473</td>\n",
       "      <td>0.967772</td>\n",
       "      <td>0.960806</td>\n",
       "      <td>0.949241</td>\n",
       "      <td>0.935206</td>\n",
       "      <td>0.925847</td>\n",
       "      <td>0.332925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y19</th>\n",
       "      <td>-0.040610</td>\n",
       "      <td>-0.012963</td>\n",
       "      <td>0.048976</td>\n",
       "      <td>0.191651</td>\n",
       "      <td>0.291575</td>\n",
       "      <td>0.382224</td>\n",
       "      <td>0.470931</td>\n",
       "      <td>0.557435</td>\n",
       "      <td>0.649836</td>\n",
       "      <td>0.732719</td>\n",
       "      <td>...</td>\n",
       "      <td>0.992937</td>\n",
       "      <td>0.989303</td>\n",
       "      <td>0.985714</td>\n",
       "      <td>0.981889</td>\n",
       "      <td>0.976906</td>\n",
       "      <td>0.970482</td>\n",
       "      <td>0.959665</td>\n",
       "      <td>0.946314</td>\n",
       "      <td>0.937663</td>\n",
       "      <td>0.326936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y20</th>\n",
       "      <td>-0.040560</td>\n",
       "      <td>-0.014755</td>\n",
       "      <td>0.045093</td>\n",
       "      <td>0.184095</td>\n",
       "      <td>0.282384</td>\n",
       "      <td>0.371789</td>\n",
       "      <td>0.457641</td>\n",
       "      <td>0.543778</td>\n",
       "      <td>0.635276</td>\n",
       "      <td>0.718621</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996538</td>\n",
       "      <td>0.993642</td>\n",
       "      <td>0.990654</td>\n",
       "      <td>0.987294</td>\n",
       "      <td>0.982835</td>\n",
       "      <td>0.976699</td>\n",
       "      <td>0.966452</td>\n",
       "      <td>0.953289</td>\n",
       "      <td>0.945210</td>\n",
       "      <td>0.324193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y21</th>\n",
       "      <td>-0.038262</td>\n",
       "      <td>-0.014794</td>\n",
       "      <td>0.042620</td>\n",
       "      <td>0.177831</td>\n",
       "      <td>0.274508</td>\n",
       "      <td>0.362718</td>\n",
       "      <td>0.446338</td>\n",
       "      <td>0.532189</td>\n",
       "      <td>0.622635</td>\n",
       "      <td>0.706427</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998805</td>\n",
       "      <td>0.996689</td>\n",
       "      <td>0.994011</td>\n",
       "      <td>0.991130</td>\n",
       "      <td>0.986968</td>\n",
       "      <td>0.981190</td>\n",
       "      <td>0.971503</td>\n",
       "      <td>0.958571</td>\n",
       "      <td>0.950768</td>\n",
       "      <td>0.320207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y22</th>\n",
       "      <td>-0.035390</td>\n",
       "      <td>-0.013344</td>\n",
       "      <td>0.043184</td>\n",
       "      <td>0.175319</td>\n",
       "      <td>0.269906</td>\n",
       "      <td>0.356924</td>\n",
       "      <td>0.438115</td>\n",
       "      <td>0.523683</td>\n",
       "      <td>0.613232</td>\n",
       "      <td>0.697318</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998760</td>\n",
       "      <td>0.996776</td>\n",
       "      <td>0.994268</td>\n",
       "      <td>0.990660</td>\n",
       "      <td>0.985263</td>\n",
       "      <td>0.976346</td>\n",
       "      <td>0.963966</td>\n",
       "      <td>0.956651</td>\n",
       "      <td>0.321416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y23</th>\n",
       "      <td>-0.033509</td>\n",
       "      <td>-0.013207</td>\n",
       "      <td>0.041507</td>\n",
       "      <td>0.171076</td>\n",
       "      <td>0.263650</td>\n",
       "      <td>0.349396</td>\n",
       "      <td>0.427734</td>\n",
       "      <td>0.513055</td>\n",
       "      <td>0.601722</td>\n",
       "      <td>0.686249</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998760</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998799</td>\n",
       "      <td>0.996903</td>\n",
       "      <td>0.993851</td>\n",
       "      <td>0.989163</td>\n",
       "      <td>0.981033</td>\n",
       "      <td>0.969129</td>\n",
       "      <td>0.962100</td>\n",
       "      <td>0.317715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y24</th>\n",
       "      <td>-0.033100</td>\n",
       "      <td>-0.014331</td>\n",
       "      <td>0.038532</td>\n",
       "      <td>0.165194</td>\n",
       "      <td>0.256514</td>\n",
       "      <td>0.341417</td>\n",
       "      <td>0.417970</td>\n",
       "      <td>0.502979</td>\n",
       "      <td>0.591313</td>\n",
       "      <td>0.676025</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996776</td>\n",
       "      <td>0.998799</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998869</td>\n",
       "      <td>0.996711</td>\n",
       "      <td>0.992846</td>\n",
       "      <td>0.985852</td>\n",
       "      <td>0.974561</td>\n",
       "      <td>0.967827</td>\n",
       "      <td>0.316342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y25</th>\n",
       "      <td>-0.031421</td>\n",
       "      <td>-0.014184</td>\n",
       "      <td>0.037036</td>\n",
       "      <td>0.161121</td>\n",
       "      <td>0.251142</td>\n",
       "      <td>0.335017</td>\n",
       "      <td>0.410199</td>\n",
       "      <td>0.494442</td>\n",
       "      <td>0.581980</td>\n",
       "      <td>0.666469</td>\n",
       "      <td>...</td>\n",
       "      <td>0.994268</td>\n",
       "      <td>0.996903</td>\n",
       "      <td>0.998869</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998740</td>\n",
       "      <td>0.995807</td>\n",
       "      <td>0.989800</td>\n",
       "      <td>0.979216</td>\n",
       "      <td>0.972729</td>\n",
       "      <td>0.312726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y26</th>\n",
       "      <td>-0.030679</td>\n",
       "      <td>-0.015282</td>\n",
       "      <td>0.033741</td>\n",
       "      <td>0.154877</td>\n",
       "      <td>0.243456</td>\n",
       "      <td>0.326581</td>\n",
       "      <td>0.400641</td>\n",
       "      <td>0.484459</td>\n",
       "      <td>0.571155</td>\n",
       "      <td>0.655576</td>\n",
       "      <td>...</td>\n",
       "      <td>0.990660</td>\n",
       "      <td>0.993851</td>\n",
       "      <td>0.996711</td>\n",
       "      <td>0.998740</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998262</td>\n",
       "      <td>0.993728</td>\n",
       "      <td>0.984314</td>\n",
       "      <td>0.978210</td>\n",
       "      <td>0.308714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y27</th>\n",
       "      <td>-0.030720</td>\n",
       "      <td>-0.016562</td>\n",
       "      <td>0.030835</td>\n",
       "      <td>0.149779</td>\n",
       "      <td>0.237279</td>\n",
       "      <td>0.319611</td>\n",
       "      <td>0.392642</td>\n",
       "      <td>0.475934</td>\n",
       "      <td>0.562000</td>\n",
       "      <td>0.646196</td>\n",
       "      <td>...</td>\n",
       "      <td>0.985263</td>\n",
       "      <td>0.989163</td>\n",
       "      <td>0.992846</td>\n",
       "      <td>0.995807</td>\n",
       "      <td>0.998262</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.997680</td>\n",
       "      <td>0.990321</td>\n",
       "      <td>0.984543</td>\n",
       "      <td>0.305478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y28</th>\n",
       "      <td>-0.033231</td>\n",
       "      <td>-0.020688</td>\n",
       "      <td>0.024460</td>\n",
       "      <td>0.140236</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>0.306904</td>\n",
       "      <td>0.378707</td>\n",
       "      <td>0.460783</td>\n",
       "      <td>0.545999</td>\n",
       "      <td>0.629693</td>\n",
       "      <td>...</td>\n",
       "      <td>0.976346</td>\n",
       "      <td>0.981033</td>\n",
       "      <td>0.985852</td>\n",
       "      <td>0.989800</td>\n",
       "      <td>0.993728</td>\n",
       "      <td>0.997680</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.994763</td>\n",
       "      <td>0.989504</td>\n",
       "      <td>0.300597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y29</th>\n",
       "      <td>-0.034029</td>\n",
       "      <td>-0.023275</td>\n",
       "      <td>0.020072</td>\n",
       "      <td>0.131529</td>\n",
       "      <td>0.215325</td>\n",
       "      <td>0.294924</td>\n",
       "      <td>0.364795</td>\n",
       "      <td>0.445681</td>\n",
       "      <td>0.529506</td>\n",
       "      <td>0.612494</td>\n",
       "      <td>...</td>\n",
       "      <td>0.963966</td>\n",
       "      <td>0.969129</td>\n",
       "      <td>0.974561</td>\n",
       "      <td>0.979216</td>\n",
       "      <td>0.984314</td>\n",
       "      <td>0.990321</td>\n",
       "      <td>0.994763</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.996866</td>\n",
       "      <td>0.303217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y30</th>\n",
       "      <td>-0.028430</td>\n",
       "      <td>-0.018669</td>\n",
       "      <td>0.022639</td>\n",
       "      <td>0.128906</td>\n",
       "      <td>0.211075</td>\n",
       "      <td>0.289450</td>\n",
       "      <td>0.356872</td>\n",
       "      <td>0.436325</td>\n",
       "      <td>0.518750</td>\n",
       "      <td>0.600772</td>\n",
       "      <td>...</td>\n",
       "      <td>0.956651</td>\n",
       "      <td>0.962100</td>\n",
       "      <td>0.967827</td>\n",
       "      <td>0.972729</td>\n",
       "      <td>0.978210</td>\n",
       "      <td>0.984543</td>\n",
       "      <td>0.989504</td>\n",
       "      <td>0.996866</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.302594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>label</th>\n",
       "      <td>0.074123</td>\n",
       "      <td>0.103914</td>\n",
       "      <td>0.157713</td>\n",
       "      <td>0.221197</td>\n",
       "      <td>0.253040</td>\n",
       "      <td>0.281542</td>\n",
       "      <td>0.338080</td>\n",
       "      <td>0.365451</td>\n",
       "      <td>0.386091</td>\n",
       "      <td>0.396364</td>\n",
       "      <td>...</td>\n",
       "      <td>0.321416</td>\n",
       "      <td>0.317715</td>\n",
       "      <td>0.316342</td>\n",
       "      <td>0.312726</td>\n",
       "      <td>0.308714</td>\n",
       "      <td>0.305478</td>\n",
       "      <td>0.300597</td>\n",
       "      <td>0.303217</td>\n",
       "      <td>0.302594</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             y1        y2        y3        y4        y5        y6        y7  \\\n",
       "y1     1.000000  0.978730  0.883421  0.704102  0.636743  0.574155  0.386446   \n",
       "y2     0.978730  1.000000  0.935518  0.782180  0.719922  0.659100  0.483293   \n",
       "y3     0.883421  0.935518  1.000000  0.887740  0.833279  0.772677  0.607739   \n",
       "y4     0.704102  0.782180  0.887740  1.000000  0.977621  0.931081  0.786800   \n",
       "y5     0.636743  0.719922  0.833279  0.977621  1.000000  0.979193  0.863372   \n",
       "y6     0.574155  0.659100  0.772677  0.931081  0.979193  1.000000  0.919714   \n",
       "y7     0.386446  0.483293  0.607739  0.786800  0.863372  0.919714  1.000000   \n",
       "y8     0.314423  0.408247  0.532318  0.719421  0.807976  0.877725  0.983649   \n",
       "y9     0.217257  0.308445  0.432067  0.625316  0.725001  0.807496  0.928762   \n",
       "y10    0.161642  0.246008  0.364828  0.561606  0.666709  0.756573  0.882127   \n",
       "y11    0.113074  0.189052  0.300578  0.495856  0.605743  0.700824  0.827957   \n",
       "y12    0.067639  0.135746  0.240337  0.434961  0.547379  0.645092  0.769457   \n",
       "y13    0.027930  0.088339  0.186194  0.377887  0.491958  0.590783  0.710902   \n",
       "y14    0.000434  0.053646  0.144561  0.325972  0.439855  0.538833  0.654592   \n",
       "y15   -0.020124  0.025240  0.108194  0.279106  0.390990  0.488898  0.599678   \n",
       "y16   -0.033699  0.005284  0.080980  0.244957  0.353385  0.449383  0.553096   \n",
       "y17   -0.041754 -0.007233  0.062358  0.218696  0.324454  0.418533  0.517123   \n",
       "y18   -0.041032 -0.010544  0.054692  0.202820  0.305721  0.398034  0.491670   \n",
       "y19   -0.040610 -0.012963  0.048976  0.191651  0.291575  0.382224  0.470931   \n",
       "y20   -0.040560 -0.014755  0.045093  0.184095  0.282384  0.371789  0.457641   \n",
       "y21   -0.038262 -0.014794  0.042620  0.177831  0.274508  0.362718  0.446338   \n",
       "y22   -0.035390 -0.013344  0.043184  0.175319  0.269906  0.356924  0.438115   \n",
       "y23   -0.033509 -0.013207  0.041507  0.171076  0.263650  0.349396  0.427734   \n",
       "y24   -0.033100 -0.014331  0.038532  0.165194  0.256514  0.341417  0.417970   \n",
       "y25   -0.031421 -0.014184  0.037036  0.161121  0.251142  0.335017  0.410199   \n",
       "y26   -0.030679 -0.015282  0.033741  0.154877  0.243456  0.326581  0.400641   \n",
       "y27   -0.030720 -0.016562  0.030835  0.149779  0.237279  0.319611  0.392642   \n",
       "y28   -0.033231 -0.020688  0.024460  0.140236  0.225852  0.306904  0.378707   \n",
       "y29   -0.034029 -0.023275  0.020072  0.131529  0.215325  0.294924  0.364795   \n",
       "y30   -0.028430 -0.018669  0.022639  0.128906  0.211075  0.289450  0.356872   \n",
       "label  0.074123  0.103914  0.157713  0.221197  0.253040  0.281542  0.338080   \n",
       "\n",
       "             y8        y9       y10  ...       y22       y23       y24  \\\n",
       "y1     0.314423  0.217257  0.161642  ... -0.035390 -0.033509 -0.033100   \n",
       "y2     0.408247  0.308445  0.246008  ... -0.013344 -0.013207 -0.014331   \n",
       "y3     0.532318  0.432067  0.364828  ...  0.043184  0.041507  0.038532   \n",
       "y4     0.719421  0.625316  0.561606  ...  0.175319  0.171076  0.165194   \n",
       "y5     0.807976  0.725001  0.666709  ...  0.269906  0.263650  0.256514   \n",
       "y6     0.877725  0.807496  0.756573  ...  0.356924  0.349396  0.341417   \n",
       "y7     0.983649  0.928762  0.882127  ...  0.438115  0.427734  0.417970   \n",
       "y8     1.000000  0.967053  0.934686  ...  0.523683  0.513055  0.502979   \n",
       "y9     0.967053  1.000000  0.986215  ...  0.613232  0.601722  0.591313   \n",
       "y10    0.934686  0.986215  1.000000  ...  0.697318  0.686249  0.676025   \n",
       "y11    0.890668  0.955563  0.987335  ...  0.765944  0.755272  0.745069   \n",
       "y12    0.840942  0.915927  0.961707  ...  0.827954  0.818185  0.808582   \n",
       "y13    0.788478  0.870787  0.927263  ...  0.878790  0.869917  0.861133   \n",
       "y14    0.735886  0.824146  0.889308  ...  0.915520  0.907569  0.899805   \n",
       "y15    0.684630  0.777030  0.848955  ...  0.944434  0.937602  0.930818   \n",
       "y16    0.639782  0.734159  0.811103  ...  0.964822  0.958908  0.953225   \n",
       "y17    0.604360  0.698845  0.778759  ...  0.978094  0.972957  0.968086   \n",
       "y18    0.578388  0.671896  0.753446  ...  0.986775  0.982249  0.978050   \n",
       "y19    0.557435  0.649836  0.732719  ...  0.992937  0.989303  0.985714   \n",
       "y20    0.543778  0.635276  0.718621  ...  0.996538  0.993642  0.990654   \n",
       "y21    0.532189  0.622635  0.706427  ...  0.998805  0.996689  0.994011   \n",
       "y22    0.523683  0.613232  0.697318  ...  1.000000  0.998760  0.996776   \n",
       "y23    0.513055  0.601722  0.686249  ...  0.998760  1.000000  0.998799   \n",
       "y24    0.502979  0.591313  0.676025  ...  0.996776  0.998799  1.000000   \n",
       "y25    0.494442  0.581980  0.666469  ...  0.994268  0.996903  0.998869   \n",
       "y26    0.484459  0.571155  0.655576  ...  0.990660  0.993851  0.996711   \n",
       "y27    0.475934  0.562000  0.646196  ...  0.985263  0.989163  0.992846   \n",
       "y28    0.460783  0.545999  0.629693  ...  0.976346  0.981033  0.985852   \n",
       "y29    0.445681  0.529506  0.612494  ...  0.963966  0.969129  0.974561   \n",
       "y30    0.436325  0.518750  0.600772  ...  0.956651  0.962100  0.967827   \n",
       "label  0.365451  0.386091  0.396364  ...  0.321416  0.317715  0.316342   \n",
       "\n",
       "            y25       y26       y27       y28       y29       y30     label  \n",
       "y1    -0.031421 -0.030679 -0.030720 -0.033231 -0.034029 -0.028430  0.074123  \n",
       "y2    -0.014184 -0.015282 -0.016562 -0.020688 -0.023275 -0.018669  0.103914  \n",
       "y3     0.037036  0.033741  0.030835  0.024460  0.020072  0.022639  0.157713  \n",
       "y4     0.161121  0.154877  0.149779  0.140236  0.131529  0.128906  0.221197  \n",
       "y5     0.251142  0.243456  0.237279  0.225852  0.215325  0.211075  0.253040  \n",
       "y6     0.335017  0.326581  0.319611  0.306904  0.294924  0.289450  0.281542  \n",
       "y7     0.410199  0.400641  0.392642  0.378707  0.364795  0.356872  0.338080  \n",
       "y8     0.494442  0.484459  0.475934  0.460783  0.445681  0.436325  0.365451  \n",
       "y9     0.581980  0.571155  0.562000  0.545999  0.529506  0.518750  0.386091  \n",
       "y10    0.666469  0.655576  0.646196  0.629693  0.612494  0.600772  0.396364  \n",
       "y11    0.735464  0.724620  0.715133  0.698798  0.681526  0.668925  0.404693  \n",
       "y12    0.799446  0.789197  0.779736  0.764203  0.747268  0.734331  0.400532  \n",
       "y13    0.852523  0.842832  0.833538  0.818575  0.802035  0.789075  0.395042  \n",
       "y14    0.891921  0.883016  0.874136  0.859702  0.843553  0.831086  0.383823  \n",
       "y15    0.923712  0.915694  0.906986  0.893237  0.877501  0.865533  0.369468  \n",
       "y16    0.947049  0.939973  0.931972  0.919077  0.903791  0.892599  0.353744  \n",
       "y17    0.962731  0.956371  0.948750  0.936509  0.921673  0.911411  0.339447  \n",
       "y18    0.973473  0.967772  0.960806  0.949241  0.935206  0.925847  0.332925  \n",
       "y19    0.981889  0.976906  0.970482  0.959665  0.946314  0.937663  0.326936  \n",
       "y20    0.987294  0.982835  0.976699  0.966452  0.953289  0.945210  0.324193  \n",
       "y21    0.991130  0.986968  0.981190  0.971503  0.958571  0.950768  0.320207  \n",
       "y22    0.994268  0.990660  0.985263  0.976346  0.963966  0.956651  0.321416  \n",
       "y23    0.996903  0.993851  0.989163  0.981033  0.969129  0.962100  0.317715  \n",
       "y24    0.998869  0.996711  0.992846  0.985852  0.974561  0.967827  0.316342  \n",
       "y25    1.000000  0.998740  0.995807  0.989800  0.979216  0.972729  0.312726  \n",
       "y26    0.998740  1.000000  0.998262  0.993728  0.984314  0.978210  0.308714  \n",
       "y27    0.995807  0.998262  1.000000  0.997680  0.990321  0.984543  0.305478  \n",
       "y28    0.989800  0.993728  0.997680  1.000000  0.994763  0.989504  0.300597  \n",
       "y29    0.979216  0.984314  0.990321  0.994763  1.000000  0.996866  0.303217  \n",
       "y30    0.972729  0.978210  0.984543  0.989504  0.996866  1.000000  0.302594  \n",
       "label  0.312726  0.308714  0.305478  0.300597  0.303217  0.302594  1.000000  \n",
       "\n",
       "[31 rows x 31 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#시계열 데이터 다중공선성(독립변수간에 상관관계가 높은 경우 즉, 선형독립이 아닌 경우) 문제 발생\n",
    "#다중공선성 문제의 경우 과적합 문제가 있음\n",
    "#다중공선성(공선: 1차함수 그래프 위에서 기울기와 y절편이 같음)\n",
    "# -특성 간의 공선성(데이터 유사성) 문제  ->  특성과 특성간의 상관관계가 90% 이상인 것  \n",
    "#   ->  특성을 여러개 넣는 의미가 없음  ->  특성과 라벨 간의 상관관계가 더 낮은 특성을 탈락시키면 된다\n",
    "# -특성과 라벨간의 공선성(데이터 유사성) 문제  ->  특성과 라벨간의 상관관계가 90% 이상인 것 \n",
    "#   ->  분석의 의미가 없음  ->  유사성이 높은 특성을 삭제하거나 처리해야 (다른 특성들과의 관계가 보임?)\n",
    "#        (연역 논증의 동어반복의 오류와 비슷?)\n",
    "\n",
    "\n",
    "#해결방법 (1) 변수 선택법으로 의존적인 변수 삭제\n",
    "#         (2) PCA(principal component analysis) 방법으로 위존적인 성분 삭제\n",
    "#         (3) 규제방법\n",
    "            \n",
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "37addb46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x1080 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(30,15))\n",
    "cmap = sns .light_palette(\"navy\", as_cmap=True)\n",
    "sns.heatmap(data.corr(), annot=True, cmap=cmap)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2be1bb27",
   "metadata": {},
   "source": [
    "### VIF(분산팽창계수)\n",
    "- 다중 공선성을 없애는 가장 기본적인 방법은 다른 독립변수에 의존하는 변수를 없애는 것이다.\n",
    "- 기장 의존적인 독립변수를 선택하는 방법으로는 VIF(Variance Inflation Factor)를 사용할 수 있다.\n",
    "    - VIF는 특정 독립변수를 나머지 독립변수로 Q.{적합했을 때} 성능을 나타낸 것이다.\n",
    "    - 다른 변수에 의존할수록 VIF값이 높게 나온다.\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ed38dc42",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF Factor</th>\n",
       "      <th>features</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44.271064</td>\n",
       "      <td>y1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>86.009634</td>\n",
       "      <td>y2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>42.879934</td>\n",
       "      <td>y3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>289.175312</td>\n",
       "      <td>y4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1136.923495</td>\n",
       "      <td>y5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>907.134314</td>\n",
       "      <td>y6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1535.476182</td>\n",
       "      <td>y7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2468.500068</td>\n",
       "      <td>y8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3855.505495</td>\n",
       "      <td>y9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8820.790291</td>\n",
       "      <td>y10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>9381.786289</td>\n",
       "      <td>y11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12019.128536</td>\n",
       "      <td>y12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15844.466695</td>\n",
       "      <td>y13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>19113.654843</td>\n",
       "      <td>y14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>23348.312036</td>\n",
       "      <td>y15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>29270.205261</td>\n",
       "      <td>y16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>33668.616493</td>\n",
       "      <td>y17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>39415.223492</td>\n",
       "      <td>y18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>46454.681347</td>\n",
       "      <td>y19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>48466.356715</td>\n",
       "      <td>y20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>53829.029998</td>\n",
       "      <td>y21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>54315.667249</td>\n",
       "      <td>y22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>51523.254574</td>\n",
       "      <td>y23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>51623.625463</td>\n",
       "      <td>y24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>52976.854896</td>\n",
       "      <td>y25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>45721.044968</td>\n",
       "      <td>y26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>42290.928874</td>\n",
       "      <td>y27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>18347.514133</td>\n",
       "      <td>y28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>12268.073766</td>\n",
       "      <td>y29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5769.810631</td>\n",
       "      <td>y30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      VIF Factor features\n",
       "0      44.271064       y1\n",
       "1      86.009634       y2\n",
       "2      42.879934       y3\n",
       "3     289.175312       y4\n",
       "4    1136.923495       y5\n",
       "5     907.134314       y6\n",
       "6    1535.476182       y7\n",
       "7    2468.500068       y8\n",
       "8    3855.505495       y9\n",
       "9    8820.790291      y10\n",
       "10   9381.786289      y11\n",
       "11  12019.128536      y12\n",
       "12  15844.466695      y13\n",
       "13  19113.654843      y14\n",
       "14  23348.312036      y15\n",
       "15  29270.205261      y16\n",
       "16  33668.616493      y17\n",
       "17  39415.223492      y18\n",
       "18  46454.681347      y19\n",
       "19  48466.356715      y20\n",
       "20  53829.029998      y21\n",
       "21  54315.667249      y22\n",
       "22  51523.254574      y23\n",
       "23  51623.625463      y24\n",
       "24  52976.854896      y25\n",
       "25  45721.044968      y26\n",
       "26  42290.928874      y27\n",
       "27  18347.514133      y28\n",
       "28  12268.073766      y29\n",
       "29   5769.810631      y30"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "\n",
    "X=data.iloc[:,:-1]\n",
    "y=data.iloc[:,-1]\n",
    "\n",
    "vif = pd.DataFrame()\n",
    "vif[\"VIF Factor\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n",
    "vif[\"features\"] = X.columns\n",
    "vif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7c59d582",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF Factor</th>\n",
       "      <th>features</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>42.879934</td>\n",
       "      <td>y3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44.271064</td>\n",
       "      <td>y1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>86.009634</td>\n",
       "      <td>y2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>289.175312</td>\n",
       "      <td>y4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>907.134314</td>\n",
       "      <td>y6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1136.923495</td>\n",
       "      <td>y5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1535.476182</td>\n",
       "      <td>y7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2468.500068</td>\n",
       "      <td>y8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3855.505495</td>\n",
       "      <td>y9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5769.810631</td>\n",
       "      <td>y30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8820.790291</td>\n",
       "      <td>y10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>9381.786289</td>\n",
       "      <td>y11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12019.128536</td>\n",
       "      <td>y12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>12268.073766</td>\n",
       "      <td>y29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15844.466695</td>\n",
       "      <td>y13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>18347.514133</td>\n",
       "      <td>y28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>19113.654843</td>\n",
       "      <td>y14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>23348.312036</td>\n",
       "      <td>y15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>29270.205261</td>\n",
       "      <td>y16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>33668.616493</td>\n",
       "      <td>y17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>39415.223492</td>\n",
       "      <td>y18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>42290.928874</td>\n",
       "      <td>y27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>45721.044968</td>\n",
       "      <td>y26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>46454.681347</td>\n",
       "      <td>y19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>48466.356715</td>\n",
       "      <td>y20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>51523.254574</td>\n",
       "      <td>y23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>51623.625463</td>\n",
       "      <td>y24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>52976.854896</td>\n",
       "      <td>y25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>53829.029998</td>\n",
       "      <td>y21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>54315.667249</td>\n",
       "      <td>y22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      VIF Factor features\n",
       "2      42.879934       y3\n",
       "0      44.271064       y1\n",
       "1      86.009634       y2\n",
       "3     289.175312       y4\n",
       "5     907.134314       y6\n",
       "4    1136.923495       y5\n",
       "6    1535.476182       y7\n",
       "7    2468.500068       y8\n",
       "8    3855.505495       y9\n",
       "29   5769.810631      y30\n",
       "9    8820.790291      y10\n",
       "10   9381.786289      y11\n",
       "11  12019.128536      y12\n",
       "28  12268.073766      y29\n",
       "12  15844.466695      y13\n",
       "27  18347.514133      y28\n",
       "13  19113.654843      y14\n",
       "14  23348.312036      y15\n",
       "15  29270.205261      y16\n",
       "16  33668.616493      y17\n",
       "17  39415.223492      y18\n",
       "26  42290.928874      y27\n",
       "25  45721.044968      y26\n",
       "18  46454.681347      y19\n",
       "19  48466.356715      y20\n",
       "22  51523.254574      y23\n",
       "23  51623.625463      y24\n",
       "24  52976.854896      y25\n",
       "20  53829.029998      y21\n",
       "21  54315.667249      y22"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#오름차순으로 정렬 (낮은 것 부터 순서대로 넣으니까)\n",
    "vif_sort = vif.sort_values(by='VIF Factor', ascending=True)\n",
    "vif_sort"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27b98ec8",
   "metadata": {},
   "source": [
    "0: ~75 / 1: / 2: / 3: \n",
    "                \n",
    "                #merge 동일한 값 끼리 연결하는 것 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a523a36f",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [21]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GradientBoostingRegressor\n\u001b[0;32m      4\u001b[0m GBR \u001b[38;5;241m=\u001b[39m GradientBoostingRegressor(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m, max_depth\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m----> 5\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28mprint\u001b[39m(GBR\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from tqdm import tqdm \n",
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBR = GradientBoostingRegressor(random_state=0, max_depth=1)\n",
    "GBR.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(GBR.score(X_train, y_train))\n",
    "print(GBR.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = GBR.predict(X_train)\n",
    "test_pred_y = GBR.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "\n",
    "y_colname = [\"label\"]\n",
    "X_colname = ['y1', 'y2', 'y3', 'y4', 'y5', 'y6', 'y7', 'y8', 'y9', 'y10', 'y11',\n",
    "        'y12', 'y13', 'y14', 'y15', 'y16', 'y17', 'y18', 'y19', 'y20', 'y21',\n",
    "        'y22', 'y23', 'y24', 'y25', 'y26', 'y27', 'y28', 'y29', 'y30']\n",
    "\n",
    "for i in tqdm(range(1,len(X.columns)+1)):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c3f8d6e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     y3\n",
      "0     7\n",
      "1     7\n",
      "2     8\n",
      "3     1\n",
      "4    18\n",
      "..   ..\n",
      "995  12\n",
      "996   5\n",
      "997   8\n",
      "998  10\n",
      "999   4\n",
      "\n",
      "[1000 rows x 1 columns]\n",
      "     y3  y1\n",
      "0     7   0\n",
      "1     7   0\n",
      "2     8  -8\n",
      "3     1  -5\n",
      "4    18  12\n",
      "..   ..  ..\n",
      "995  12   3\n",
      "996   5   1\n",
      "997   8   1\n",
      "998  10   1\n",
      "999   4   0\n",
      "\n",
      "[1000 rows x 2 columns]\n",
      "     y3  y1  y2\n",
      "0     7   0   1\n",
      "1     7   0   3\n",
      "2     8  -8   0\n",
      "3     1  -5  -1\n",
      "4    18  12  15\n",
      "..   ..  ..  ..\n",
      "995  12   3   6\n",
      "996   5   1   2\n",
      "997   8   1   3\n",
      "998  10   1   4\n",
      "999   4   0   0\n",
      "\n",
      "[1000 rows x 3 columns]\n",
      "     y3  y1  y2  y4\n",
      "0     7   0   1  13\n",
      "1     7   0   3  13\n",
      "2     8  -8   0  15\n",
      "3     1  -5  -1   5\n",
      "4    18  12  15  22\n",
      "..   ..  ..  ..  ..\n",
      "995  12   3   6  19\n",
      "996   5   1   2  11\n",
      "997   8   1   3  15\n",
      "998  10   1   4  17\n",
      "999   4   0   0  11\n",
      "\n",
      "[1000 rows x 4 columns]\n",
      "     y3  y1  y2  y4  y6\n",
      "0     7   0   1  13  31\n",
      "1     7   0   3  13  22\n",
      "2     8  -8   0  15  27\n",
      "3     1  -5  -1   5  15\n",
      "4    18  12  15  22  25\n",
      "..   ..  ..  ..  ..  ..\n",
      "995  12   3   6  19  35\n",
      "996   5   1   2  11  22\n",
      "997   8   1   3  15  29\n",
      "998  10   1   4  17  29\n",
      "999   4   0   0  11  23\n",
      "\n",
      "[1000 rows x 5 columns]\n",
      "     y3  y1  y2  y4  y6  y5\n",
      "0     7   0   1  13  31  22\n",
      "1     7   0   3  13  22  18\n",
      "2     8  -8   0  15  27  22\n",
      "3     1  -5  -1   5  15  11\n",
      "4    18  12  15  22  25  23\n",
      "..   ..  ..  ..  ..  ..  ..\n",
      "995  12   3   6  19  35  27\n",
      "996   5   1   2  11  22  17\n",
      "997   8   1   3  15  29  23\n",
      "998  10   1   4  17  29  23\n",
      "999   4   0   0  11  23  17\n",
      "\n",
      "[1000 rows x 6 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7\n",
      "0     7   0   1  13  31  22  35\n",
      "1     7   0   3  13  22  18  29\n",
      "2     8  -8   0  15  27  22  30\n",
      "3     1  -5  -1   5  15  11  19\n",
      "4    18  12  15  22  25  23  27\n",
      "..   ..  ..  ..  ..  ..  ..  ..\n",
      "995  12   3   6  19  35  27  42\n",
      "996   5   1   2  11  22  17  28\n",
      "997   8   1   3  15  29  23  36\n",
      "998  10   1   4  17  29  23  35\n",
      "999   4   0   0  11  23  17  30\n",
      "\n",
      "[1000 rows x 7 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8\n",
      "0     7   0   1  13  31  22  35  39\n",
      "1     7   0   3  13  22  18  29  31\n",
      "2     8  -8   0  15  27  22  30  33\n",
      "3     1  -5  -1   5  15  11  19  25\n",
      "4    18  12  15  22  25  23  27  29\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..\n",
      "995  12   3   6  19  35  27  42  49\n",
      "996   5   1   2  11  22  17  28  34\n",
      "997   8   1   3  15  29  23  36  43\n",
      "998  10   1   4  17  29  23  35  41\n",
      "999   4   0   0  11  23  17  30  36\n",
      "\n",
      "[1000 rows x 8 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9\n",
      "0     7   0   1  13  31  22  35  39  44\n",
      "1     7   0   3  13  22  18  29  31  33\n",
      "2     8  -8   0  15  27  22  30  33  37\n",
      "3     1  -5  -1   5  15  11  19  25  29\n",
      "4    18  12  15  22  25  23  27  29  30\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..\n",
      "995  12   3   6  19  35  27  42  49  56\n",
      "996   5   1   2  11  22  17  28  34  39\n",
      "997   8   1   3  15  29  23  36  43  47\n",
      "998  10   1   4  17  29  23  35  41  46\n",
      "999   4   0   0  11  23  17  30  36  40\n",
      "\n",
      "[1000 rows x 9 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30\n",
      "0     7   0   1  13  31  22  35  39  44   68\n",
      "1     7   0   3  13  22  18  29  31  33   54\n",
      "2     8  -8   0  15  27  22  30  33  37   59\n",
      "3     1  -5  -1   5  15  11  19  25  29   36\n",
      "4    18  12  15  22  25  23  27  29  30   31\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79\n",
      "996   5   1   2  11  22  17  28  34  39   46\n",
      "997   8   1   3  15  29  23  36  43  47   56\n",
      "998  10   1   4  17  29  23  35  41  46   57\n",
      "999   4   0   0  11  23  17  30  36  40   64\n",
      "\n",
      "[1000 rows x 10 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10\n",
      "0     7   0   1  13  31  22  35  39  44   68   50\n",
      "1     7   0   3  13  22  18  29  31  33   54   36\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33\n",
      "4    18  12  15  22  25  23  27  29  30   31   31\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60\n",
      "996   5   1   2  11  22  17  28  34  39   46   42\n",
      "997   8   1   3  15  29  23  36  43  47   56   51\n",
      "998  10   1   4  17  29  23  35  41  46   57   50\n",
      "999   4   0   0  11  23  17  30  36  40   64   44\n",
      "\n",
      "[1000 rows x 11 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54\n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37\n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65\n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45\n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54\n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54\n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50\n",
      "\n",
      "[1000 rows x 12 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56\n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39\n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70\n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47\n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55\n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58\n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53\n",
      "\n",
      "[1000 rows x 13 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68\n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37\n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79\n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47\n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57\n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58\n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65\n",
      "\n",
      "[1000 rows x 14 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56\n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40\n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74\n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50\n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58\n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60\n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57\n",
      "\n",
      "[1000 rows x 15 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  y28\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   68\n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   54\n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   58\n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   38\n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   31\n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...\n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   79\n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   47\n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   57\n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   59\n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   65\n",
      "\n",
      "[1000 rows x 16 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  y28  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   57   \n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   59   \n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   65   \n",
      "\n",
      "     y14  \n",
      "0     57  \n",
      "1     47  \n",
      "2     47  \n",
      "3     41  \n",
      "4     32  \n",
      "..   ...  \n",
      "995   76  \n",
      "996   51  \n",
      "997   60  \n",
      "998   62  \n",
      "999   60  \n",
      "\n",
      "[1000 rows x 17 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  y28  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   57   \n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   59   \n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   65   \n",
      "\n",
      "     y14  y15  \n",
      "0     57   58  \n",
      "1     47   49  \n",
      "2     47   48  \n",
      "3     41   41  \n",
      "4     32   32  \n",
      "..   ...  ...  \n",
      "995   76   77  \n",
      "996   51   51  \n",
      "997   60   61  \n",
      "998   62   63  \n",
      "999   60   64  \n",
      "\n",
      "[1000 rows x 18 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  y28  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   57   \n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   59   \n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   65   \n",
      "\n",
      "     y14  y15  y16  \n",
      "0     57   58   60  \n",
      "1     47   49   51  \n",
      "2     47   48   50  \n",
      "3     41   41   41  \n",
      "4     32   32   32  \n",
      "..   ...  ...  ...  \n",
      "995   76   77   78  \n",
      "996   51   51   51  \n",
      "997   60   61   61  \n",
      "998   62   63   64  \n",
      "999   60   64   68  \n",
      "\n",
      "[1000 rows x 19 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  y28  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   57   \n",
      "998  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   59   \n",
      "999   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   65   \n",
      "\n",
      "     y14  y15  y16  y17  \n",
      "0     57   58   60   61  \n",
      "1     47   49   51   53  \n",
      "2     47   48   50   52  \n",
      "3     41   41   41   41  \n",
      "4     32   32   32   32  \n",
      "..   ...  ...  ...  ...  \n",
      "995   76   77   78   79  \n",
      "996   51   51   51   51  \n",
      "997   60   61   61   61  \n",
      "998   62   63   64   65  \n",
      "999   60   64   68   70  \n",
      "\n",
      "[1000 rows x 20 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y11  y12  y29  y13  y28  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   54   56   68   56   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   40   44   54   46   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   43   45   59   46   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   37   39   37   40   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   32   31   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   65   70   79   74   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   45   47   47   50   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   54   55   57   58   57   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   54   58   58   60   59   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   50   53   65   57   65   \n",
      "\n",
      "     y14  y15  y16  y17  y18  \n",
      "0     57   58   60   61   62  \n",
      "1     47   49   51   53   54  \n",
      "2     47   48   50   52   52  \n",
      "3     41   41   41   41   41  \n",
      "4     32   32   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   76   77   78   79   80  \n",
      "996   51   51   51   51   52  \n",
      "997   60   61   61   61   61  \n",
      "998   62   63   64   65   65  \n",
      "999   60   64   68   70   71  \n",
      "\n",
      "[1000 rows x 21 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y12  y29  y13  y28  y14  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   56   68   56   68   57   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   44   54   46   54   47   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   45   59   46   58   47   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   39   37   40   38   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   31   32   31   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   70   79   74   79   76   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   47   47   50   47   51   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   55   57   58   57   60   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   58   58   60   59   62   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   53   65   57   65   60   \n",
      "\n",
      "     y15  y16  y17  y18  y27  \n",
      "0     58   60   61   62   68  \n",
      "1     49   51   53   54   54  \n",
      "2     48   50   52   52   58  \n",
      "3     41   41   41   41   38  \n",
      "4     32   32   32   32   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   77   78   79   80   79  \n",
      "996   51   51   51   52   47  \n",
      "997   61   61   61   61   58  \n",
      "998   63   64   65   65   60  \n",
      "999   64   68   70   71   66  \n",
      "\n",
      "[1000 rows x 22 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y29  y13  y28  y14  y15  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   68   56   68   57   58   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   54   46   54   47   49   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   59   46   58   47   48   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   37   40   38   41   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   31   32   31   32   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   79   74   79   76   77   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   47   50   47   51   51   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   57   58   57   60   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   58   60   59   62   63   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   65   57   65   60   64   \n",
      "\n",
      "     y16  y17  y18  y27  y26  \n",
      "0     60   61   62   68   67  \n",
      "1     51   53   54   54   54  \n",
      "2     50   52   52   58   57  \n",
      "3     41   41   41   38   38  \n",
      "4     32   32   32   31   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   78   79   80   79   79  \n",
      "996   51   51   52   47   47  \n",
      "997   61   61   61   58   59  \n",
      "998   64   65   65   60   61  \n",
      "999   68   70   71   66   67  \n",
      "\n",
      "[1000 rows x 23 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y13  y28  y14  y15  y16  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   56   68   57   58   60   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   46   54   47   49   51   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   46   58   47   48   50   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   40   38   41   41   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   31   32   32   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   74   79   76   77   78   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   50   47   51   51   51   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   58   57   60   61   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   60   59   62   63   64   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   57   65   60   64   68   \n",
      "\n",
      "     y17  y18  y27  y26  y19  \n",
      "0     61   62   68   67   63  \n",
      "1     53   54   54   54   55  \n",
      "2     52   52   58   57   53  \n",
      "3     41   41   38   38   41  \n",
      "4     32   32   31   31   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   80   79   79   80  \n",
      "996   51   52   47   47   52  \n",
      "997   61   61   58   59   61  \n",
      "998   65   65   60   61   65  \n",
      "999   70   71   66   67   71  \n",
      "\n",
      "[1000 rows x 24 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y28  y14  y15  y16  y17  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   68   57   58   60   61   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   54   47   49   51   53   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   58   47   48   50   52   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   38   41   41   41   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   31   32   32   32   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   79   76   77   78   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   47   51   51   51   51   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   57   60   61   61   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   59   62   63   64   65   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   65   60   64   68   70   \n",
      "\n",
      "     y18  y27  y26  y19  y20  \n",
      "0     62   68   67   63   64  \n",
      "1     54   54   54   55   55  \n",
      "2     52   58   57   53   54  \n",
      "3     41   38   38   41   40  \n",
      "4     32   31   31   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   79   79   80   80  \n",
      "996   52   47   47   52   52  \n",
      "997   61   58   59   61   61  \n",
      "998   65   60   61   65   65  \n",
      "999   71   66   67   71   71  \n",
      "\n",
      "[1000 rows x 25 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y14  y15  y16  y17  y18  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   57   58   60   61   62   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   47   49   51   53   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   47   48   50   52   52   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   41   41   41   41   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   32   32   32   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   76   77   78   79   80   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   51   51   51   51   52   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   60   61   61   61   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   62   63   64   65   65   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   60   64   68   70   71   \n",
      "\n",
      "     y27  y26  y19  y20  y23  \n",
      "0     68   67   63   64   65  \n",
      "1     54   54   55   55   54  \n",
      "2     58   57   53   54   55  \n",
      "3     38   38   41   40   39  \n",
      "4     31   31   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   79   80   80   79  \n",
      "996   47   47   52   52   50  \n",
      "997   58   59   61   61   61  \n",
      "998   60   61   65   65   63  \n",
      "999   66   67   71   71   68  \n",
      "\n",
      "[1000 rows x 26 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y15  y16  y17  y18  y27  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   58   60   61   62   68   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   49   51   53   54   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   48   50   52   52   58   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   41   41   41   41   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   32   32   32   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   77   78   79   80   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   51   51   51   52   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   61   61   61   61   58   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   63   64   65   65   60   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   64   68   70   71   66   \n",
      "\n",
      "     y26  y19  y20  y23  y24  \n",
      "0     67   63   64   65   66  \n",
      "1     54   55   55   54   54  \n",
      "2     57   53   54   55   56  \n",
      "3     38   41   40   39   39  \n",
      "4     31   32   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   80   80   79   79  \n",
      "996   47   52   52   50   49  \n",
      "997   59   61   61   61   60  \n",
      "998   61   65   65   63   63  \n",
      "999   67   71   71   68   68  \n",
      "\n",
      "[1000 rows x 27 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y16  y17  y18  y27  y26  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   60   61   62   68   67   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   51   53   54   54   54   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   50   52   52   58   57   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   41   41   41   38   38   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   32   32   31   31   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   78   79   80   79   79   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   51   51   52   47   47   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   61   61   61   58   59   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   64   65   65   60   61   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   68   70   71   66   67   \n",
      "\n",
      "     y19  y20  y23  y24  y25  \n",
      "0     63   64   65   66   67  \n",
      "1     55   55   54   54   54  \n",
      "2     53   54   55   56   57  \n",
      "3     41   40   39   39   38  \n",
      "4     32   32   32   32   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   80   79   79   79  \n",
      "996   52   52   50   49   48  \n",
      "997   61   61   61   60   59  \n",
      "998   65   65   63   63   62  \n",
      "999   71   71   68   68   68  \n",
      "\n",
      "[1000 rows x 28 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y17  y18  y27  y26  y19  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   61   62   68   67   63   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   53   54   54   54   55   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   52   52   58   57   53   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   41   41   38   38   41   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   32   31   31   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   79   80   79   79   80   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   51   52   47   47   52   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   61   61   58   59   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   65   65   60   61   65   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   70   71   66   67   71   \n",
      "\n",
      "     y20  y23  y24  y25  y21  \n",
      "0     64   65   66   67   65  \n",
      "1     55   54   54   54   55  \n",
      "2     54   55   56   57   54  \n",
      "3     40   39   39   38   39  \n",
      "4     32   32   32   31   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   79   79   79   80  \n",
      "996   52   50   49   48   52  \n",
      "997   61   61   60   59   61  \n",
      "998   65   63   63   62   64  \n",
      "999   71   68   68   68   70  \n",
      "\n",
      "[1000 rows x 29 columns]\n",
      "     y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  ...  y18  y27  y26  y19  y20  \\\n",
      "0     7   0   1  13  31  22  35  39  44   68  ...   62   68   67   63   64   \n",
      "1     7   0   3  13  22  18  29  31  33   54  ...   54   54   54   55   55   \n",
      "2     8  -8   0  15  27  22  30  33  37   59  ...   52   58   57   53   54   \n",
      "3     1  -5  -1   5  15  11  19  25  29   36  ...   41   38   38   41   40   \n",
      "4    18  12  15  22  25  23  27  29  30   31  ...   32   31   31   32   32   \n",
      "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
      "995  12   3   6  19  35  27  42  49  56   79  ...   80   79   79   80   80   \n",
      "996   5   1   2  11  22  17  28  34  39   46  ...   52   47   47   52   52   \n",
      "997   8   1   3  15  29  23  36  43  47   56  ...   61   58   59   61   61   \n",
      "998  10   1   4  17  29  23  35  41  46   57  ...   65   60   61   65   65   \n",
      "999   4   0   0  11  23  17  30  36  40   64  ...   71   66   67   71   71   \n",
      "\n",
      "     y23  y24  y25  y21  y22  \n",
      "0     65   66   67   65   65  \n",
      "1     54   54   54   55   55  \n",
      "2     55   56   57   54   54  \n",
      "3     39   39   38   39   39  \n",
      "4     32   32   31   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   79   79   80   79  \n",
      "996   50   49   48   52   51  \n",
      "997   61   60   59   61   61  \n",
      "998   63   63   62   64   63  \n",
      "999   68   68   68   70   69  \n",
      "\n",
      "[1000 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "X_col = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col]\n",
    "    print(var_col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5054141b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [23]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      7\u001b[0m y \u001b[38;5;66;03m#label\u001b[39;00m\n\u001b[0;32m      8\u001b[0m GBR \u001b[38;5;241m=\u001b[39m GradientBoostingRegressor(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m999\u001b[39m)\n\u001b[1;32m----> 9\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m     10\u001b[0m X_train, X_test, y_train, y_test \u001b[38;5;241m=\u001b[39m train_test_split(var_col,y,random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m999\u001b[39m)\n\u001b[0;32m     11\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(X_train, y_train)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "X_col = []\n",
    "Train_list = []\n",
    "Test_list = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col] #feature\n",
    "    y #label\n",
    "    GBR = GradientBoostingRegressor(random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    X_train, X_test, y_train, y_test = train_test_split(var_col,y,random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    \n",
    "    print(f'{i}컬럼까지 사용')\n",
    "    print(\"Train 정확도 :\",GBR.score(X_train, y_train))\n",
    "    print(\"Test 정확도 :\",GBR.score(X_test, y_test))\n",
    "    \n",
    "    train_pred_y = GBR.predict(X_train)\n",
    "    test_pred_y = GBR.predict(X_test)\n",
    "    print(\"Train 오차 : \",np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "    print(\"Test 오차 : \",np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "    print(\" \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b0e90512",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'GradientBoostingRegressor' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [18]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      6\u001b[0m var_col\u001b[38;5;241m=\u001b[39mdata[X_col] \u001b[38;5;66;03m#feature\u001b[39;00m\n\u001b[0;32m      7\u001b[0m y \u001b[38;5;66;03m#label\u001b[39;00m\n\u001b[1;32m----> 8\u001b[0m GBR \u001b[38;5;241m=\u001b[39m \u001b[43mGradientBoostingRegressor\u001b[49m(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m999\u001b[39m)\n\u001b[0;32m      9\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(X_train, y_train)\n\u001b[0;32m     10\u001b[0m X_train, X_test, y_train, y_test \u001b[38;5;241m=\u001b[39m train_test_split(var_col,y,random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m999\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'GradientBoostingRegressor' is not defined"
     ]
    }
   ],
   "source": [
    "X_col = []\n",
    "Train_list = []\n",
    "Test_list = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col] #feature\n",
    "    y #label\n",
    "    GBR = GradientBoostingRegressor(random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    X_train, X_test, y_train, y_test = train_test_split(var_col,y,random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    \n",
    "#     print(f'{i}컬럼까지 사용')\n",
    "#     print(\"Train 정확도 :\",GBR.score(X_train, y_train))\n",
    "#     print(\"Test 정확도 :\",GBR.score(X_test, y_test))\n",
    "    \n",
    "    train_pred_y = GBR.predict(X_train)\n",
    "    test_pred_y = GBR.predict(X_test)\n",
    "#     print(\"Train 오차 : \",np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "#     print(\"Test 오차 : \",np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "#     print(\" \")\n",
    "    \n",
    "    Train_scor=GBR.score(X_train, y_train)\n",
    "    Train_list.append(Train_scor)\n",
    "    Test_scor=GBR.score(X_test, y_test)\n",
    "    Test_list.append(Test_scor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "82614b04",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'Train_scor' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [19]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28mtype\u001b[39m(\u001b[43mTrain_scor\u001b[49m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'Train_scor' is not defined"
     ]
    }
   ],
   "source": [
    "type(Train_scor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "e1e2a5dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x20b538499a0>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYIAAAD4CAYAAADhNOGaAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAASDElEQVR4nO3dfYyV5ZnH8e/lAENaaKiIFRlcsEsacbVgT1iDmxSW0gKi8Mc20a1bWv8gNLVvrlGUNNtNs4lrk7Uha0rIrqmmbmxTS2RbGitGYpPW6mB9KUVkaukyBXU6iUhjLC9e+8cczDgemDNzzpkX7u8nOTnnuV+e57pzkvnN8zxzzkRmIkkq1zmjXYAkaXQZBJJUOINAkgpnEEhS4QwCSSrchNEuYDjOO++8nDNnzmiXIUnjyu7du/+UmTMGto/LIJgzZw6dnZ2jXYYkjSsR8Yda7V4akqTCGQSSVDiDQJIKNy7vEUjSUB0/fpzu7m7eeuut0S6l5SZPnkxHRwcTJ06sa7xBIKkI3d3dTJ06lTlz5hARo11Oy2Qmvb29dHd3M3fu3LrmeGlIUhHeeustpk+fflaHAEBEMH369CGd+RgEkopxtofAKUNdp0EgSYUzCCRpBPT29rJgwQIWLFjABRdcwKxZs97ZPnbs2BnndnZ28uUvf7lltXmzWJJGwPTp03n22WcB+MY3vsGUKVO45ZZb3uk/ceIEEybU/pFcqVSoVCotq80zAkkaJZ/73Oe4+eabWbp0KbfddhtPPfUUixcvZuHChSxevJh9+/YBsGvXLlavXg30hciNN97IkiVLuPjii9m8eXPDdXhGIKk4//q/e/jtoTeaus/5F36Af7nm0iHPe+mll9i5cydtbW288cYbPPHEE0yYMIGdO3dyxx138NBDD71nzosvvsjjjz/O0aNH+chHPsIXvvCFuj8zUItBIEmj6NOf/jRtbW0AHDlyhHXr1rF//34iguPHj9ecc/XVV9Pe3k57ezvnn38+r776Kh0dHcOuwSCQVJzh/ObeKu9///vfef31r3+dpUuXsm3bNg4cOMCSJUtqzmlvb3/ndVtbGydOnGioBu8RSNIYceTIEWbNmgXAd7/73RE7rkEgSWPErbfeyu23385VV13FyZMnR+y4kZkjdrBmqVQq6T+mkTQUe/fu5ZJLLhntMkZMrfVGxO7MfM/foXpGIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgrnJ4slaQT09vaybNkyAF555RXa2tqYMWMGAE899RSTJk064/xdu3YxadIkFi9e3PTaDAJJGgGDfQ31YHbt2sWUKVNaEgRNuTQUESsiYl9EdEXExhr9ERGbq/3PR8QVA/rbIuLXEfHjZtQjSePB7t27+fjHP87HPvYxPvWpT3H48GEANm/ezPz587n88su57rrrOHDgAFu2bOHuu+9mwYIF/PznP29qHQ2fEUREG3APsBzoBp6OiO2Z+dt+w1YC86qPvwW+U30+5SvAXuADjdYjSYP66UZ45YXm7vOCy2DlnXUPz0y+9KUv8fDDDzNjxgy+//3vs2nTJu69917uvPNOfv/739Pe3s7rr7/OtGnT2LBhw5DPIurVjEtDi4CuzHwZICIeBNYA/YNgDXB/9n2fxZMRMS0iZmbm4YjoAK4G/g24uQn1SNKY95e//IXf/OY3LF++HICTJ08yc+ZMAC6//HI+85nPsHbtWtauXdvyWpoRBLOAg/22u3n3b/unGzMLOAx8G7gVmHqmg0TEemA9wEUXXdRQwZIKN4Tf3FslM7n00kv55S9/+Z6+n/zkJzzxxBNs376db37zm+zZs6eltTTjHkHUaBv4TXY1x0TEauC1zNw92EEyc2tmVjKzcupOuySNV+3t7fT09LwTBMePH2fPnj28/fbbHDx4kKVLl3LXXXfx+uuv8+c//5mpU6dy9OjRltTSjCDoBmb32+4ADtU55irg2og4ADwI/H1EfK8JNUnSmHbOOefwwx/+kNtuu42PfvSjLFiwgF/84hecPHmSG264gcsuu4yFCxfyta99jWnTpnHNNdewbdu2ltwsbvhrqCNiAvASsAz4I/A08I+ZuaffmKuBm4BV9F022pyZiwbsZwlwS2auHuyYfg21pKHya6hP/zXUDd8jyMwTEXET8AjQBtybmXsiYkO1fwuwg74Q6ALeBD7f6HElSc3RlA+UZeYO+n7Y92/b0u91Al8cZB+7gF3NqEeSVD+/a0hSMcbjf2QcjqGu0yCQVITJkyfT29t71odBZtLb28vkyZPrnuN3DUkqQkdHB93d3fT09Ix2KS03efJkOjo66h5vEEgqwsSJE5k7d+5olzEmeWlIkgpnEEhS4QwCSSqcQSBJhTMIJKlwBoEkFc4gkKTCGQSSVDiDQJIKZxBIUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKpxBIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgpnEEhS4ZoSBBGxIiL2RURXRGys0R8Rsbna/3xEXFFtnx0Rj0fE3ojYExFfaUY9kqT6NRwEEdEG3AOsBOYD10fE/AHDVgLzqo/1wHeq7SeAf87MS4ArgS/WmCtJaqFmnBEsAroy8+XMPAY8CKwZMGYNcH/2eRKYFhEzM/NwZj4DkJlHgb3ArCbUJEmqUzOCYBZwsN92N+/9YT7omIiYAywEftWEmiRJdWpGEESNthzKmIiYAjwEfDUz36h5kIj1EdEZEZ09PT3DLlaS9G7NCIJuYHa/7Q7gUL1jImIifSHwQGb+6HQHycytmVnJzMqMGTOaULYkCZoTBE8D8yJibkRMAq4Dtg8Ysx34bPWvh64EjmTm4YgI4L+BvZn5H02oRZI0RBMa3UFmnoiIm4BHgDbg3szcExEbqv1bgB3AKqALeBP4fHX6VcA/AS9ExLPVtjsyc0ejdUmS6hOZAy/nj32VSiU7OztHuwxJGlciYndmVga2+8liSSqcQSBJhTMIJKlwBoEkFc4gkKTCGQSSVDiDQJIKZxBIUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKpxBIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgpnEEhS4QwCSSqcQSBJhTMIJKlwBoEkFc4gkKTCGQSSVDiDQJIK15QgiIgVEbEvIroiYmON/oiIzdX+5yPiinrnSpJaq+EgiIg24B5gJTAfuD4i5g8YthKYV32sB74zhLmSpBZqxhnBIqArM1/OzGPAg8CaAWPWAPdnnyeBaRExs865kqQWakYQzAIO9tvurrbVM6aeuQBExPqI6IyIzp6enoaLliT1aUYQRI22rHNMPXP7GjO3ZmYlMyszZswYYomSpNOZ0IR9dAOz+213AIfqHDOpjrmSpBZqxhnB08C8iJgbEZOA64DtA8ZsBz5b/euhK4EjmXm4zrmSpBZq+IwgM09ExE3AI0AbcG9m7omIDdX+LcAOYBXQBbwJfP5McxutSZJUv8iseUl+TKtUKtnZ2TnaZUjSuBIRuzOzMrDdTxZLUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKpxBIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgpnEEhS4QwCSSqcQSBJhTMIJKlwBoEkFc4gkKTCGQSSVDiDQJIKZxBIUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwjUUBBFxbkQ8GhH7q88fPM24FRGxLyK6ImJjv/ZvRcSLEfF8RGyLiGmN1CNJGrpGzwg2Ao9l5jzgser2u0REG3APsBKYD1wfEfOr3Y8Cf5OZlwMvAbc3WI8kaYgaDYI1wH3V1/cBa2uMWQR0ZebLmXkMeLA6j8z8WWaeqI57EuhosB5J0hA1GgQfyszDANXn82uMmQUc7LfdXW0b6Ebgpw3WI0kaogmDDYiIncAFNbo21XmMqNGWA46xCTgBPHCGOtYD6wEuuuiiOg8tSRrMoEGQmZ84XV9EvBoRMzPzcETMBF6rMawbmN1vuwM41G8f64DVwLLMTE4jM7cCWwEqlcppx0mShqbRS0PbgXXV1+uAh2uMeRqYFxFzI2IScF11HhGxArgNuDYz32ywFknSMDQaBHcCyyNiP7C8uk1EXBgROwCqN4NvAh4B9gI/yMw91fn/CUwFHo2IZyNiS4P1SJKGaNBLQ2eSmb3Ashrth4BV/bZ3ADtqjPvrRo4vSWqcnyyWpMIZBJJUOINAkgpnEEhS4QwCSSqcQSBJhTMIJKlwBoEkFc4gkKTCGQSSVDiDQJIKZxBIUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKpxBIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgpnEEhS4QwCSSqcQSBJhTMIJKlwDQVBRJwbEY9GxP7q8wdPM25FROyLiK6I2Fij/5aIyIg4r5F6JElD1+gZwUbgscycBzxW3X6XiGgD7gFWAvOB6yNifr/+2cBy4P8arEWSNAyNBsEa4L7q6/uAtTXGLAK6MvPlzDwGPFidd8rdwK1ANliLJGkYGg2CD2XmYYDq8/k1xswCDvbb7q62ERHXAn/MzOcGO1BErI+Izojo7OnpabBsSdIpEwYbEBE7gQtqdG2q8xhRoy0j4n3VfXyynp1k5lZgK0ClUvHsQZKaZNAgyMxPnK4vIl6NiJmZeTgiZgKv1RjWDczut90BHAI+DMwFnouIU+3PRMSizHxlCGuQJDWg0UtD24F11dfrgIdrjHkamBcRcyNiEnAdsD0zX8jM8zNzTmbOoS8wrjAEJGlkNRoEdwLLI2I/fX/5cydARFwYETsAMvMEcBPwCLAX+EFm7mnwuJKkJhn00tCZZGYvsKxG+yFgVb/tHcCOQfY1p5FaJEnD4yeLJalwBoEkFc4gkKTCGQSSVDiDQJIKZxBIUuEMAkkqnEEgSYUzCCSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKpxBIEmFMwgkqXAGgSQVziCQpMIZBJJUOINAkgpnEEhS4QwCSSqcQSBJhYvMHO0ahiwieoA/jHYdw3Ae8KfRLmIElbZecM2lGK9r/qvMnDGwcVwGwXgVEZ2ZWRntOkZKaesF11yKs23NXhqSpMIZBJJUOINgZG0d7QJGWGnrBddcirNqzd4jkKTCeUYgSYUzCCSpcAZBE0XEuRHxaETsrz5/8DTjVkTEvojoioiNNfpviYiMiPNaX3VjGl1zRHwrIl6MiOcjYltETBux4oeojvctImJztf/5iLii3rlj1XDXHBGzI+LxiNgbEXsi4isjX/3wNPI+V/vbIuLXEfHjkau6QZnpo0kP4C5gY/X1RuDfa4xpA34HXAxMAp4D5vfrnw08Qt8H5s4b7TW1es3AJ4EJ1df/Xmv+WHgM9r5Vx6wCfgoEcCXwq3rnjsVHg2ueCVxRfT0VeOlsX3O//puB/wF+PNrrqffhGUFzrQHuq76+D1hbY8wioCszX87MY8CD1Xmn3A3cCoyXu/gNrTkzf5aZJ6rjngQ6WlvusA32vlHdvj/7PAlMi4iZdc4di4a95sw8nJnPAGTmUWAvMGskix+mRt5nIqIDuBr4r5EsulEGQXN9KDMPA1Sfz68xZhZwsN92d7WNiLgW+GNmPtfqQpuooTUPcCN9v2mNRfWs4XRj6l3/WNPImt8REXOAhcCvml9i0zW65m/T94vc2y2qryUmjHYB401E7AQuqNG1qd5d1GjLiHhfdR+fHG5trdKqNQ84xibgBPDA0KobMYOu4Qxj6pk7FjWy5r7OiCnAQ8BXM/ONJtbWKsNec0SsBl7LzN0RsaTZhbWSQTBEmfmJ0/VFxKunTourp4qv1RjWTd99gFM6gEPAh4G5wHMRcar9mYhYlJmvNG0Bw9DCNZ/axzpgNbAsqxdZx6AzrmGQMZPqmDsWNbJmImIifSHwQGb+qIV1NlMja/4H4NqIWAVMBj4QEd/LzBtaWG9zjPZNirPpAXyLd984vavGmAnAy/T90D91M+rSGuMOMD5uFje0ZmAF8FtgxmivZZB1Dvq+0XdtuP9NxKeG8p6PtUeDaw7gfuDbo72OkVrzgDFLGEc3i0e9gLPpAUwHHgP2V5/PrbZfCOzoN24VfX9F8Ttg02n2NV6CoKE1A130XW99tvrYMtprOsNa37MGYAOwofo6gHuq/S8AlaG852PxMdw1A39H3yWV5/u9t6tGez2tfp/77WNcBYFfMSFJhfOvhiSpcAaBJBXOIJCkwhkEklQ4g0CSCmcQSFLhDAJJKtz/A6DYY/hYUvPwAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(range(0, len(Train_list)), Train_list, label=\"Train\")\n",
    "plt.plot(range(0, len(Train_list)), Test_list, label=\"Test\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b5f24d67",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'Train_scor' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m30\u001b[39m,\u001b[38;5;241m15\u001b[39m))\n\u001b[1;32m----> 2\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(\u001b[38;5;28mint\u001b[39m((\u001b[43mTrain_scor\u001b[49m\u001b[38;5;241m.\u001b[39mindex)\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m), \u001b[38;5;28mint\u001b[39m(Train_scor\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m)\u001b[38;5;241m.\u001b[39mmax())\n\u001b[0;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(\u001b[38;5;28mint\u001b[39m((Test_scor\u001b[38;5;241m.\u001b[39mindex)\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m),\u001b[38;5;28mint\u001b[39m(Test_scor\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m)\u001b[38;5;241m.\u001b[39mmax())\n\u001b[0;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow\n",
      "\u001b[1;31mNameError\u001b[0m: name 'Train_scor' is not defined"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 2160x1080 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(30,15))\n",
    "plt.plot(int((Train_scor.index)*100), int(Train_scor*100).max())\n",
    "plt.plot(int((Test_scor.index)*100),int(Test_scor*100).max())\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "151c1456",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e989b3bd",
   "metadata": {},
   "source": [
    "- 조건수 감소 방법\n",
    "    - 스케일링 : 변수들의 단위차로 숫자의 스케일이 다른 경우\n",
    "    - 차원추소 (VIF,PCA) : \n",
    "        - VIF(Variance Inflation Factor) 분산팽창인수\n",
    "        - PCA(Prinsipal Component Analysis)\n",
    "    - 정규화(Resulariztion) : "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "77f9d25c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff702b81",
   "metadata": {},
   "outputs": [],
   "source": [
    "raw_all = data\n",
    "\n",
    "#Feature Engineering\n",
    "raw_fe = X\n",
    "target = \n",
    "raw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b05aff74",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97fc33fc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4289b22d",
   "metadata": {},
   "source": [
    "# Modeling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0ecd3bf",
   "metadata": {},
   "source": [
    "## autogluon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75c782a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install autogluon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9df9ec76",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4876d8c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#AutoGluon의 로딩\n",
    "from autogluon.tabular import TabularPredictor as task\n",
    "\n",
    "#autoGluon은 X,y 나누지 않고 테스트 데이터와 트레인 데이터로만 나눔\n",
    "df_train, df_test = train_test_split(data, test_size=0.3, random_state=999)\n",
    "\n",
    "#predictor = task.fit(\"data/train_first.csv\", label=\"income\") #학습\n",
    "predictor = task(label=\"label\").fit(df_train)\n",
    "predictions = predictor.predict(df_test) #테스트 데이터에 대한 예측"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f9bb1733",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "predictor.fit_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52e0afdd",
   "metadata": {},
   "outputs": [],
   "source": [
    "predictor.get_model_best()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68e062dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# print(np.sqrt(mean_squared_error(pred, y_test)))\n",
    "# 코드 수정해서 오차 봐야함"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "123af50b",
   "metadata": {},
   "source": [
    "## LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2c9df539",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=999)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1cb60afc",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [4]\u001b[0m, in \u001b[0;36m<cell line: 6>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mnumpy\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mnp\u001b[39;00m\n\u001b[0;32m      5\u001b[0m lr \u001b[38;5;241m=\u001b[39m LinearRegression()\n\u001b[1;32m----> 6\u001b[0m lr\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      9\u001b[0m \u001b[38;5;28mprint\u001b[39m(lr\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import numpy as np\n",
    "\n",
    "lr = LinearRegression()\n",
    "lr.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(lr.score(X_train, y_train))\n",
    "print(lr.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = lr.predict(X_train)\n",
    "test_pred_y = lr.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08b3db95",
   "metadata": {},
   "source": [
    "## Gradient Boost Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3b776240",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [2]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GradientBoostingRegressor\n\u001b[0;32m      3\u001b[0m GBR \u001b[38;5;241m=\u001b[39m GradientBoostingRegressor(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m, max_depth\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m----> 4\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(GBR\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBR = GradientBoostingRegressor(random_state=0, max_depth=1)\n",
    "GBR.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(GBR.score(X_train, y_train))\n",
    "print(GBR.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = GBR.predict(X_train)\n",
    "test_pred_y = GBR.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8cd628ee",
   "metadata": {},
   "source": [
    "## RandomForest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ea829496",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [3]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m RandomForestRegressor\n\u001b[0;32m      3\u001b[0m rf \u001b[38;5;241m=\u001b[39m RandomForestRegressor(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m777\u001b[39m, max_leaf_nodes\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m50\u001b[39m)\n\u001b[1;32m----> 4\u001b[0m rf\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(rf\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "rf = RandomForestRegressor(random_state=777, max_leaf_nodes=50)\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(rf.score(X_train, y_train))\n",
    "print(rf.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = rf.predict(X_train)\n",
    "test_pred_y = rf.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba5c6a18",
   "metadata": {},
   "source": [
    "## Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c69489a1",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mlinear_model\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Lasso\n\u001b[0;32m      3\u001b[0m lasso \u001b[38;5;241m=\u001b[39m Lasso()\n\u001b[1;32m----> 4\u001b[0m lasso\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(lasso\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import Lasso\n",
    "\n",
    "lasso = Lasso()\n",
    "lasso.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(lasso.score(X_train, y_train))\n",
    "print(lasso.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = lasso.predict(X_train)\n",
    "test_pred_y = lasso.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38672477",
   "metadata": {},
   "source": [
    "## Ridge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3892ed1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Ridge\n",
    "\n",
    "ridge = Ridge()\n",
    "ridge.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(ridge.score(X_train, y_train))\n",
    "print(ridge.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = ridge.predict(X_train)\n",
    "test_pred_y = ridge.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3d9c45d",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "3c2ca9e4",
   "metadata": {},
   "source": [
    "# 피드백"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7582535",
   "metadata": {},
   "source": [
    "## 클러스트링"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "bfb224ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install scipy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0693db89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'cluster distance')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.cluster.hierarchy import dendrogram, ward\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "linkage_array = ward(X)\n",
    "\n",
    "# 클러스터 간의 거리 정보가 담긴 linkage_array를 사용해 덴드로그램을 그림\n",
    "dendrogram(linkage_array)\n",
    "\n",
    "# 두 개와 세 개의 클러스터를 구분하는 커트라인을 표시\n",
    "ax = plt.gca()       #현재 그려진 그래프의 정보를 가지고오는 함수\n",
    "\n",
    "bounds = ax.get_xbound()      #x축정보를 가지고옴\n",
    "\n",
    "ax.plot(bounds, [20, 20], '--', c='k')\n",
    "ax.plot(bounds, [10, 10], '--', c='k')\n",
    "\n",
    "ax.text(bounds[1], 20, ' two cluster', fontdict={'size': 15})\n",
    "ax.text(bounds[1], 10, ' three cluster', fontdict={'size': 15})\n",
    "plt.xlabel(\"Sample number\")\n",
    "plt.ylabel(\"cluster distance\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "297d8466",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AgglomerativeClustering(n_clusters=4)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "model=AgglomerativeClustering(n_clusters=4, linkage='ward')\n",
    "model.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "51913b6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#위 덴드로그램 X라벨값 추출\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c02dedc1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust\n",
       "0        0\n",
       "1        1\n",
       "2        1\n",
       "3        3\n",
       "4        3\n",
       "..     ...\n",
       "995      2\n",
       "996      1\n",
       "997      0\n",
       "998      0\n",
       "999      0\n",
       "\n",
       "[1000 rows x 1 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels = model.labels_\n",
    "#해당 인덱스 번호에 배정된 라벨 값이 할당된 군집이 '0'칼럼에 배정\n",
    "y = pd.DataFrame(labels)\n",
    "y.columns=['clust'] \n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "de0cdfbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      62\n",
       "1      32\n",
       "2      46\n",
       "3      59\n",
       "4      91\n",
       "       ..\n",
       "995    95\n",
       "996    62\n",
       "997    76\n",
       "998    76\n",
       "999    81\n",
       "Name: label, Length: 1000, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "L=data.iloc[:,-1]\n",
    "L"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1011cf90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "0        0   0   1   7  13  22  31  35  39  44  ...   65   65   66   67   67   \n",
       "1        1   0   3   7  13  18  22  29  31  33  ...   55   54   54   54   54   \n",
       "2        1  -8   0   8  15  22  27  30  33  37  ...   54   55   56   57   57   \n",
       "3        3  -5  -1   1   5  11  15  19  25  29  ...   39   39   39   38   38   \n",
       "4        3  12  15  18  22  23  25  27  29  30  ...   32   32   32   31   31   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "995      2   3   6  12  19  27  35  42  49  56  ...   79   79   79   79   79   \n",
       "996      1   1   2   5  11  17  22  28  34  39  ...   51   50   49   48   47   \n",
       "997      0   1   3   8  15  23  29  36  43  47  ...   61   61   60   59   59   \n",
       "998      0   1   4  10  17  23  29  35  41  46  ...   63   63   63   62   61   \n",
       "999      0   0   0   4  11  17  23  30  36  40  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[1000 rows x 32 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con = pd.concat([y, data], axis=1)\n",
    "con"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "b537c1a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "list0 =con[con[\"clust\"]==0]\n",
    "list1 =con[con[\"clust\"]==1]\n",
    "list2 =con[con[\"clust\"]==2]\n",
    "list3 =con[con[\"clust\"]==3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "1958f05a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>356.0</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.0</td>\n",
       "      <td>6.050562</td>\n",
       "      <td>8.713483</td>\n",
       "      <td>13.193820</td>\n",
       "      <td>19.188202</td>\n",
       "      <td>25.567416</td>\n",
       "      <td>31.491573</td>\n",
       "      <td>36.558989</td>\n",
       "      <td>41.266854</td>\n",
       "      <td>45.303371</td>\n",
       "      <td>...</td>\n",
       "      <td>62.339888</td>\n",
       "      <td>62.269663</td>\n",
       "      <td>62.132022</td>\n",
       "      <td>61.971910</td>\n",
       "      <td>61.721910</td>\n",
       "      <td>61.457865</td>\n",
       "      <td>61.165730</td>\n",
       "      <td>60.792135</td>\n",
       "      <td>60.477528</td>\n",
       "      <td>71.758427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>10.076201</td>\n",
       "      <td>10.585238</td>\n",
       "      <td>10.681777</td>\n",
       "      <td>9.967891</td>\n",
       "      <td>9.289913</td>\n",
       "      <td>8.381565</td>\n",
       "      <td>7.382461</td>\n",
       "      <td>6.807131</td>\n",
       "      <td>6.590483</td>\n",
       "      <td>...</td>\n",
       "      <td>3.740104</td>\n",
       "      <td>3.791804</td>\n",
       "      <td>3.840773</td>\n",
       "      <td>3.874699</td>\n",
       "      <td>4.014575</td>\n",
       "      <td>4.228797</td>\n",
       "      <td>4.622426</td>\n",
       "      <td>5.318217</td>\n",
       "      <td>5.424208</td>\n",
       "      <td>13.323623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.0</td>\n",
       "      <td>-5.000000</td>\n",
       "      <td>-2.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>63.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>72.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.250000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>80.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.0</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>109.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  356.0  356.000000  356.000000  356.000000  356.000000  356.000000   \n",
       "mean     0.0    6.050562    8.713483   13.193820   19.188202   25.567416   \n",
       "std      0.0   10.076201   10.585238   10.681777    9.967891    9.289913   \n",
       "min      0.0   -5.000000   -2.000000   -1.000000    0.000000    4.000000   \n",
       "25%      0.0    0.000000    2.000000    6.000000   12.000000   19.000000   \n",
       "50%      0.0    2.000000    6.000000   11.000000   18.000000   25.000000   \n",
       "75%      0.0    7.000000   11.250000   17.000000   24.000000   30.250000   \n",
       "max      0.0   73.000000   73.000000   73.000000   73.000000   74.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...         y22  \\\n",
       "count  356.000000  356.000000  356.000000  356.000000  ...  356.000000   \n",
       "mean    31.491573   36.558989   41.266854   45.303371  ...   62.339888   \n",
       "std      8.381565    7.382461    6.807131    6.590483  ...    3.740104   \n",
       "min      9.000000   11.000000   12.000000    5.000000  ...   42.000000   \n",
       "25%     25.000000   31.000000   37.000000   42.000000  ...   60.000000   \n",
       "50%     31.000000   37.000000   41.000000   45.000000  ...   63.000000   \n",
       "75%     36.000000   41.000000   45.000000   49.000000  ...   65.000000   \n",
       "max     73.000000   64.000000   66.000000   68.000000  ...   73.000000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  356.000000  356.000000  356.000000  356.000000  356.000000  356.000000   \n",
       "mean    62.269663   62.132022   61.971910   61.721910   61.457865   61.165730   \n",
       "std      3.791804    3.840773    3.874699    4.014575    4.228797    4.622426   \n",
       "min     44.000000   45.000000   46.000000   47.000000   41.000000   29.000000   \n",
       "25%     60.000000   60.000000   60.000000   59.000000   59.000000   59.000000   \n",
       "50%     63.000000   63.000000   62.000000   62.000000   62.000000   61.000000   \n",
       "75%     65.000000   65.000000   65.000000   64.000000   64.000000   64.000000   \n",
       "max     74.000000   74.000000   74.000000   74.000000   74.000000   74.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  356.000000  356.000000  356.000000  \n",
       "mean    60.792135   60.477528   71.758427  \n",
       "std      5.318217    5.424208   13.323623  \n",
       "min      5.000000    5.000000   31.000000  \n",
       "25%     58.000000   58.000000   63.000000  \n",
       "50%     61.000000   61.000000   72.000000  \n",
       "75%     64.000000   64.000000   80.000000  \n",
       "max     74.000000   74.000000  109.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list0.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "198916aa",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>60</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>41</td>\n",
       "      <td>43</td>\n",
       "      <td>45</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>60</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>44</td>\n",
       "      <td>47</td>\n",
       "      <td>50</td>\n",
       "      <td>53</td>\n",
       "      <td>57</td>\n",
       "      <td>59</td>\n",
       "      <td>61</td>\n",
       "      <td>...</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>55</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>37</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>62</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>38</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>64</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>356 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "0        0   0   1   7  13  22  31  35  39  44  ...   65   65   66   67   67   \n",
       "9        0   0  -1   0   7  13  19  26  31  35  ...   60   61   61   61   61   \n",
       "10       0  18  21  26  31  35  38  41  43  45  ...   61   61   61   61   61   \n",
       "11       0  37  41  44  47  50  53  57  59  61  ...   66   66   66   66   66   \n",
       "12       0  12  17  23  29  35  39  45  50  55  ...   67   67   68   68   68   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "992      0   1   5   9  14  20  24  30  37  42  ...   62   62   61   61   60   \n",
       "993      0   1   2   5  10  17  24  30  38  42  ...   67   67   67   67   67   \n",
       "997      0   1   3   8  15  23  29  36  43  47  ...   61   61   60   59   59   \n",
       "998      0   1   4  10  17  23  29  35  41  46  ...   63   63   63   62   61   \n",
       "999      0   0   0   4  11  17  23  30  36  40  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "9     61   61   61   61     70  \n",
       "10    61   61   60   60     79  \n",
       "11    66   66   66   65     65  \n",
       "12    68   68   68   68     70  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "992   59   59   59   58     77  \n",
       "993   66   65   64   64     76  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[356 rows x 32 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "6b73ddd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>331.0</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.398792</td>\n",
       "      <td>4.540785</td>\n",
       "      <td>8.703927</td>\n",
       "      <td>14.492447</td>\n",
       "      <td>20.410876</td>\n",
       "      <td>26.009063</td>\n",
       "      <td>31.135952</td>\n",
       "      <td>35.658610</td>\n",
       "      <td>39.522659</td>\n",
       "      <td>...</td>\n",
       "      <td>53.175227</td>\n",
       "      <td>53.012085</td>\n",
       "      <td>52.830816</td>\n",
       "      <td>52.607251</td>\n",
       "      <td>52.314199</td>\n",
       "      <td>51.981873</td>\n",
       "      <td>51.616314</td>\n",
       "      <td>51.226586</td>\n",
       "      <td>50.673716</td>\n",
       "      <td>67.223565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5.241258</td>\n",
       "      <td>5.973730</td>\n",
       "      <td>5.233628</td>\n",
       "      <td>5.429083</td>\n",
       "      <td>5.382947</td>\n",
       "      <td>5.174815</td>\n",
       "      <td>4.907904</td>\n",
       "      <td>4.684734</td>\n",
       "      <td>4.401301</td>\n",
       "      <td>...</td>\n",
       "      <td>3.935786</td>\n",
       "      <td>4.036182</td>\n",
       "      <td>4.110049</td>\n",
       "      <td>4.176755</td>\n",
       "      <td>4.268036</td>\n",
       "      <td>4.412754</td>\n",
       "      <td>4.574724</td>\n",
       "      <td>4.758408</td>\n",
       "      <td>5.040070</td>\n",
       "      <td>12.131034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.0</td>\n",
       "      <td>-63.000000</td>\n",
       "      <td>-67.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>32.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>50.500000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>59.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>66.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>23.500000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>55.500000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>74.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.0</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>112.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  331.0  331.000000  331.000000  331.000000  331.000000  331.000000   \n",
       "mean     1.0    2.398792    4.540785    8.703927   14.492447   20.410876   \n",
       "std      0.0    5.241258    5.973730    5.233628    5.429083    5.382947   \n",
       "min      1.0  -63.000000  -67.000000    0.000000    1.000000    2.000000   \n",
       "25%      1.0    0.000000    1.000000    5.000000   11.000000   17.000000   \n",
       "50%      1.0    1.000000    4.000000    8.000000   14.000000   20.000000   \n",
       "75%      1.0    3.000000    7.000000   11.000000   18.000000   23.500000   \n",
       "max      1.0   23.000000   26.000000   30.000000   34.000000   37.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...         y22  \\\n",
       "count  331.000000  331.000000  331.000000  331.000000  ...  331.000000   \n",
       "mean    26.009063   31.135952   35.658610   39.522659  ...   53.175227   \n",
       "std      5.174815    4.907904    4.684734    4.401301  ...    3.935786   \n",
       "min      7.000000   14.000000   18.000000   22.000000  ...   44.000000   \n",
       "25%     23.000000   28.000000   33.000000   37.000000  ...   50.500000   \n",
       "50%     26.000000   31.000000   36.000000   40.000000  ...   54.000000   \n",
       "75%     29.000000   34.000000   39.000000   42.000000  ...   56.000000   \n",
       "max     41.000000   45.000000   48.000000   51.000000  ...   63.000000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000   \n",
       "mean    53.012085   52.830816   52.607251   52.314199   51.981873   51.616314   \n",
       "std      4.036182    4.110049    4.176755    4.268036    4.412754    4.574724   \n",
       "min     43.000000   42.000000   42.000000   41.000000   40.000000   39.000000   \n",
       "25%     50.000000   50.000000   50.000000   50.000000   49.000000   49.000000   \n",
       "50%     53.000000   53.000000   53.000000   53.000000   52.000000   52.000000   \n",
       "75%     56.000000   56.000000   56.000000   55.500000   55.000000   55.000000   \n",
       "max     63.000000   63.000000   63.000000   63.000000   63.000000   63.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  331.000000  331.000000  331.000000  \n",
       "mean    51.226586   50.673716   67.223565  \n",
       "std      4.758408    5.040070   12.131034  \n",
       "min     34.000000   27.000000   32.000000  \n",
       "25%     48.000000   47.000000   59.000000  \n",
       "50%     52.000000   51.000000   66.000000  \n",
       "75%     55.000000   54.000000   74.000000  \n",
       "max     63.000000   63.000000  112.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "654ee982",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>-4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>53</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>985</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>52</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>60</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>55</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>331 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "1        1   0   3   7  13  18  22  29  31  33  ...   55   54   54   54   54   \n",
       "2        1  -8   0   8  15  22  27  30  33  37  ...   54   55   56   57   57   \n",
       "7        1   7  10  13  16  20  24  29  34  38  ...   49   49   48   47   47   \n",
       "8        1  12  15  17  21  25  30  34  38  41  ...   57   57   57   57   57   \n",
       "13       1  -4   0   1   1   2   7  14  23  32  ...   59   59   59   58   57   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "985      1   0   3   6  11  17  22  27  32  36  ...   56   56   56   56   56   \n",
       "989      1   1   3   7  12  18  24  30  32  35  ...   46   45   45   45   44   \n",
       "990      1   0   2   5  10  15  20  25  30  34  ...   53   53   53   53   52   \n",
       "991      1   2   5  10  16  21  26  31  35  39  ...   60   60   59   58   57   \n",
       "996      1   1   2   5  11  17  22  28  34  39  ...   51   50   49   48   47   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "7     47   47   47   47     63  \n",
       "8     57   57   57   57     92  \n",
       "13    56   55   54   53     84  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "985   56   56   56   56     59  \n",
       "989   43   42   42   41     53  \n",
       "990   51   51   51   51     59  \n",
       "991   56   56   56   55     66  \n",
       "996   47   47   47   46     62  \n",
       "\n",
       "[331 rows x 32 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "c8a8472f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>258.0</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>258.00000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.0</td>\n",
       "      <td>3.077519</td>\n",
       "      <td>5.918605</td>\n",
       "      <td>11.441860</td>\n",
       "      <td>19.569767</td>\n",
       "      <td>27.317829</td>\n",
       "      <td>34.275194</td>\n",
       "      <td>40.655039</td>\n",
       "      <td>46.341085</td>\n",
       "      <td>51.383721</td>\n",
       "      <td>...</td>\n",
       "      <td>72.46124</td>\n",
       "      <td>72.441860</td>\n",
       "      <td>72.422481</td>\n",
       "      <td>72.298450</td>\n",
       "      <td>72.174419</td>\n",
       "      <td>71.984496</td>\n",
       "      <td>71.790698</td>\n",
       "      <td>71.519380</td>\n",
       "      <td>71.023256</td>\n",
       "      <td>78.236434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>8.253864</td>\n",
       "      <td>9.403884</td>\n",
       "      <td>10.308024</td>\n",
       "      <td>8.692150</td>\n",
       "      <td>8.714213</td>\n",
       "      <td>8.607178</td>\n",
       "      <td>8.320501</td>\n",
       "      <td>7.937005</td>\n",
       "      <td>7.516781</td>\n",
       "      <td>...</td>\n",
       "      <td>4.89823</td>\n",
       "      <td>4.949405</td>\n",
       "      <td>4.997645</td>\n",
       "      <td>5.046099</td>\n",
       "      <td>5.132164</td>\n",
       "      <td>5.202490</td>\n",
       "      <td>5.257826</td>\n",
       "      <td>5.358873</td>\n",
       "      <td>5.582024</td>\n",
       "      <td>13.180958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.0</td>\n",
       "      <td>-73.000000</td>\n",
       "      <td>-80.000000</td>\n",
       "      <td>-85.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>64.00000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>44.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>29.250000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>46.250000</td>\n",
       "      <td>...</td>\n",
       "      <td>69.00000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>68.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>71.00000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>78.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>75.00000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>74.750000</td>\n",
       "      <td>87.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.0</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>97.00000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>110.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  258.0  258.000000  258.000000  258.000000  258.000000  258.000000   \n",
       "mean     2.0    3.077519    5.918605   11.441860   19.569767   27.317829   \n",
       "std      0.0    8.253864    9.403884   10.308024    8.692150    8.714213   \n",
       "min      2.0  -73.000000  -80.000000  -85.000000    0.000000    0.000000   \n",
       "25%      2.0    0.000000    1.000000    7.000000   14.000000   22.000000   \n",
       "50%      2.0    1.000000    4.000000   11.000000   19.000000   27.000000   \n",
       "75%      2.0    4.000000    8.000000   15.000000   23.000000   31.000000   \n",
       "max      2.0   50.000000   57.000000   63.000000   68.000000   71.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...        y22  \\\n",
       "count  258.000000  258.000000  258.000000  258.000000  ...  258.00000   \n",
       "mean    34.275194   40.655039   46.341085   51.383721  ...   72.46124   \n",
       "std      8.607178    8.320501    7.937005    7.516781  ...    4.89823   \n",
       "min      3.000000   11.000000   19.000000   23.000000  ...   64.00000   \n",
       "25%     29.250000   36.000000   41.000000   46.250000  ...   69.00000   \n",
       "50%     34.000000   41.000000   46.000000   51.000000  ...   71.00000   \n",
       "75%     38.000000   45.000000   50.000000   55.000000  ...   75.00000   \n",
       "max     72.000000   73.000000   74.000000   74.000000  ...   97.00000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  258.000000  258.000000  258.000000  258.000000  258.000000  258.000000   \n",
       "mean    72.441860   72.422481   72.298450   72.174419   71.984496   71.790698   \n",
       "std      4.949405    4.997645    5.046099    5.132164    5.202490    5.257826   \n",
       "min     64.000000   64.000000   64.000000   64.000000   64.000000   64.000000   \n",
       "25%     69.000000   69.000000   69.000000   69.000000   68.000000   68.000000   \n",
       "50%     71.000000   71.000000   71.000000   71.000000   71.000000   71.000000   \n",
       "75%     75.000000   75.000000   75.000000   75.000000   75.000000   75.000000   \n",
       "max     98.000000   98.000000   98.000000   99.000000  100.000000  101.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  258.000000  258.000000  258.000000  \n",
       "mean    71.519380   71.023256   78.236434  \n",
       "std      5.358873    5.582024   13.180958  \n",
       "min     63.000000   55.000000   44.000000  \n",
       "25%     68.000000   67.000000   68.250000  \n",
       "50%     70.000000   70.000000   78.500000  \n",
       "75%     75.000000   74.750000   87.000000  \n",
       "max    101.000000  101.000000  110.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list2.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "242d63d4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>34</td>\n",
       "      <td>40</td>\n",
       "      <td>48</td>\n",
       "      <td>54</td>\n",
       "      <td>59</td>\n",
       "      <td>64</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>48</td>\n",
       "      <td>52</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>76</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>74</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>56</td>\n",
       "      <td>61</td>\n",
       "      <td>65</td>\n",
       "      <td>69</td>\n",
       "      <td>...</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>75</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>36</td>\n",
       "      <td>44</td>\n",
       "      <td>52</td>\n",
       "      <td>61</td>\n",
       "      <td>68</td>\n",
       "      <td>...</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>38</td>\n",
       "      <td>44</td>\n",
       "      <td>49</td>\n",
       "      <td>...</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>981</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>40</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>33</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>17</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>258 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "14       2  12  19  26  34  40  48  54  59  64  ...   70   69   69   68   67   \n",
       "15       2  20  25  29  36  43  48  52  56  60  ...   76   75   75   75   75   \n",
       "16       2  28  35  39  45  50  56  61  65  69  ...   76   76   76   76   76   \n",
       "17       2   6  10  16  26  36  44  52  61  68  ...   88   88   88   88   88   \n",
       "27       2   3   6  12  18  23  28  38  44  49  ...   66   66   66   66   66   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "981      2   0   3   6  12  21  29  35  40  46  ...   67   67   67   67   67   \n",
       "987      2   0   0   2   7  14  21  27  33  41  ...   70   70   70   70   70   \n",
       "988      2   1   3   7  12  17  23  29  35  41  ...   73   73   73   73   73   \n",
       "994      2   0   1   9  17  24  30  36  41  46  ...   70   69   69   68   67   \n",
       "995      2   3   6  12  19  27  35  42  49  56  ...   79   79   79   79   79   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "14    67   66   65   65     93  \n",
       "15    75   75   75   74     85  \n",
       "16    76   76   76   75     94  \n",
       "17    88   88   88   88     98  \n",
       "27    67   67   67   66     66  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "981   66   66   66   66     67  \n",
       "987   69   68   67   66     73  \n",
       "988   73   73   73   73     82  \n",
       "994   67   67   67   67     79  \n",
       "995   79   79   79   79     95  \n",
       "\n",
       "[258 rows x 32 columns]"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list2 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "ea3ed1e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>55.0</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>5.236364</td>\n",
       "      <td>8.672727</td>\n",
       "      <td>13.527273</td>\n",
       "      <td>18.490909</td>\n",
       "      <td>23.163636</td>\n",
       "      <td>27.072727</td>\n",
       "      <td>30.472727</td>\n",
       "      <td>33.181818</td>\n",
       "      <td>...</td>\n",
       "      <td>41.636364</td>\n",
       "      <td>41.309091</td>\n",
       "      <td>40.909091</td>\n",
       "      <td>40.654545</td>\n",
       "      <td>40.400000</td>\n",
       "      <td>40.036364</td>\n",
       "      <td>39.727273</td>\n",
       "      <td>39.345455</td>\n",
       "      <td>38.927273</td>\n",
       "      <td>64.454545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4.116813</td>\n",
       "      <td>4.618656</td>\n",
       "      <td>5.527891</td>\n",
       "      <td>6.070129</td>\n",
       "      <td>6.420086</td>\n",
       "      <td>6.789872</td>\n",
       "      <td>7.182423</td>\n",
       "      <td>7.236365</td>\n",
       "      <td>7.282884</td>\n",
       "      <td>...</td>\n",
       "      <td>6.441657</td>\n",
       "      <td>6.385379</td>\n",
       "      <td>6.313632</td>\n",
       "      <td>6.380579</td>\n",
       "      <td>6.370069</td>\n",
       "      <td>6.374032</td>\n",
       "      <td>6.398653</td>\n",
       "      <td>6.333971</td>\n",
       "      <td>6.294779</td>\n",
       "      <td>13.399583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.0</td>\n",
       "      <td>-5.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>42.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>14.500000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>40.500000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>39.500000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>54.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>63.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>18.500000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>71.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.0</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>105.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust         y1         y2         y3         y4         y5  \\\n",
       "count   55.0  55.000000  55.000000  55.000000  55.000000  55.000000   \n",
       "mean     3.0   3.400000   5.236364   8.672727  13.527273  18.490909   \n",
       "std      0.0   4.116813   4.618656   5.527891   6.070129   6.420086   \n",
       "min      3.0  -5.000000  -1.000000   0.000000   0.000000   0.000000   \n",
       "25%      3.0   0.000000   1.000000   4.500000   9.000000  14.500000   \n",
       "50%      3.0   2.000000   4.000000   8.000000  13.000000  19.000000   \n",
       "75%      3.0   5.500000   8.000000  13.000000  18.500000  23.000000   \n",
       "max      3.0  13.000000  16.000000  20.000000  25.000000  28.000000   \n",
       "\n",
       "              y6         y7         y8         y9  ...        y22        y23  \\\n",
       "count  55.000000  55.000000  55.000000  55.000000  ...  55.000000  55.000000   \n",
       "mean   23.163636  27.072727  30.472727  33.181818  ...  41.636364  41.309091   \n",
       "std     6.789872   7.182423   7.236365   7.282884  ...   6.441657   6.385379   \n",
       "min     0.000000   0.000000   0.000000   0.000000  ...   0.000000   0.000000   \n",
       "25%    19.000000  24.000000  27.000000  30.000000  ...  40.500000  40.000000   \n",
       "50%    25.000000  30.000000  33.000000  35.000000  ...  43.000000  42.000000   \n",
       "75%    28.000000  32.000000  36.000000  38.000000  ...  44.000000  44.000000   \n",
       "max    34.000000  38.000000  39.000000  41.000000  ...  48.000000  48.000000   \n",
       "\n",
       "             y24        y25        y26        y27        y28        y29  \\\n",
       "count  55.000000  55.000000  55.000000  55.000000  55.000000  55.000000   \n",
       "mean   40.909091  40.654545  40.400000  40.036364  39.727273  39.345455   \n",
       "std     6.313632   6.380579   6.370069   6.374032   6.398653   6.333971   \n",
       "min     0.000000   0.000000   0.000000   0.000000   0.000000   0.000000   \n",
       "25%    40.000000  40.000000  39.500000  39.000000  38.000000  38.000000   \n",
       "50%    42.000000  42.000000  41.000000  41.000000  41.000000  40.000000   \n",
       "75%    43.000000  43.000000  43.000000  42.000000  42.000000  42.000000   \n",
       "max    48.000000  48.000000  48.000000  48.000000  48.000000  47.000000   \n",
       "\n",
       "             y30       label  \n",
       "count  55.000000   55.000000  \n",
       "mean   38.927273   64.454545  \n",
       "std     6.294779   13.399583  \n",
       "min     0.000000   42.000000  \n",
       "25%    38.000000   54.000000  \n",
       "50%    40.000000   63.000000  \n",
       "75%    42.000000   71.000000  \n",
       "max    46.000000  105.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list3.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3c75a241",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>32</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>25</td>\n",
       "      <td>31</td>\n",
       "      <td>37</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>548</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>574</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>35</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>575</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>580</th>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>37</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>626</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>642</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>643</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>684</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>34</td>\n",
       "      <td>33</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>690</th>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>37</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>704</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>710</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>724</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>37</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>739</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>764</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>777</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>810</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>856</th>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>936</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>949</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>954</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>960</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>975</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>982</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>983</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>26</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>55 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "3        3  -5  -1   1   5  11  15  19  25  29  ...   39   39   39   38   38   \n",
       "4        3  12  15  18  22  23  25  27  29  30  ...   32   32   32   31   31   \n",
       "5        3  13  13  15  19  24  27  30  33  36  ...   37   37   37   36   36   \n",
       "6        3  11  11  13  17  20  26  31  35  38  ...   40   40   39   38   38   \n",
       "76       3   7   8   8  13  19  26  33  36  40  ...   41   40   39   39   39   \n",
       "92       3   4   7  10  16  22  28  32  35  40  ...   43   43   43   43   43   \n",
       "100      3   3   5  11  17  21  26  33  37  38  ...   44   44   44   44   44   \n",
       "101      3   6   6   8  14  19  25  32  37  38  ...   44   44   43   42   42   \n",
       "115      3   2   6  11  15  23  28  32  36  37  ...   44   44   44   44   44   \n",
       "116      3   0   0   3   8  14  21  26  31  35  ...   44   43   42   41   40   \n",
       "123      3   3   4   8  13  18  24  29  30  32  ...   40   40   40   40   40   \n",
       "140      3   3   4   9  16  22  27  31  35  38  ...   40   40   40   40   40   \n",
       "141      3   1   4   7  12  17  22  27  31  35  ...   41   40   39   39   38   \n",
       "142      3   0   1   7  12  19  25  28  32  34  ...   40   40   40   41   41   \n",
       "150      3   5   9  15  21  26  30  32  34  36  ...   39   39   39   39   39   \n",
       "158      3   0   1   5  12  19  25  28  31  32  ...   46   46   45   45   45   \n",
       "167      3   1   3   7  13  19  26  31  36  39  ...   45   44   43   43   43   \n",
       "174      3   9  13  18  23  28  34  38  39  41  ...   42   41   40   40   39   \n",
       "175      3   5   9  16  22  25  28  31  34  36  ...   45   44   43   43   42   \n",
       "227      3   0   0   0   2   3   4   6   8  10  ...   37   38   39   40   41   \n",
       "358      3  12  12  16  17  21  25  30  33  35  ...   46   46   45   45   45   \n",
       "540      3   0   3   6  11  18  25  31  37  40  ...   43   43   43   42   41   \n",
       "548      3   0   0   1   5  11  19  24  27  30  ...   44   43   42   42   41   \n",
       "557      3   0   0   0   2   5  10  14  21  27  ...   48   48   48   48   48   \n",
       "574      3   2   2   3   7  13  18  24  30  35  ...   35   34   34   33   33   \n",
       "575      3   0   1   3   6   9  12  15  18  21  ...   40   40   40   40   40   \n",
       "580      3  11  13  17  21  27  32  34  37  40  ...   43   43   43   42   41   \n",
       "626      3   0   0   1   7  11  14  17  22  28  ...   42   42   43   43   43   \n",
       "642      3   0   2   7  14  20  24  26  26  29  ...   41   41   41   41   41   \n",
       "643      3   0   0   4   8  14  19  22  25  27  ...   43   43   43   43   43   \n",
       "644      3   0   1   4   9  14  19  22  25  29  ...   42   42   42   42   42   \n",
       "663      3   6   9  14  20  25  30  33  36  39  ...   41   40   39   38   38   \n",
       "684      3   3   7  12  19  25  29  32  35  38  ...   39   38   37   36   35   \n",
       "690      3  10  14  19  23  28  31  35  37  39  ...   42   42   41   40   39   \n",
       "697      3   7  11  16  22  27  31  34  36  39  ...   43   42   42   42   42   \n",
       "704      3   0   2   6  11  19  24  28  32  34  ...   44   43   42   41   41   \n",
       "710      3   4   7  12  17  23  27  31  33  35  ...   45   45   44   44   43   \n",
       "724      3   4   8  14  19  23  28  34  37  39  ...   43   43   43   43   43   \n",
       "732      3   3   7  11  17  23  28  31  33  35  ...   42   41   40   39   39   \n",
       "733      3   5   8  13  19  24  29  33  35  36  ...   43   43   43   43   43   \n",
       "739      3   3   4   7  12  19  26  31  36  38  ...   43   42   41   41   40   \n",
       "764      3   2   5   9  16  23  28  32  36  39  ...   44   43   42   41   40   \n",
       "777      3   6   8  13  19  24  27  31  36  38  ...   43   42   41   41   41   \n",
       "789      3   8  10  11  13  15  18  18  22  23  ...   40   41   41   42   42   \n",
       "810      3   0   0   0   0   0   0   0   0   0  ...    0    0    0    0    0   \n",
       "856      3  13  16  20  25  27  29  31  33  35  ...   45   45   45   45   44   \n",
       "889      3   0   0   2   8  14  20  24  27  30  ...   46   45   45   45   45   \n",
       "911      3   0   0   0   3   7  11  17  22  26  ...   47   47   47   47   47   \n",
       "936      3   0   1   5   9  15  19  23  27  30  ...   43   42   41   41   41   \n",
       "949      3   1   3   6  11  16  21  26  31  35  ...   43   43   42   41   40   \n",
       "954      3   2   3   7  13  18  23  28  31  34  ...   44   44   43   42   41   \n",
       "960      3   3   6  11  18  23  27  30  33  36  ...   43   42   42   42   42   \n",
       "975      3   1   3   7  11  15  19  23  26  29  ...   45   45   45   45   45   \n",
       "982      3   1   3   7  13  18  23  27  31  33  ...   46   45   45   45   45   \n",
       "983      3   0   1   3   7  11  17  22  26  30  ...   46   46   45   45   45   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "5     35   35   35   35     48  \n",
       "6     38   38   38   38     51  \n",
       "76    38   38   38   38     75  \n",
       "92    42   42   41   41     55  \n",
       "100   43   43   43   42     70  \n",
       "101   42   42   42   41     64  \n",
       "115   44   43   42   42     65  \n",
       "116   39   38   38   38     63  \n",
       "123   40   40   39   39     68  \n",
       "140   40   39   38   38     80  \n",
       "141   37   37   36   35     49  \n",
       "142   41   41   41   41     63  \n",
       "150   39   39   38   37     55  \n",
       "158   45   44   43   43     62  \n",
       "167   42   41   40   40     47  \n",
       "174   39   38   38   39     75  \n",
       "175   41   40   40   40     43  \n",
       "227   42   43   43   43     61  \n",
       "358   45   45   44   43     63  \n",
       "540   41   40   39   38     77  \n",
       "548   40   40   40   39     72  \n",
       "557   48   48   47   46     71  \n",
       "574   33   32   32   31     96  \n",
       "575   39   38   38   38    105  \n",
       "580   41   40   39   38     89  \n",
       "626   42   42   42   41     68  \n",
       "642   41   41   41   41     57  \n",
       "643   43   43   43   43     46  \n",
       "644   42   42   42   42     53  \n",
       "663   38   37   37   36     84  \n",
       "684   34   33   32   31     60  \n",
       "690   38   37   37   36     67  \n",
       "697   41   41   41   41     83  \n",
       "704   40   40   40   40     68  \n",
       "710   42   42   41   41     74  \n",
       "724   42   41   40   39     62  \n",
       "732   38   38   37   36     64  \n",
       "733   43   43   43   43     57  \n",
       "739   40   39   39   38     64  \n",
       "764   39   39   39   39     64  \n",
       "777   41   41   41   41     50  \n",
       "789   42   42   42   43     53  \n",
       "810    0    0    0    0     62  \n",
       "856   43   42   41   40     80  \n",
       "889   45   45   45   44     68  \n",
       "911   47   47   47   46     71  \n",
       "936   41   41   40   39     42  \n",
       "949   39   39   39   39     51  \n",
       "954   41   41   41   41     62  \n",
       "960   42   41   41   41     63  \n",
       "975   45   45   44   43     53  \n",
       "982   45   45   45   44     53  \n",
       "983   45   45   44   43     49  \n",
       "\n",
       "[55 rows x 32 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "517a6a31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((750, 30), (250, 30), (750, 1), (250, 1))"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=999)\n",
    "X_train.shape, X_test.shape, y_train.shape, y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "d3ccd4e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\AI\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:494: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9733333333333334\n",
      "0.94\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "\n",
    "GBC = GradientBoostingClassifier(random_state=0, max_depth=1)\n",
    "\n",
    "GBC.fit(X_train, y_train)\n",
    "\n",
    "print(GBC.score(X_train, y_train))\n",
    "print(GBC.score(X_test, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "f1c4f4cd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list4 = []\n",
    "def concat2(row):\n",
    "    list2.append(row)\n",
    "    print(list4)\n",
    "    return list4\n",
    "\n",
    "concat2(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9839ddbc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((750, 31), (250, 31), (750,), (250,))"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X3 =con.iloc[:, :-1]\n",
    "y3 =con.iloc[:, -1]\n",
    "\n",
    "X_train3, X_test3, y_train3, y_test3 = train_test_split(X3, y3, random_state=999)\n",
    "X_train3.shape, X_test3.shape, y_train3.shape, y_test3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "7e4874e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.570814502362594\n",
      "0.10850001712412982\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBC3 = GradientBoostingRegressor()\n",
    "GBC3.fit(X_train3, y_train3)\n",
    "\n",
    "print(GBC3.score(X_train3, y_train3))\n",
    "print(GBC3.score(X_test3, y_test3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "1f5609e1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>clust</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.139148</td>\n",
       "      <td>-0.132901</td>\n",
       "      <td>-0.111422</td>\n",
       "      <td>-0.064752</td>\n",
       "      <td>-0.039746</td>\n",
       "      <td>-0.023691</td>\n",
       "      <td>0.003850</td>\n",
       "      <td>0.018422</td>\n",
       "      <td>0.033148</td>\n",
       "      <td>...</td>\n",
       "      <td>0.039863</td>\n",
       "      <td>0.037829</td>\n",
       "      <td>0.037638</td>\n",
       "      <td>0.037312</td>\n",
       "      <td>0.040433</td>\n",
       "      <td>0.040879</td>\n",
       "      <td>0.042812</td>\n",
       "      <td>0.044662</td>\n",
       "      <td>0.038350</td>\n",
       "      <td>0.069829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y1</th>\n",
       "      <td>-0.139148</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.978730</td>\n",
       "      <td>0.883421</td>\n",
       "      <td>0.704102</td>\n",
       "      <td>0.636743</td>\n",
       "      <td>0.574155</td>\n",
       "      <td>0.386446</td>\n",
       "      <td>0.314423</td>\n",
       "      <td>0.217257</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.035390</td>\n",
       "      <td>-0.033509</td>\n",
       "      <td>-0.033100</td>\n",
       "      <td>-0.031421</td>\n",
       "      <td>-0.030679</td>\n",
       "      <td>-0.030720</td>\n",
       "      <td>-0.033231</td>\n",
       "      <td>-0.034029</td>\n",
       "      <td>-0.028430</td>\n",
       "      <td>0.074123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y2</th>\n",
       "      <td>-0.132901</td>\n",
       "      <td>0.978730</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.935518</td>\n",
       "      <td>0.782180</td>\n",
       "      <td>0.719922</td>\n",
       "      <td>0.659100</td>\n",
       "      <td>0.483293</td>\n",
       "      <td>0.408247</td>\n",
       "      <td>0.308445</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013344</td>\n",
       "      <td>-0.013207</td>\n",
       "      <td>-0.014331</td>\n",
       "      <td>-0.014184</td>\n",
       "      <td>-0.015282</td>\n",
       "      <td>-0.016562</td>\n",
       "      <td>-0.020688</td>\n",
       "      <td>-0.023275</td>\n",
       "      <td>-0.018669</td>\n",
       "      <td>0.103914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y3</th>\n",
       "      <td>-0.111422</td>\n",
       "      <td>0.883421</td>\n",
       "      <td>0.935518</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.887740</td>\n",
       "      <td>0.833279</td>\n",
       "      <td>0.772677</td>\n",
       "      <td>0.607739</td>\n",
       "      <td>0.532318</td>\n",
       "      <td>0.432067</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043184</td>\n",
       "      <td>0.041507</td>\n",
       "      <td>0.038532</td>\n",
       "      <td>0.037036</td>\n",
       "      <td>0.033741</td>\n",
       "      <td>0.030835</td>\n",
       "      <td>0.024460</td>\n",
       "      <td>0.020072</td>\n",
       "      <td>0.022639</td>\n",
       "      <td>0.157713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y4</th>\n",
       "      <td>-0.064752</td>\n",
       "      <td>0.704102</td>\n",
       "      <td>0.782180</td>\n",
       "      <td>0.887740</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.977621</td>\n",
       "      <td>0.931081</td>\n",
       "      <td>0.786800</td>\n",
       "      <td>0.719421</td>\n",
       "      <td>0.625316</td>\n",
       "      <td>...</td>\n",
       "      <td>0.175319</td>\n",
       "      <td>0.171076</td>\n",
       "      <td>0.165194</td>\n",
       "      <td>0.161121</td>\n",
       "      <td>0.154877</td>\n",
       "      <td>0.149779</td>\n",
       "      <td>0.140236</td>\n",
       "      <td>0.131529</td>\n",
       "      <td>0.128906</td>\n",
       "      <td>0.221197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y5</th>\n",
       "      <td>-0.039746</td>\n",
       "      <td>0.636743</td>\n",
       "      <td>0.719922</td>\n",
       "      <td>0.833279</td>\n",
       "      <td>0.977621</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.979193</td>\n",
       "      <td>0.863372</td>\n",
       "      <td>0.807976</td>\n",
       "      <td>0.725001</td>\n",
       "      <td>...</td>\n",
       "      <td>0.269906</td>\n",
       "      <td>0.263650</td>\n",
       "      <td>0.256514</td>\n",
       "      <td>0.251142</td>\n",
       "      <td>0.243456</td>\n",
       "      <td>0.237279</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>0.215325</td>\n",
       "      <td>0.211075</td>\n",
       "      <td>0.253040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y6</th>\n",
       "      <td>-0.023691</td>\n",
       "      <td>0.574155</td>\n",
       "      <td>0.659100</td>\n",
       "      <td>0.772677</td>\n",
       "      <td>0.931081</td>\n",
       "      <td>0.979193</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.919714</td>\n",
       "      <td>0.877725</td>\n",
       "      <td>0.807496</td>\n",
       "      <td>...</td>\n",
       "      <td>0.356924</td>\n",
       "      <td>0.349396</td>\n",
       "      <td>0.341417</td>\n",
       "      <td>0.335017</td>\n",
       "      <td>0.326581</td>\n",
       "      <td>0.319611</td>\n",
       "      <td>0.306904</td>\n",
       "      <td>0.294924</td>\n",
       "      <td>0.289450</td>\n",
       "      <td>0.281542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y7</th>\n",
       "      <td>0.003850</td>\n",
       "      <td>0.386446</td>\n",
       "      <td>0.483293</td>\n",
       "      <td>0.607739</td>\n",
       "      <td>0.786800</td>\n",
       "      <td>0.863372</td>\n",
       "      <td>0.919714</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.983649</td>\n",
       "      <td>0.928762</td>\n",
       "      <td>...</td>\n",
       "      <td>0.438115</td>\n",
       "      <td>0.427734</td>\n",
       "      <td>0.417970</td>\n",
       "      <td>0.410199</td>\n",
       "      <td>0.400641</td>\n",
       "      <td>0.392642</td>\n",
       "      <td>0.378707</td>\n",
       "      <td>0.364795</td>\n",
       "      <td>0.356872</td>\n",
       "      <td>0.338080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y8</th>\n",
       "      <td>0.018422</td>\n",
       "      <td>0.314423</td>\n",
       "      <td>0.408247</td>\n",
       "      <td>0.532318</td>\n",
       "      <td>0.719421</td>\n",
       "      <td>0.807976</td>\n",
       "      <td>0.877725</td>\n",
       "      <td>0.983649</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.967053</td>\n",
       "      <td>...</td>\n",
       "      <td>0.523683</td>\n",
       "      <td>0.513055</td>\n",
       "      <td>0.502979</td>\n",
       "      <td>0.494442</td>\n",
       "      <td>0.484459</td>\n",
       "      <td>0.475934</td>\n",
       "      <td>0.460783</td>\n",
       "      <td>0.445681</td>\n",
       "      <td>0.436325</td>\n",
       "      <td>0.365451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y9</th>\n",
       "      <td>0.033148</td>\n",
       "      <td>0.217257</td>\n",
       "      <td>0.308445</td>\n",
       "      <td>0.432067</td>\n",
       "      <td>0.625316</td>\n",
       "      <td>0.725001</td>\n",
       "      <td>0.807496</td>\n",
       "      <td>0.928762</td>\n",
       "      <td>0.967053</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.613232</td>\n",
       "      <td>0.601722</td>\n",
       "      <td>0.591313</td>\n",
       "      <td>0.581980</td>\n",
       "      <td>0.571155</td>\n",
       "      <td>0.562000</td>\n",
       "      <td>0.545999</td>\n",
       "      <td>0.529506</td>\n",
       "      <td>0.518750</td>\n",
       "      <td>0.386091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y10</th>\n",
       "      <td>0.039491</td>\n",
       "      <td>0.161642</td>\n",
       "      <td>0.246008</td>\n",
       "      <td>0.364828</td>\n",
       "      <td>0.561606</td>\n",
       "      <td>0.666709</td>\n",
       "      <td>0.756573</td>\n",
       "      <td>0.882127</td>\n",
       "      <td>0.934686</td>\n",
       "      <td>0.986215</td>\n",
       "      <td>...</td>\n",
       "      <td>0.697318</td>\n",
       "      <td>0.686249</td>\n",
       "      <td>0.676025</td>\n",
       "      <td>0.666469</td>\n",
       "      <td>0.655576</td>\n",
       "      <td>0.646196</td>\n",
       "      <td>0.629693</td>\n",
       "      <td>0.612494</td>\n",
       "      <td>0.600772</td>\n",
       "      <td>0.396364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y11</th>\n",
       "      <td>0.044843</td>\n",
       "      <td>0.113074</td>\n",
       "      <td>0.189052</td>\n",
       "      <td>0.300578</td>\n",
       "      <td>0.495856</td>\n",
       "      <td>0.605743</td>\n",
       "      <td>0.700824</td>\n",
       "      <td>0.827957</td>\n",
       "      <td>0.890668</td>\n",
       "      <td>0.955563</td>\n",
       "      <td>...</td>\n",
       "      <td>0.765944</td>\n",
       "      <td>0.755272</td>\n",
       "      <td>0.745069</td>\n",
       "      <td>0.735464</td>\n",
       "      <td>0.724620</td>\n",
       "      <td>0.715133</td>\n",
       "      <td>0.698798</td>\n",
       "      <td>0.681526</td>\n",
       "      <td>0.668925</td>\n",
       "      <td>0.404693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y12</th>\n",
       "      <td>0.048094</td>\n",
       "      <td>0.067639</td>\n",
       "      <td>0.135746</td>\n",
       "      <td>0.240337</td>\n",
       "      <td>0.434961</td>\n",
       "      <td>0.547379</td>\n",
       "      <td>0.645092</td>\n",
       "      <td>0.769457</td>\n",
       "      <td>0.840942</td>\n",
       "      <td>0.915927</td>\n",
       "      <td>...</td>\n",
       "      <td>0.827954</td>\n",
       "      <td>0.818185</td>\n",
       "      <td>0.808582</td>\n",
       "      <td>0.799446</td>\n",
       "      <td>0.789197</td>\n",
       "      <td>0.779736</td>\n",
       "      <td>0.764203</td>\n",
       "      <td>0.747268</td>\n",
       "      <td>0.734331</td>\n",
       "      <td>0.400532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y13</th>\n",
       "      <td>0.052312</td>\n",
       "      <td>0.027930</td>\n",
       "      <td>0.088339</td>\n",
       "      <td>0.186194</td>\n",
       "      <td>0.377887</td>\n",
       "      <td>0.491958</td>\n",
       "      <td>0.590783</td>\n",
       "      <td>0.710902</td>\n",
       "      <td>0.788478</td>\n",
       "      <td>0.870787</td>\n",
       "      <td>...</td>\n",
       "      <td>0.878790</td>\n",
       "      <td>0.869917</td>\n",
       "      <td>0.861133</td>\n",
       "      <td>0.852523</td>\n",
       "      <td>0.842832</td>\n",
       "      <td>0.833538</td>\n",
       "      <td>0.818575</td>\n",
       "      <td>0.802035</td>\n",
       "      <td>0.789075</td>\n",
       "      <td>0.395042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y14</th>\n",
       "      <td>0.053033</td>\n",
       "      <td>0.000434</td>\n",
       "      <td>0.053646</td>\n",
       "      <td>0.144561</td>\n",
       "      <td>0.325972</td>\n",
       "      <td>0.439855</td>\n",
       "      <td>0.538833</td>\n",
       "      <td>0.654592</td>\n",
       "      <td>0.735886</td>\n",
       "      <td>0.824146</td>\n",
       "      <td>...</td>\n",
       "      <td>0.915520</td>\n",
       "      <td>0.907569</td>\n",
       "      <td>0.899805</td>\n",
       "      <td>0.891921</td>\n",
       "      <td>0.883016</td>\n",
       "      <td>0.874136</td>\n",
       "      <td>0.859702</td>\n",
       "      <td>0.843553</td>\n",
       "      <td>0.831086</td>\n",
       "      <td>0.383823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y15</th>\n",
       "      <td>0.053545</td>\n",
       "      <td>-0.020124</td>\n",
       "      <td>0.025240</td>\n",
       "      <td>0.108194</td>\n",
       "      <td>0.279106</td>\n",
       "      <td>0.390990</td>\n",
       "      <td>0.488898</td>\n",
       "      <td>0.599678</td>\n",
       "      <td>0.684630</td>\n",
       "      <td>0.777030</td>\n",
       "      <td>...</td>\n",
       "      <td>0.944434</td>\n",
       "      <td>0.937602</td>\n",
       "      <td>0.930818</td>\n",
       "      <td>0.923712</td>\n",
       "      <td>0.915694</td>\n",
       "      <td>0.906986</td>\n",
       "      <td>0.893237</td>\n",
       "      <td>0.877501</td>\n",
       "      <td>0.865533</td>\n",
       "      <td>0.369468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y16</th>\n",
       "      <td>0.047140</td>\n",
       "      <td>-0.033699</td>\n",
       "      <td>0.005284</td>\n",
       "      <td>0.080980</td>\n",
       "      <td>0.244957</td>\n",
       "      <td>0.353385</td>\n",
       "      <td>0.449383</td>\n",
       "      <td>0.553096</td>\n",
       "      <td>0.639782</td>\n",
       "      <td>0.734159</td>\n",
       "      <td>...</td>\n",
       "      <td>0.964822</td>\n",
       "      <td>0.958908</td>\n",
       "      <td>0.953225</td>\n",
       "      <td>0.947049</td>\n",
       "      <td>0.939973</td>\n",
       "      <td>0.931972</td>\n",
       "      <td>0.919077</td>\n",
       "      <td>0.903791</td>\n",
       "      <td>0.892599</td>\n",
       "      <td>0.353744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y17</th>\n",
       "      <td>0.041577</td>\n",
       "      <td>-0.041754</td>\n",
       "      <td>-0.007233</td>\n",
       "      <td>0.062358</td>\n",
       "      <td>0.218696</td>\n",
       "      <td>0.324454</td>\n",
       "      <td>0.418533</td>\n",
       "      <td>0.517123</td>\n",
       "      <td>0.604360</td>\n",
       "      <td>0.698845</td>\n",
       "      <td>...</td>\n",
       "      <td>0.978094</td>\n",
       "      <td>0.972957</td>\n",
       "      <td>0.968086</td>\n",
       "      <td>0.962731</td>\n",
       "      <td>0.956371</td>\n",
       "      <td>0.948750</td>\n",
       "      <td>0.936509</td>\n",
       "      <td>0.921673</td>\n",
       "      <td>0.911411</td>\n",
       "      <td>0.339447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y18</th>\n",
       "      <td>0.041228</td>\n",
       "      <td>-0.041032</td>\n",
       "      <td>-0.010544</td>\n",
       "      <td>0.054692</td>\n",
       "      <td>0.202820</td>\n",
       "      <td>0.305721</td>\n",
       "      <td>0.398034</td>\n",
       "      <td>0.491670</td>\n",
       "      <td>0.578388</td>\n",
       "      <td>0.671896</td>\n",
       "      <td>...</td>\n",
       "      <td>0.986775</td>\n",
       "      <td>0.982249</td>\n",
       "      <td>0.978050</td>\n",
       "      <td>0.973473</td>\n",
       "      <td>0.967772</td>\n",
       "      <td>0.960806</td>\n",
       "      <td>0.949241</td>\n",
       "      <td>0.935206</td>\n",
       "      <td>0.925847</td>\n",
       "      <td>0.332925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y19</th>\n",
       "      <td>0.039602</td>\n",
       "      <td>-0.040610</td>\n",
       "      <td>-0.012963</td>\n",
       "      <td>0.048976</td>\n",
       "      <td>0.191651</td>\n",
       "      <td>0.291575</td>\n",
       "      <td>0.382224</td>\n",
       "      <td>0.470931</td>\n",
       "      <td>0.557435</td>\n",
       "      <td>0.649836</td>\n",
       "      <td>...</td>\n",
       "      <td>0.992937</td>\n",
       "      <td>0.989303</td>\n",
       "      <td>0.985714</td>\n",
       "      <td>0.981889</td>\n",
       "      <td>0.976906</td>\n",
       "      <td>0.970482</td>\n",
       "      <td>0.959665</td>\n",
       "      <td>0.946314</td>\n",
       "      <td>0.937663</td>\n",
       "      <td>0.326936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y20</th>\n",
       "      <td>0.039570</td>\n",
       "      <td>-0.040560</td>\n",
       "      <td>-0.014755</td>\n",
       "      <td>0.045093</td>\n",
       "      <td>0.184095</td>\n",
       "      <td>0.282384</td>\n",
       "      <td>0.371789</td>\n",
       "      <td>0.457641</td>\n",
       "      <td>0.543778</td>\n",
       "      <td>0.635276</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996538</td>\n",
       "      <td>0.993642</td>\n",
       "      <td>0.990654</td>\n",
       "      <td>0.987294</td>\n",
       "      <td>0.982835</td>\n",
       "      <td>0.976699</td>\n",
       "      <td>0.966452</td>\n",
       "      <td>0.953289</td>\n",
       "      <td>0.945210</td>\n",
       "      <td>0.324193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y21</th>\n",
       "      <td>0.039923</td>\n",
       "      <td>-0.038262</td>\n",
       "      <td>-0.014794</td>\n",
       "      <td>0.042620</td>\n",
       "      <td>0.177831</td>\n",
       "      <td>0.274508</td>\n",
       "      <td>0.362718</td>\n",
       "      <td>0.446338</td>\n",
       "      <td>0.532189</td>\n",
       "      <td>0.622635</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998805</td>\n",
       "      <td>0.996689</td>\n",
       "      <td>0.994011</td>\n",
       "      <td>0.991130</td>\n",
       "      <td>0.986968</td>\n",
       "      <td>0.981190</td>\n",
       "      <td>0.971503</td>\n",
       "      <td>0.958571</td>\n",
       "      <td>0.950768</td>\n",
       "      <td>0.320207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y22</th>\n",
       "      <td>0.039863</td>\n",
       "      <td>-0.035390</td>\n",
       "      <td>-0.013344</td>\n",
       "      <td>0.043184</td>\n",
       "      <td>0.175319</td>\n",
       "      <td>0.269906</td>\n",
       "      <td>0.356924</td>\n",
       "      <td>0.438115</td>\n",
       "      <td>0.523683</td>\n",
       "      <td>0.613232</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998760</td>\n",
       "      <td>0.996776</td>\n",
       "      <td>0.994268</td>\n",
       "      <td>0.990660</td>\n",
       "      <td>0.985263</td>\n",
       "      <td>0.976346</td>\n",
       "      <td>0.963966</td>\n",
       "      <td>0.956651</td>\n",
       "      <td>0.321416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y23</th>\n",
       "      <td>0.037829</td>\n",
       "      <td>-0.033509</td>\n",
       "      <td>-0.013207</td>\n",
       "      <td>0.041507</td>\n",
       "      <td>0.171076</td>\n",
       "      <td>0.263650</td>\n",
       "      <td>0.349396</td>\n",
       "      <td>0.427734</td>\n",
       "      <td>0.513055</td>\n",
       "      <td>0.601722</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998760</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998799</td>\n",
       "      <td>0.996903</td>\n",
       "      <td>0.993851</td>\n",
       "      <td>0.989163</td>\n",
       "      <td>0.981033</td>\n",
       "      <td>0.969129</td>\n",
       "      <td>0.962100</td>\n",
       "      <td>0.317715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y24</th>\n",
       "      <td>0.037638</td>\n",
       "      <td>-0.033100</td>\n",
       "      <td>-0.014331</td>\n",
       "      <td>0.038532</td>\n",
       "      <td>0.165194</td>\n",
       "      <td>0.256514</td>\n",
       "      <td>0.341417</td>\n",
       "      <td>0.417970</td>\n",
       "      <td>0.502979</td>\n",
       "      <td>0.591313</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996776</td>\n",
       "      <td>0.998799</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998869</td>\n",
       "      <td>0.996711</td>\n",
       "      <td>0.992846</td>\n",
       "      <td>0.985852</td>\n",
       "      <td>0.974561</td>\n",
       "      <td>0.967827</td>\n",
       "      <td>0.316342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y25</th>\n",
       "      <td>0.037312</td>\n",
       "      <td>-0.031421</td>\n",
       "      <td>-0.014184</td>\n",
       "      <td>0.037036</td>\n",
       "      <td>0.161121</td>\n",
       "      <td>0.251142</td>\n",
       "      <td>0.335017</td>\n",
       "      <td>0.410199</td>\n",
       "      <td>0.494442</td>\n",
       "      <td>0.581980</td>\n",
       "      <td>...</td>\n",
       "      <td>0.994268</td>\n",
       "      <td>0.996903</td>\n",
       "      <td>0.998869</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998740</td>\n",
       "      <td>0.995807</td>\n",
       "      <td>0.989800</td>\n",
       "      <td>0.979216</td>\n",
       "      <td>0.972729</td>\n",
       "      <td>0.312726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y26</th>\n",
       "      <td>0.040433</td>\n",
       "      <td>-0.030679</td>\n",
       "      <td>-0.015282</td>\n",
       "      <td>0.033741</td>\n",
       "      <td>0.154877</td>\n",
       "      <td>0.243456</td>\n",
       "      <td>0.326581</td>\n",
       "      <td>0.400641</td>\n",
       "      <td>0.484459</td>\n",
       "      <td>0.571155</td>\n",
       "      <td>...</td>\n",
       "      <td>0.990660</td>\n",
       "      <td>0.993851</td>\n",
       "      <td>0.996711</td>\n",
       "      <td>0.998740</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998262</td>\n",
       "      <td>0.993728</td>\n",
       "      <td>0.984314</td>\n",
       "      <td>0.978210</td>\n",
       "      <td>0.308714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y27</th>\n",
       "      <td>0.040879</td>\n",
       "      <td>-0.030720</td>\n",
       "      <td>-0.016562</td>\n",
       "      <td>0.030835</td>\n",
       "      <td>0.149779</td>\n",
       "      <td>0.237279</td>\n",
       "      <td>0.319611</td>\n",
       "      <td>0.392642</td>\n",
       "      <td>0.475934</td>\n",
       "      <td>0.562000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.985263</td>\n",
       "      <td>0.989163</td>\n",
       "      <td>0.992846</td>\n",
       "      <td>0.995807</td>\n",
       "      <td>0.998262</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.997680</td>\n",
       "      <td>0.990321</td>\n",
       "      <td>0.984543</td>\n",
       "      <td>0.305478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y28</th>\n",
       "      <td>0.042812</td>\n",
       "      <td>-0.033231</td>\n",
       "      <td>-0.020688</td>\n",
       "      <td>0.024460</td>\n",
       "      <td>0.140236</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>0.306904</td>\n",
       "      <td>0.378707</td>\n",
       "      <td>0.460783</td>\n",
       "      <td>0.545999</td>\n",
       "      <td>...</td>\n",
       "      <td>0.976346</td>\n",
       "      <td>0.981033</td>\n",
       "      <td>0.985852</td>\n",
       "      <td>0.989800</td>\n",
       "      <td>0.993728</td>\n",
       "      <td>0.997680</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.994763</td>\n",
       "      <td>0.989504</td>\n",
       "      <td>0.300597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y29</th>\n",
       "      <td>0.044662</td>\n",
       "      <td>-0.034029</td>\n",
       "      <td>-0.023275</td>\n",
       "      <td>0.020072</td>\n",
       "      <td>0.131529</td>\n",
       "      <td>0.215325</td>\n",
       "      <td>0.294924</td>\n",
       "      <td>0.364795</td>\n",
       "      <td>0.445681</td>\n",
       "      <td>0.529506</td>\n",
       "      <td>...</td>\n",
       "      <td>0.963966</td>\n",
       "      <td>0.969129</td>\n",
       "      <td>0.974561</td>\n",
       "      <td>0.979216</td>\n",
       "      <td>0.984314</td>\n",
       "      <td>0.990321</td>\n",
       "      <td>0.994763</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.996866</td>\n",
       "      <td>0.303217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y30</th>\n",
       "      <td>0.038350</td>\n",
       "      <td>-0.028430</td>\n",
       "      <td>-0.018669</td>\n",
       "      <td>0.022639</td>\n",
       "      <td>0.128906</td>\n",
       "      <td>0.211075</td>\n",
       "      <td>0.289450</td>\n",
       "      <td>0.356872</td>\n",
       "      <td>0.436325</td>\n",
       "      <td>0.518750</td>\n",
       "      <td>...</td>\n",
       "      <td>0.956651</td>\n",
       "      <td>0.962100</td>\n",
       "      <td>0.967827</td>\n",
       "      <td>0.972729</td>\n",
       "      <td>0.978210</td>\n",
       "      <td>0.984543</td>\n",
       "      <td>0.989504</td>\n",
       "      <td>0.996866</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.302594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>label</th>\n",
       "      <td>0.069829</td>\n",
       "      <td>0.074123</td>\n",
       "      <td>0.103914</td>\n",
       "      <td>0.157713</td>\n",
       "      <td>0.221197</td>\n",
       "      <td>0.253040</td>\n",
       "      <td>0.281542</td>\n",
       "      <td>0.338080</td>\n",
       "      <td>0.365451</td>\n",
       "      <td>0.386091</td>\n",
       "      <td>...</td>\n",
       "      <td>0.321416</td>\n",
       "      <td>0.317715</td>\n",
       "      <td>0.316342</td>\n",
       "      <td>0.312726</td>\n",
       "      <td>0.308714</td>\n",
       "      <td>0.305478</td>\n",
       "      <td>0.300597</td>\n",
       "      <td>0.303217</td>\n",
       "      <td>0.302594</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          clust        y1        y2        y3        y4        y5        y6  \\\n",
       "clust  1.000000 -0.139148 -0.132901 -0.111422 -0.064752 -0.039746 -0.023691   \n",
       "y1    -0.139148  1.000000  0.978730  0.883421  0.704102  0.636743  0.574155   \n",
       "y2    -0.132901  0.978730  1.000000  0.935518  0.782180  0.719922  0.659100   \n",
       "y3    -0.111422  0.883421  0.935518  1.000000  0.887740  0.833279  0.772677   \n",
       "y4    -0.064752  0.704102  0.782180  0.887740  1.000000  0.977621  0.931081   \n",
       "y5    -0.039746  0.636743  0.719922  0.833279  0.977621  1.000000  0.979193   \n",
       "y6    -0.023691  0.574155  0.659100  0.772677  0.931081  0.979193  1.000000   \n",
       "y7     0.003850  0.386446  0.483293  0.607739  0.786800  0.863372  0.919714   \n",
       "y8     0.018422  0.314423  0.408247  0.532318  0.719421  0.807976  0.877725   \n",
       "y9     0.033148  0.217257  0.308445  0.432067  0.625316  0.725001  0.807496   \n",
       "y10    0.039491  0.161642  0.246008  0.364828  0.561606  0.666709  0.756573   \n",
       "y11    0.044843  0.113074  0.189052  0.300578  0.495856  0.605743  0.700824   \n",
       "y12    0.048094  0.067639  0.135746  0.240337  0.434961  0.547379  0.645092   \n",
       "y13    0.052312  0.027930  0.088339  0.186194  0.377887  0.491958  0.590783   \n",
       "y14    0.053033  0.000434  0.053646  0.144561  0.325972  0.439855  0.538833   \n",
       "y15    0.053545 -0.020124  0.025240  0.108194  0.279106  0.390990  0.488898   \n",
       "y16    0.047140 -0.033699  0.005284  0.080980  0.244957  0.353385  0.449383   \n",
       "y17    0.041577 -0.041754 -0.007233  0.062358  0.218696  0.324454  0.418533   \n",
       "y18    0.041228 -0.041032 -0.010544  0.054692  0.202820  0.305721  0.398034   \n",
       "y19    0.039602 -0.040610 -0.012963  0.048976  0.191651  0.291575  0.382224   \n",
       "y20    0.039570 -0.040560 -0.014755  0.045093  0.184095  0.282384  0.371789   \n",
       "y21    0.039923 -0.038262 -0.014794  0.042620  0.177831  0.274508  0.362718   \n",
       "y22    0.039863 -0.035390 -0.013344  0.043184  0.175319  0.269906  0.356924   \n",
       "y23    0.037829 -0.033509 -0.013207  0.041507  0.171076  0.263650  0.349396   \n",
       "y24    0.037638 -0.033100 -0.014331  0.038532  0.165194  0.256514  0.341417   \n",
       "y25    0.037312 -0.031421 -0.014184  0.037036  0.161121  0.251142  0.335017   \n",
       "y26    0.040433 -0.030679 -0.015282  0.033741  0.154877  0.243456  0.326581   \n",
       "y27    0.040879 -0.030720 -0.016562  0.030835  0.149779  0.237279  0.319611   \n",
       "y28    0.042812 -0.033231 -0.020688  0.024460  0.140236  0.225852  0.306904   \n",
       "y29    0.044662 -0.034029 -0.023275  0.020072  0.131529  0.215325  0.294924   \n",
       "y30    0.038350 -0.028430 -0.018669  0.022639  0.128906  0.211075  0.289450   \n",
       "label  0.069829  0.074123  0.103914  0.157713  0.221197  0.253040  0.281542   \n",
       "\n",
       "             y7        y8        y9  ...       y22       y23       y24  \\\n",
       "clust  0.003850  0.018422  0.033148  ...  0.039863  0.037829  0.037638   \n",
       "y1     0.386446  0.314423  0.217257  ... -0.035390 -0.033509 -0.033100   \n",
       "y2     0.483293  0.408247  0.308445  ... -0.013344 -0.013207 -0.014331   \n",
       "y3     0.607739  0.532318  0.432067  ...  0.043184  0.041507  0.038532   \n",
       "y4     0.786800  0.719421  0.625316  ...  0.175319  0.171076  0.165194   \n",
       "y5     0.863372  0.807976  0.725001  ...  0.269906  0.263650  0.256514   \n",
       "y6     0.919714  0.877725  0.807496  ...  0.356924  0.349396  0.341417   \n",
       "y7     1.000000  0.983649  0.928762  ...  0.438115  0.427734  0.417970   \n",
       "y8     0.983649  1.000000  0.967053  ...  0.523683  0.513055  0.502979   \n",
       "y9     0.928762  0.967053  1.000000  ...  0.613232  0.601722  0.591313   \n",
       "y10    0.882127  0.934686  0.986215  ...  0.697318  0.686249  0.676025   \n",
       "y11    0.827957  0.890668  0.955563  ...  0.765944  0.755272  0.745069   \n",
       "y12    0.769457  0.840942  0.915927  ...  0.827954  0.818185  0.808582   \n",
       "y13    0.710902  0.788478  0.870787  ...  0.878790  0.869917  0.861133   \n",
       "y14    0.654592  0.735886  0.824146  ...  0.915520  0.907569  0.899805   \n",
       "y15    0.599678  0.684630  0.777030  ...  0.944434  0.937602  0.930818   \n",
       "y16    0.553096  0.639782  0.734159  ...  0.964822  0.958908  0.953225   \n",
       "y17    0.517123  0.604360  0.698845  ...  0.978094  0.972957  0.968086   \n",
       "y18    0.491670  0.578388  0.671896  ...  0.986775  0.982249  0.978050   \n",
       "y19    0.470931  0.557435  0.649836  ...  0.992937  0.989303  0.985714   \n",
       "y20    0.457641  0.543778  0.635276  ...  0.996538  0.993642  0.990654   \n",
       "y21    0.446338  0.532189  0.622635  ...  0.998805  0.996689  0.994011   \n",
       "y22    0.438115  0.523683  0.613232  ...  1.000000  0.998760  0.996776   \n",
       "y23    0.427734  0.513055  0.601722  ...  0.998760  1.000000  0.998799   \n",
       "y24    0.417970  0.502979  0.591313  ...  0.996776  0.998799  1.000000   \n",
       "y25    0.410199  0.494442  0.581980  ...  0.994268  0.996903  0.998869   \n",
       "y26    0.400641  0.484459  0.571155  ...  0.990660  0.993851  0.996711   \n",
       "y27    0.392642  0.475934  0.562000  ...  0.985263  0.989163  0.992846   \n",
       "y28    0.378707  0.460783  0.545999  ...  0.976346  0.981033  0.985852   \n",
       "y29    0.364795  0.445681  0.529506  ...  0.963966  0.969129  0.974561   \n",
       "y30    0.356872  0.436325  0.518750  ...  0.956651  0.962100  0.967827   \n",
       "label  0.338080  0.365451  0.386091  ...  0.321416  0.317715  0.316342   \n",
       "\n",
       "            y25       y26       y27       y28       y29       y30     label  \n",
       "clust  0.037312  0.040433  0.040879  0.042812  0.044662  0.038350  0.069829  \n",
       "y1    -0.031421 -0.030679 -0.030720 -0.033231 -0.034029 -0.028430  0.074123  \n",
       "y2    -0.014184 -0.015282 -0.016562 -0.020688 -0.023275 -0.018669  0.103914  \n",
       "y3     0.037036  0.033741  0.030835  0.024460  0.020072  0.022639  0.157713  \n",
       "y4     0.161121  0.154877  0.149779  0.140236  0.131529  0.128906  0.221197  \n",
       "y5     0.251142  0.243456  0.237279  0.225852  0.215325  0.211075  0.253040  \n",
       "y6     0.335017  0.326581  0.319611  0.306904  0.294924  0.289450  0.281542  \n",
       "y7     0.410199  0.400641  0.392642  0.378707  0.364795  0.356872  0.338080  \n",
       "y8     0.494442  0.484459  0.475934  0.460783  0.445681  0.436325  0.365451  \n",
       "y9     0.581980  0.571155  0.562000  0.545999  0.529506  0.518750  0.386091  \n",
       "y10    0.666469  0.655576  0.646196  0.629693  0.612494  0.600772  0.396364  \n",
       "y11    0.735464  0.724620  0.715133  0.698798  0.681526  0.668925  0.404693  \n",
       "y12    0.799446  0.789197  0.779736  0.764203  0.747268  0.734331  0.400532  \n",
       "y13    0.852523  0.842832  0.833538  0.818575  0.802035  0.789075  0.395042  \n",
       "y14    0.891921  0.883016  0.874136  0.859702  0.843553  0.831086  0.383823  \n",
       "y15    0.923712  0.915694  0.906986  0.893237  0.877501  0.865533  0.369468  \n",
       "y16    0.947049  0.939973  0.931972  0.919077  0.903791  0.892599  0.353744  \n",
       "y17    0.962731  0.956371  0.948750  0.936509  0.921673  0.911411  0.339447  \n",
       "y18    0.973473  0.967772  0.960806  0.949241  0.935206  0.925847  0.332925  \n",
       "y19    0.981889  0.976906  0.970482  0.959665  0.946314  0.937663  0.326936  \n",
       "y20    0.987294  0.982835  0.976699  0.966452  0.953289  0.945210  0.324193  \n",
       "y21    0.991130  0.986968  0.981190  0.971503  0.958571  0.950768  0.320207  \n",
       "y22    0.994268  0.990660  0.985263  0.976346  0.963966  0.956651  0.321416  \n",
       "y23    0.996903  0.993851  0.989163  0.981033  0.969129  0.962100  0.317715  \n",
       "y24    0.998869  0.996711  0.992846  0.985852  0.974561  0.967827  0.316342  \n",
       "y25    1.000000  0.998740  0.995807  0.989800  0.979216  0.972729  0.312726  \n",
       "y26    0.998740  1.000000  0.998262  0.993728  0.984314  0.978210  0.308714  \n",
       "y27    0.995807  0.998262  1.000000  0.997680  0.990321  0.984543  0.305478  \n",
       "y28    0.989800  0.993728  0.997680  1.000000  0.994763  0.989504  0.300597  \n",
       "y29    0.979216  0.984314  0.990321  0.994763  1.000000  0.996866  0.303217  \n",
       "y30    0.972729  0.978210  0.984543  0.989504  0.996866  1.000000  0.302594  \n",
       "label  0.312726  0.308714  0.305478  0.300597  0.303217  0.302594  1.000000  \n",
       "\n",
       "[32 rows x 32 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "ec2009e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7f1d61e",
   "metadata": {},
   "outputs": [],
   "source": [
    "cnt = []\n",
    "for i in range(1,31):\n",
    "    cnt.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "47cc69b8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2774a17e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de988547",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "620beed6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc54604d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dcf47f36",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eec1d3b8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7a1b8a2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ebbbd906",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f834c439",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "135f9764",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f4787eaf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b50f74e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "86937796",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c239420",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "71e6983c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10f478c4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bd6f7b0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
