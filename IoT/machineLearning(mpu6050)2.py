{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "40bb6956",
   "metadata": {},
   "source": [
    "# 문제 정의 (가설)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b03822aa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "f79de026",
   "metadata": {},
   "source": [
    "# 데이터 수집"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5585bca4",
   "metadata": {},
   "source": [
    "- DB to Flask to Local"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eeb64907",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymysql as ps\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c1314170",
   "metadata": {},
   "outputs": [
    {
     "ename": "OperationalError",
     "evalue": "(2003, \"Can't connect to MySQL server on 'localhost' ([WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다)\")",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mConnectionRefusedError\u001b[0m                    Traceback (most recent call last)",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:613\u001b[0m, in \u001b[0;36mConnection.connect\u001b[1;34m(self, sock)\u001b[0m\n\u001b[0;32m    612\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 613\u001b[0m     sock \u001b[38;5;241m=\u001b[39m socket\u001b[38;5;241m.\u001b[39mcreate_connection(\n\u001b[0;32m    614\u001b[0m         (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhost, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mport), \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mconnect_timeout, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs\n\u001b[0;32m    615\u001b[0m     )\n\u001b[0;32m    616\u001b[0m     \u001b[38;5;28;01mbreak\u001b[39;00m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\socket.py:844\u001b[0m, in \u001b[0;36mcreate_connection\u001b[1;34m(address, timeout, source_address)\u001b[0m\n\u001b[0;32m    843\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 844\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m err\n\u001b[0;32m    845\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[0;32m    846\u001b[0m     \u001b[38;5;66;03m# Break explicitly a reference cycle\u001b[39;00m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\socket.py:832\u001b[0m, in \u001b[0;36mcreate_connection\u001b[1;34m(address, timeout, source_address)\u001b[0m\n\u001b[0;32m    831\u001b[0m     sock\u001b[38;5;241m.\u001b[39mbind(source_address)\n\u001b[1;32m--> 832\u001b[0m \u001b[43msock\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43msa\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    833\u001b[0m \u001b[38;5;66;03m# Break explicitly a reference cycle\u001b[39;00m\n",
      "\u001b[1;31mConnectionRefusedError\u001b[0m: [WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mOperationalError\u001b[0m                          Traceback (most recent call last)",
      "Input \u001b[1;32mIn [2]\u001b[0m, in \u001b[0;36m<cell line: 8>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      5\u001b[0m     conn \u001b[38;5;241m=\u001b[39m ps\u001b[38;5;241m.\u001b[39mconnect(host\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlocalhost\u001b[39m\u001b[38;5;124m'\u001b[39m, user\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mroot\u001b[39m\u001b[38;5;124m'\u001b[39m, passwd\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m12345\u001b[39m\u001b[38;5;124m'\u001b[39m, db\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maqu4men\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m conn\n\u001b[1;32m----> 8\u001b[0m conn \u001b[38;5;241m=\u001b[39m \u001b[43mcon\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      9\u001b[0m curs \u001b[38;5;241m=\u001b[39m conn\u001b[38;5;241m.\u001b[39mcursor()\n\u001b[0;32m     10\u001b[0m sql \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mselect * from t_cupholder \u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "Input \u001b[1;32mIn [2]\u001b[0m, in \u001b[0;36mcon\u001b[1;34m()\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mcon\u001b[39m():\n\u001b[1;32m----> 5\u001b[0m     conn \u001b[38;5;241m=\u001b[39m \u001b[43mps\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43mhost\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlocalhost\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muser\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mroot\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpasswd\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m12345\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdb\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43maqu4men\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m      6\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m conn\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:353\u001b[0m, in \u001b[0;36mConnection.__init__\u001b[1;34m(self, user, password, host, database, unix_socket, port, charset, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)\u001b[0m\n\u001b[0;32m    351\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_sock \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m    352\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 353\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconnect\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pymysql\\connections.py:664\u001b[0m, in \u001b[0;36mConnection.connect\u001b[1;34m(self, sock)\u001b[0m\n\u001b[0;32m    662\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m DEBUG:\n\u001b[0;32m    663\u001b[0m         \u001b[38;5;28mprint\u001b[39m(exc\u001b[38;5;241m.\u001b[39mtraceback)\n\u001b[1;32m--> 664\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m exc\n\u001b[0;32m    666\u001b[0m \u001b[38;5;66;03m# If e is neither DatabaseError or IOError, It's a bug.\u001b[39;00m\n\u001b[0;32m    667\u001b[0m \u001b[38;5;66;03m# But raising AssertionError hides original error.\u001b[39;00m\n\u001b[0;32m    668\u001b[0m \u001b[38;5;66;03m# So just reraise it.\u001b[39;00m\n\u001b[0;32m    669\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m\n",
      "\u001b[1;31mOperationalError\u001b[0m: (2003, \"Can't connect to MySQL server on 'localhost' ([WinError 10061] 대상 컴퓨터에서 연결을 거부했으므로 연결하지 못했습니다)\")"
     ]
    }
   ],
   "source": [
    "import pymysql as ps\n",
    "import pandas as pd\n",
    "\n",
    "def con():\n",
    "    conn = ps.connect(host='localhost', user='root', passwd='12345', db='aqu4men')\n",
    "    return conn\n",
    "\n",
    "conn = con()\n",
    "curs = conn.cursor()\n",
    "sql = f\"select * from t_cupholder \"\n",
    "curs.execute(sql)\n",
    "colname = curs.description\n",
    "rows = curs.fetchall()\n",
    "curs.close()\n",
    "conn.close()\n",
    "\n",
    "col=[]\n",
    "for i in colname:\n",
    "    col.append(i[0].lower())\n",
    "cov = pd.DataFrame(list(rows), columns = col)\n",
    "\n",
    "#불용 data columns drop and save\n",
    "cov2=cov.iloc[:, 3:]\n",
    "for i in range(1,31):\n",
    "    cov2.drop(f'x{i}',axis=1,inplace=True)\n",
    "cov3 = cov2\n",
    "cov3.drop(\"t\",axis=1,inplace=True)\n",
    "cov3.to_csv(\"rawdata.csv\", encoding=\"UTF-8-sig\")\n",
    "cov3.drop(\"index\", axis=1, inplace=True)\n",
    "cov3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7c6ff158",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv('rawdata.csv',encoding='utf-8')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f71b7e2f",
   "metadata": {},
   "source": [
    "- Local to Flask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8d6cfedb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>51</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     y1  y2  y3  y4  y5  y6  y7  y8  y9  y10  ...  y22  y23  y24  y25  y26  \\\n",
       "0     0   1   7  13  22  31  35  39  44   50  ...   65   65   66   67   67   \n",
       "1     0   3   7  13  18  22  29  31  33   36  ...   55   54   54   54   54   \n",
       "2    -8   0   8  15  22  27  30  33  37   41  ...   54   55   56   57   57   \n",
       "3    -5  -1   1   5  11  15  19  25  29   33  ...   39   39   39   38   38   \n",
       "4    12  15  18  22  23  25  27  29  30   31  ...   32   32   32   31   31   \n",
       "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
       "995   3   6  12  19  27  35  42  49  56   60  ...   79   79   79   79   79   \n",
       "996   1   2   5  11  17  22  28  34  39   42  ...   51   50   49   48   47   \n",
       "997   1   3   8  15  23  29  36  43  47   51  ...   61   61   60   59   59   \n",
       "998   1   4  10  17  23  29  35  41  46   50  ...   63   63   63   62   61   \n",
       "999   0   0   4  11  17  23  30  36  40   44  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[1000 rows x 31 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('rawdata.csv',encoding='utf-8', index_col='Unnamed: 0')\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "656d2131",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "713941b9",
   "metadata": {},
   "source": [
    "## 결측치 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "960c6910",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>51</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>999 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     y1  y2  y3  y4  y5  y6  y7  y8  y9  y10  ...  y22  y23  y24  y25  y26  \\\n",
       "0     0   1   7  13  22  31  35  39  44   50  ...   65   65   66   67   67   \n",
       "1     0   3   7  13  18  22  29  31  33   36  ...   55   54   54   54   54   \n",
       "2    -8   0   8  15  22  27  30  33  37   41  ...   54   55   56   57   57   \n",
       "3    -5  -1   1   5  11  15  19  25  29   33  ...   39   39   39   38   38   \n",
       "4    12  15  18  22  23  25  27  29  30   31  ...   32   32   32   31   31   \n",
       "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
       "995   3   6  12  19  27  35  42  49  56   60  ...   79   79   79   79   79   \n",
       "996   1   2   5  11  17  22  28  34  39   42  ...   51   50   49   48   47   \n",
       "997   1   3   8  15  23  29  36  43  47   51  ...   61   61   60   59   59   \n",
       "998   1   4  10  17  23  29  35  41  46   50  ...   63   63   63   62   61   \n",
       "999   0   0   4  11  17  23  30  36  40   44  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[999 rows x 31 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# data=data.drop(810)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "269fdfbd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>y1</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.978751</td>\n",
       "      <td>0.883588</td>\n",
       "      <td>0.704674</td>\n",
       "      <td>0.638007</td>\n",
       "      <td>0.576251</td>\n",
       "      <td>0.388102</td>\n",
       "      <td>0.316000</td>\n",
       "      <td>0.217886</td>\n",
       "      <td>0.161592</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.039209</td>\n",
       "      <td>-0.037238</td>\n",
       "      <td>-0.036767</td>\n",
       "      <td>-0.035015</td>\n",
       "      <td>-0.034203</td>\n",
       "      <td>-0.034179</td>\n",
       "      <td>-0.036656</td>\n",
       "      <td>-0.037368</td>\n",
       "      <td>-0.031609</td>\n",
       "      <td>0.073813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y2</th>\n",
       "      <td>0.978751</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.935573</td>\n",
       "      <td>0.782544</td>\n",
       "      <td>0.720951</td>\n",
       "      <td>0.660986</td>\n",
       "      <td>0.484906</td>\n",
       "      <td>0.409866</td>\n",
       "      <td>0.309173</td>\n",
       "      <td>0.246035</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.018259</td>\n",
       "      <td>-0.018059</td>\n",
       "      <td>-0.019142</td>\n",
       "      <td>-0.018944</td>\n",
       "      <td>-0.019995</td>\n",
       "      <td>-0.021218</td>\n",
       "      <td>-0.025320</td>\n",
       "      <td>-0.027826</td>\n",
       "      <td>-0.023056</td>\n",
       "      <td>0.103461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y3</th>\n",
       "      <td>0.883588</td>\n",
       "      <td>0.935573</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.887771</td>\n",
       "      <td>0.833800</td>\n",
       "      <td>0.773929</td>\n",
       "      <td>0.608719</td>\n",
       "      <td>0.533323</td>\n",
       "      <td>0.432197</td>\n",
       "      <td>0.364220</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036314</td>\n",
       "      <td>0.034673</td>\n",
       "      <td>0.031714</td>\n",
       "      <td>0.030245</td>\n",
       "      <td>0.026971</td>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.017742</td>\n",
       "      <td>0.013436</td>\n",
       "      <td>0.016161</td>\n",
       "      <td>0.157020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y4</th>\n",
       "      <td>0.704674</td>\n",
       "      <td>0.782544</td>\n",
       "      <td>0.887771</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.977791</td>\n",
       "      <td>0.931728</td>\n",
       "      <td>0.787036</td>\n",
       "      <td>0.719699</td>\n",
       "      <td>0.624749</td>\n",
       "      <td>0.560373</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166106</td>\n",
       "      <td>0.161841</td>\n",
       "      <td>0.155913</td>\n",
       "      <td>0.151814</td>\n",
       "      <td>0.145532</td>\n",
       "      <td>0.140444</td>\n",
       "      <td>0.130852</td>\n",
       "      <td>0.122168</td>\n",
       "      <td>0.119636</td>\n",
       "      <td>0.220284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y5</th>\n",
       "      <td>0.638007</td>\n",
       "      <td>0.720951</td>\n",
       "      <td>0.833800</td>\n",
       "      <td>0.977791</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.979287</td>\n",
       "      <td>0.862713</td>\n",
       "      <td>0.807161</td>\n",
       "      <td>0.723227</td>\n",
       "      <td>0.664173</td>\n",
       "      <td>...</td>\n",
       "      <td>0.258303</td>\n",
       "      <td>0.251983</td>\n",
       "      <td>0.244776</td>\n",
       "      <td>0.239354</td>\n",
       "      <td>0.231606</td>\n",
       "      <td>0.225430</td>\n",
       "      <td>0.213928</td>\n",
       "      <td>0.203413</td>\n",
       "      <td>0.199248</td>\n",
       "      <td>0.252137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y6</th>\n",
       "      <td>0.576251</td>\n",
       "      <td>0.660986</td>\n",
       "      <td>0.773929</td>\n",
       "      <td>0.931728</td>\n",
       "      <td>0.979287</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.918696</td>\n",
       "      <td>0.876334</td>\n",
       "      <td>0.805015</td>\n",
       "      <td>0.753229</td>\n",
       "      <td>...</td>\n",
       "      <td>0.343269</td>\n",
       "      <td>0.335645</td>\n",
       "      <td>0.327575</td>\n",
       "      <td>0.321100</td>\n",
       "      <td>0.312587</td>\n",
       "      <td>0.305611</td>\n",
       "      <td>0.292805</td>\n",
       "      <td>0.280824</td>\n",
       "      <td>0.275433</td>\n",
       "      <td>0.280928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y7</th>\n",
       "      <td>0.388102</td>\n",
       "      <td>0.484906</td>\n",
       "      <td>0.608719</td>\n",
       "      <td>0.787036</td>\n",
       "      <td>0.862713</td>\n",
       "      <td>0.918696</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.983479</td>\n",
       "      <td>0.927569</td>\n",
       "      <td>0.880000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.423079</td>\n",
       "      <td>0.412514</td>\n",
       "      <td>0.402603</td>\n",
       "      <td>0.394714</td>\n",
       "      <td>0.385048</td>\n",
       "      <td>0.377024</td>\n",
       "      <td>0.362956</td>\n",
       "      <td>0.349006</td>\n",
       "      <td>0.341126</td>\n",
       "      <td>0.338358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y8</th>\n",
       "      <td>0.316000</td>\n",
       "      <td>0.409866</td>\n",
       "      <td>0.533323</td>\n",
       "      <td>0.719699</td>\n",
       "      <td>0.807161</td>\n",
       "      <td>0.876334</td>\n",
       "      <td>0.983479</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.966235</td>\n",
       "      <td>0.933065</td>\n",
       "      <td>...</td>\n",
       "      <td>0.508753</td>\n",
       "      <td>0.497906</td>\n",
       "      <td>0.487651</td>\n",
       "      <td>0.478954</td>\n",
       "      <td>0.468829</td>\n",
       "      <td>0.460252</td>\n",
       "      <td>0.444904</td>\n",
       "      <td>0.429711</td>\n",
       "      <td>0.420350</td>\n",
       "      <td>0.366643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y9</th>\n",
       "      <td>0.217886</td>\n",
       "      <td>0.309173</td>\n",
       "      <td>0.432197</td>\n",
       "      <td>0.624749</td>\n",
       "      <td>0.723227</td>\n",
       "      <td>0.805015</td>\n",
       "      <td>0.927569</td>\n",
       "      <td>0.966235</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.985840</td>\n",
       "      <td>...</td>\n",
       "      <td>0.599847</td>\n",
       "      <td>0.588053</td>\n",
       "      <td>0.577421</td>\n",
       "      <td>0.567876</td>\n",
       "      <td>0.556848</td>\n",
       "      <td>0.547591</td>\n",
       "      <td>0.531322</td>\n",
       "      <td>0.514651</td>\n",
       "      <td>0.503821</td>\n",
       "      <td>0.388144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y10</th>\n",
       "      <td>0.161592</td>\n",
       "      <td>0.246035</td>\n",
       "      <td>0.364220</td>\n",
       "      <td>0.560373</td>\n",
       "      <td>0.664173</td>\n",
       "      <td>0.753229</td>\n",
       "      <td>0.880000</td>\n",
       "      <td>0.933065</td>\n",
       "      <td>0.985840</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.685995</td>\n",
       "      <td>0.674620</td>\n",
       "      <td>0.664145</td>\n",
       "      <td>0.654339</td>\n",
       "      <td>0.643205</td>\n",
       "      <td>0.633683</td>\n",
       "      <td>0.616845</td>\n",
       "      <td>0.599392</td>\n",
       "      <td>0.587530</td>\n",
       "      <td>0.399163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y11</th>\n",
       "      <td>0.112239</td>\n",
       "      <td>0.188201</td>\n",
       "      <td>0.298982</td>\n",
       "      <td>0.493611</td>\n",
       "      <td>0.602133</td>\n",
       "      <td>0.696306</td>\n",
       "      <td>0.824522</td>\n",
       "      <td>0.887810</td>\n",
       "      <td>0.954264</td>\n",
       "      <td>0.986914</td>\n",
       "      <td>...</td>\n",
       "      <td>0.756700</td>\n",
       "      <td>0.745708</td>\n",
       "      <td>0.735225</td>\n",
       "      <td>0.725342</td>\n",
       "      <td>0.714229</td>\n",
       "      <td>0.704565</td>\n",
       "      <td>0.687858</td>\n",
       "      <td>0.670282</td>\n",
       "      <td>0.657479</td>\n",
       "      <td>0.408133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y12</th>\n",
       "      <td>0.065924</td>\n",
       "      <td>0.133897</td>\n",
       "      <td>0.237616</td>\n",
       "      <td>0.431574</td>\n",
       "      <td>0.542546</td>\n",
       "      <td>0.639225</td>\n",
       "      <td>0.764422</td>\n",
       "      <td>0.836548</td>\n",
       "      <td>0.913324</td>\n",
       "      <td>0.960386</td>\n",
       "      <td>...</td>\n",
       "      <td>0.820903</td>\n",
       "      <td>0.810823</td>\n",
       "      <td>0.800935</td>\n",
       "      <td>0.791516</td>\n",
       "      <td>0.780991</td>\n",
       "      <td>0.771324</td>\n",
       "      <td>0.755406</td>\n",
       "      <td>0.738131</td>\n",
       "      <td>0.724945</td>\n",
       "      <td>0.404281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y13</th>\n",
       "      <td>0.025361</td>\n",
       "      <td>0.085492</td>\n",
       "      <td>0.182330</td>\n",
       "      <td>0.373271</td>\n",
       "      <td>0.485817</td>\n",
       "      <td>0.583469</td>\n",
       "      <td>0.704122</td>\n",
       "      <td>0.782345</td>\n",
       "      <td>0.866593</td>\n",
       "      <td>0.924653</td>\n",
       "      <td>...</td>\n",
       "      <td>0.873718</td>\n",
       "      <td>0.864548</td>\n",
       "      <td>0.855488</td>\n",
       "      <td>0.846597</td>\n",
       "      <td>0.836627</td>\n",
       "      <td>0.827107</td>\n",
       "      <td>0.811746</td>\n",
       "      <td>0.794838</td>\n",
       "      <td>0.781599</td>\n",
       "      <td>0.398942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y14</th>\n",
       "      <td>-0.002779</td>\n",
       "      <td>0.050010</td>\n",
       "      <td>0.139751</td>\n",
       "      <td>0.320151</td>\n",
       "      <td>0.432397</td>\n",
       "      <td>0.530052</td>\n",
       "      <td>0.646044</td>\n",
       "      <td>0.727931</td>\n",
       "      <td>0.818237</td>\n",
       "      <td>0.885223</td>\n",
       "      <td>...</td>\n",
       "      <td>0.911944</td>\n",
       "      <td>0.903719</td>\n",
       "      <td>0.895706</td>\n",
       "      <td>0.887556</td>\n",
       "      <td>0.878386</td>\n",
       "      <td>0.869276</td>\n",
       "      <td>0.854439</td>\n",
       "      <td>0.837906</td>\n",
       "      <td>0.825155</td>\n",
       "      <td>0.387695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y15</th>\n",
       "      <td>-0.023824</td>\n",
       "      <td>0.020942</td>\n",
       "      <td>0.102530</td>\n",
       "      <td>0.272143</td>\n",
       "      <td>0.382243</td>\n",
       "      <td>0.478661</td>\n",
       "      <td>0.589356</td>\n",
       "      <td>0.674859</td>\n",
       "      <td>0.769345</td>\n",
       "      <td>0.843262</td>\n",
       "      <td>...</td>\n",
       "      <td>0.942088</td>\n",
       "      <td>0.935016</td>\n",
       "      <td>0.928010</td>\n",
       "      <td>0.920661</td>\n",
       "      <td>0.912398</td>\n",
       "      <td>0.903451</td>\n",
       "      <td>0.889303</td>\n",
       "      <td>0.873173</td>\n",
       "      <td>0.860921</td>\n",
       "      <td>0.373113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y16</th>\n",
       "      <td>-0.037710</td>\n",
       "      <td>0.000530</td>\n",
       "      <td>0.074682</td>\n",
       "      <td>0.237155</td>\n",
       "      <td>0.343640</td>\n",
       "      <td>0.437992</td>\n",
       "      <td>0.541267</td>\n",
       "      <td>0.628423</td>\n",
       "      <td>0.724853</td>\n",
       "      <td>0.803896</td>\n",
       "      <td>...</td>\n",
       "      <td>0.963355</td>\n",
       "      <td>0.957231</td>\n",
       "      <td>0.951362</td>\n",
       "      <td>0.944973</td>\n",
       "      <td>0.937680</td>\n",
       "      <td>0.929453</td>\n",
       "      <td>0.916176</td>\n",
       "      <td>0.900491</td>\n",
       "      <td>0.889031</td>\n",
       "      <td>0.357049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y17</th>\n",
       "      <td>-0.045933</td>\n",
       "      <td>-0.012258</td>\n",
       "      <td>0.055643</td>\n",
       "      <td>0.210260</td>\n",
       "      <td>0.313954</td>\n",
       "      <td>0.406258</td>\n",
       "      <td>0.504149</td>\n",
       "      <td>0.591767</td>\n",
       "      <td>0.688221</td>\n",
       "      <td>0.770272</td>\n",
       "      <td>...</td>\n",
       "      <td>0.977196</td>\n",
       "      <td>0.971876</td>\n",
       "      <td>0.966845</td>\n",
       "      <td>0.961306</td>\n",
       "      <td>0.954749</td>\n",
       "      <td>0.946908</td>\n",
       "      <td>0.934300</td>\n",
       "      <td>0.919067</td>\n",
       "      <td>0.908559</td>\n",
       "      <td>0.342403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y18</th>\n",
       "      <td>-0.045152</td>\n",
       "      <td>-0.015599</td>\n",
       "      <td>0.047848</td>\n",
       "      <td>0.194037</td>\n",
       "      <td>0.294774</td>\n",
       "      <td>0.385222</td>\n",
       "      <td>0.477943</td>\n",
       "      <td>0.564949</td>\n",
       "      <td>0.660317</td>\n",
       "      <td>0.744000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.986241</td>\n",
       "      <td>0.981551</td>\n",
       "      <td>0.977213</td>\n",
       "      <td>0.972480</td>\n",
       "      <td>0.966601</td>\n",
       "      <td>0.959430</td>\n",
       "      <td>0.947515</td>\n",
       "      <td>0.933101</td>\n",
       "      <td>0.923522</td>\n",
       "      <td>0.335651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y19</th>\n",
       "      <td>-0.044697</td>\n",
       "      <td>-0.018045</td>\n",
       "      <td>0.042033</td>\n",
       "      <td>0.182626</td>\n",
       "      <td>0.280291</td>\n",
       "      <td>0.368997</td>\n",
       "      <td>0.456588</td>\n",
       "      <td>0.543312</td>\n",
       "      <td>0.637475</td>\n",
       "      <td>0.722489</td>\n",
       "      <td>...</td>\n",
       "      <td>0.992660</td>\n",
       "      <td>0.988895</td>\n",
       "      <td>0.985188</td>\n",
       "      <td>0.981234</td>\n",
       "      <td>0.976096</td>\n",
       "      <td>0.969483</td>\n",
       "      <td>0.958336</td>\n",
       "      <td>0.944621</td>\n",
       "      <td>0.935769</td>\n",
       "      <td>0.329484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y20</th>\n",
       "      <td>-0.044576</td>\n",
       "      <td>-0.019799</td>\n",
       "      <td>0.038149</td>\n",
       "      <td>0.174971</td>\n",
       "      <td>0.270958</td>\n",
       "      <td>0.358381</td>\n",
       "      <td>0.443013</td>\n",
       "      <td>0.529324</td>\n",
       "      <td>0.622503</td>\n",
       "      <td>0.707949</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996401</td>\n",
       "      <td>0.993398</td>\n",
       "      <td>0.990309</td>\n",
       "      <td>0.986834</td>\n",
       "      <td>0.982233</td>\n",
       "      <td>0.975911</td>\n",
       "      <td>0.965349</td>\n",
       "      <td>0.951818</td>\n",
       "      <td>0.943551</td>\n",
       "      <td>0.326549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y21</th>\n",
       "      <td>-0.042189</td>\n",
       "      <td>-0.019793</td>\n",
       "      <td>0.035674</td>\n",
       "      <td>0.168613</td>\n",
       "      <td>0.262944</td>\n",
       "      <td>0.349131</td>\n",
       "      <td>0.431446</td>\n",
       "      <td>0.517431</td>\n",
       "      <td>0.609485</td>\n",
       "      <td>0.695357</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998757</td>\n",
       "      <td>0.996563</td>\n",
       "      <td>0.993792</td>\n",
       "      <td>0.990812</td>\n",
       "      <td>0.986515</td>\n",
       "      <td>0.980559</td>\n",
       "      <td>0.970573</td>\n",
       "      <td>0.957274</td>\n",
       "      <td>0.949287</td>\n",
       "      <td>0.322404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y22</th>\n",
       "      <td>-0.039209</td>\n",
       "      <td>-0.018259</td>\n",
       "      <td>0.036314</td>\n",
       "      <td>0.166106</td>\n",
       "      <td>0.258303</td>\n",
       "      <td>0.343269</td>\n",
       "      <td>0.423079</td>\n",
       "      <td>0.508753</td>\n",
       "      <td>0.599847</td>\n",
       "      <td>0.685995</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998713</td>\n",
       "      <td>0.996658</td>\n",
       "      <td>0.994062</td>\n",
       "      <td>0.990337</td>\n",
       "      <td>0.984770</td>\n",
       "      <td>0.975576</td>\n",
       "      <td>0.962842</td>\n",
       "      <td>0.955354</td>\n",
       "      <td>0.323549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y23</th>\n",
       "      <td>-0.037238</td>\n",
       "      <td>-0.018059</td>\n",
       "      <td>0.034673</td>\n",
       "      <td>0.161841</td>\n",
       "      <td>0.251983</td>\n",
       "      <td>0.335645</td>\n",
       "      <td>0.412514</td>\n",
       "      <td>0.497906</td>\n",
       "      <td>0.588053</td>\n",
       "      <td>0.674620</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998713</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998755</td>\n",
       "      <td>0.996790</td>\n",
       "      <td>0.993637</td>\n",
       "      <td>0.988800</td>\n",
       "      <td>0.980416</td>\n",
       "      <td>0.968166</td>\n",
       "      <td>0.960967</td>\n",
       "      <td>0.319676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y24</th>\n",
       "      <td>-0.036767</td>\n",
       "      <td>-0.019142</td>\n",
       "      <td>0.031714</td>\n",
       "      <td>0.155913</td>\n",
       "      <td>0.244776</td>\n",
       "      <td>0.327575</td>\n",
       "      <td>0.402603</td>\n",
       "      <td>0.487651</td>\n",
       "      <td>0.577421</td>\n",
       "      <td>0.664145</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996658</td>\n",
       "      <td>0.998755</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998827</td>\n",
       "      <td>0.996595</td>\n",
       "      <td>0.992605</td>\n",
       "      <td>0.985392</td>\n",
       "      <td>0.973768</td>\n",
       "      <td>0.966866</td>\n",
       "      <td>0.318176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y25</th>\n",
       "      <td>-0.035015</td>\n",
       "      <td>-0.018944</td>\n",
       "      <td>0.030245</td>\n",
       "      <td>0.151814</td>\n",
       "      <td>0.239354</td>\n",
       "      <td>0.321100</td>\n",
       "      <td>0.394714</td>\n",
       "      <td>0.478954</td>\n",
       "      <td>0.567876</td>\n",
       "      <td>0.654339</td>\n",
       "      <td>...</td>\n",
       "      <td>0.994062</td>\n",
       "      <td>0.996790</td>\n",
       "      <td>0.998827</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998695</td>\n",
       "      <td>0.995667</td>\n",
       "      <td>0.989470</td>\n",
       "      <td>0.978571</td>\n",
       "      <td>0.971919</td>\n",
       "      <td>0.314419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y26</th>\n",
       "      <td>-0.034203</td>\n",
       "      <td>-0.019995</td>\n",
       "      <td>0.026971</td>\n",
       "      <td>0.145532</td>\n",
       "      <td>0.231606</td>\n",
       "      <td>0.312587</td>\n",
       "      <td>0.385048</td>\n",
       "      <td>0.468829</td>\n",
       "      <td>0.556848</td>\n",
       "      <td>0.643205</td>\n",
       "      <td>...</td>\n",
       "      <td>0.990337</td>\n",
       "      <td>0.993637</td>\n",
       "      <td>0.996595</td>\n",
       "      <td>0.998695</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998202</td>\n",
       "      <td>0.993525</td>\n",
       "      <td>0.983826</td>\n",
       "      <td>0.977562</td>\n",
       "      <td>0.310231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y27</th>\n",
       "      <td>-0.034179</td>\n",
       "      <td>-0.021218</td>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.140444</td>\n",
       "      <td>0.225430</td>\n",
       "      <td>0.305611</td>\n",
       "      <td>0.377024</td>\n",
       "      <td>0.460252</td>\n",
       "      <td>0.547591</td>\n",
       "      <td>0.633683</td>\n",
       "      <td>...</td>\n",
       "      <td>0.984770</td>\n",
       "      <td>0.988800</td>\n",
       "      <td>0.992605</td>\n",
       "      <td>0.995667</td>\n",
       "      <td>0.998202</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.997604</td>\n",
       "      <td>0.990020</td>\n",
       "      <td>0.984084</td>\n",
       "      <td>0.306825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y28</th>\n",
       "      <td>-0.036656</td>\n",
       "      <td>-0.025320</td>\n",
       "      <td>0.017742</td>\n",
       "      <td>0.130852</td>\n",
       "      <td>0.213928</td>\n",
       "      <td>0.292805</td>\n",
       "      <td>0.362956</td>\n",
       "      <td>0.444904</td>\n",
       "      <td>0.531322</td>\n",
       "      <td>0.616845</td>\n",
       "      <td>...</td>\n",
       "      <td>0.975576</td>\n",
       "      <td>0.980416</td>\n",
       "      <td>0.985392</td>\n",
       "      <td>0.989470</td>\n",
       "      <td>0.993525</td>\n",
       "      <td>0.997604</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.994597</td>\n",
       "      <td>0.989185</td>\n",
       "      <td>0.301731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y29</th>\n",
       "      <td>-0.037368</td>\n",
       "      <td>-0.027826</td>\n",
       "      <td>0.013436</td>\n",
       "      <td>0.122168</td>\n",
       "      <td>0.203413</td>\n",
       "      <td>0.280824</td>\n",
       "      <td>0.349006</td>\n",
       "      <td>0.429711</td>\n",
       "      <td>0.514651</td>\n",
       "      <td>0.599392</td>\n",
       "      <td>...</td>\n",
       "      <td>0.962842</td>\n",
       "      <td>0.968166</td>\n",
       "      <td>0.973768</td>\n",
       "      <td>0.978571</td>\n",
       "      <td>0.983826</td>\n",
       "      <td>0.990020</td>\n",
       "      <td>0.994597</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.996769</td>\n",
       "      <td>0.304244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y30</th>\n",
       "      <td>-0.031609</td>\n",
       "      <td>-0.023056</td>\n",
       "      <td>0.016161</td>\n",
       "      <td>0.119636</td>\n",
       "      <td>0.199248</td>\n",
       "      <td>0.275433</td>\n",
       "      <td>0.341126</td>\n",
       "      <td>0.420350</td>\n",
       "      <td>0.503821</td>\n",
       "      <td>0.587530</td>\n",
       "      <td>...</td>\n",
       "      <td>0.955354</td>\n",
       "      <td>0.960967</td>\n",
       "      <td>0.966866</td>\n",
       "      <td>0.971919</td>\n",
       "      <td>0.977562</td>\n",
       "      <td>0.984084</td>\n",
       "      <td>0.989185</td>\n",
       "      <td>0.996769</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.303507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>label</th>\n",
       "      <td>0.073813</td>\n",
       "      <td>0.103461</td>\n",
       "      <td>0.157020</td>\n",
       "      <td>0.220284</td>\n",
       "      <td>0.252137</td>\n",
       "      <td>0.280928</td>\n",
       "      <td>0.338358</td>\n",
       "      <td>0.366643</td>\n",
       "      <td>0.388144</td>\n",
       "      <td>0.399163</td>\n",
       "      <td>...</td>\n",
       "      <td>0.323549</td>\n",
       "      <td>0.319676</td>\n",
       "      <td>0.318176</td>\n",
       "      <td>0.314419</td>\n",
       "      <td>0.310231</td>\n",
       "      <td>0.306825</td>\n",
       "      <td>0.301731</td>\n",
       "      <td>0.304244</td>\n",
       "      <td>0.303507</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             y1        y2        y3        y4        y5        y6        y7  \\\n",
       "y1     1.000000  0.978751  0.883588  0.704674  0.638007  0.576251  0.388102   \n",
       "y2     0.978751  1.000000  0.935573  0.782544  0.720951  0.660986  0.484906   \n",
       "y3     0.883588  0.935573  1.000000  0.887771  0.833800  0.773929  0.608719   \n",
       "y4     0.704674  0.782544  0.887771  1.000000  0.977791  0.931728  0.787036   \n",
       "y5     0.638007  0.720951  0.833800  0.977791  1.000000  0.979287  0.862713   \n",
       "y6     0.576251  0.660986  0.773929  0.931728  0.979287  1.000000  0.918696   \n",
       "y7     0.388102  0.484906  0.608719  0.787036  0.862713  0.918696  1.000000   \n",
       "y8     0.316000  0.409866  0.533323  0.719699  0.807161  0.876334  0.983479   \n",
       "y9     0.217886  0.309173  0.432197  0.624749  0.723227  0.805015  0.927569   \n",
       "y10    0.161592  0.246035  0.364220  0.560373  0.664173  0.753229  0.880000   \n",
       "y11    0.112239  0.188201  0.298982  0.493611  0.602133  0.696306  0.824522   \n",
       "y12    0.065924  0.133897  0.237616  0.431574  0.542546  0.639225  0.764422   \n",
       "y13    0.025361  0.085492  0.182330  0.373271  0.485817  0.583469  0.704122   \n",
       "y14   -0.002779  0.050010  0.139751  0.320151  0.432397  0.530052  0.646044   \n",
       "y15   -0.023824  0.020942  0.102530  0.272143  0.382243  0.478661  0.589356   \n",
       "y16   -0.037710  0.000530  0.074682  0.237155  0.343640  0.437992  0.541267   \n",
       "y17   -0.045933 -0.012258  0.055643  0.210260  0.313954  0.406258  0.504149   \n",
       "y18   -0.045152 -0.015599  0.047848  0.194037  0.294774  0.385222  0.477943   \n",
       "y19   -0.044697 -0.018045  0.042033  0.182626  0.280291  0.368997  0.456588   \n",
       "y20   -0.044576 -0.019799  0.038149  0.174971  0.270958  0.358381  0.443013   \n",
       "y21   -0.042189 -0.019793  0.035674  0.168613  0.262944  0.349131  0.431446   \n",
       "y22   -0.039209 -0.018259  0.036314  0.166106  0.258303  0.343269  0.423079   \n",
       "y23   -0.037238 -0.018059  0.034673  0.161841  0.251983  0.335645  0.412514   \n",
       "y24   -0.036767 -0.019142  0.031714  0.155913  0.244776  0.327575  0.402603   \n",
       "y25   -0.035015 -0.018944  0.030245  0.151814  0.239354  0.321100  0.394714   \n",
       "y26   -0.034203 -0.019995  0.026971  0.145532  0.231606  0.312587  0.385048   \n",
       "y27   -0.034179 -0.021218  0.024110  0.140444  0.225430  0.305611  0.377024   \n",
       "y28   -0.036656 -0.025320  0.017742  0.130852  0.213928  0.292805  0.362956   \n",
       "y29   -0.037368 -0.027826  0.013436  0.122168  0.203413  0.280824  0.349006   \n",
       "y30   -0.031609 -0.023056  0.016161  0.119636  0.199248  0.275433  0.341126   \n",
       "label  0.073813  0.103461  0.157020  0.220284  0.252137  0.280928  0.338358   \n",
       "\n",
       "             y8        y9       y10  ...       y22       y23       y24  \\\n",
       "y1     0.316000  0.217886  0.161592  ... -0.039209 -0.037238 -0.036767   \n",
       "y2     0.409866  0.309173  0.246035  ... -0.018259 -0.018059 -0.019142   \n",
       "y3     0.533323  0.432197  0.364220  ...  0.036314  0.034673  0.031714   \n",
       "y4     0.719699  0.624749  0.560373  ...  0.166106  0.161841  0.155913   \n",
       "y5     0.807161  0.723227  0.664173  ...  0.258303  0.251983  0.244776   \n",
       "y6     0.876334  0.805015  0.753229  ...  0.343269  0.335645  0.327575   \n",
       "y7     0.983479  0.927569  0.880000  ...  0.423079  0.412514  0.402603   \n",
       "y8     1.000000  0.966235  0.933065  ...  0.508753  0.497906  0.487651   \n",
       "y9     0.966235  1.000000  0.985840  ...  0.599847  0.588053  0.577421   \n",
       "y10    0.933065  0.985840  1.000000  ...  0.685995  0.674620  0.664145   \n",
       "y11    0.887810  0.954264  0.986914  ...  0.756700  0.745708  0.735225   \n",
       "y12    0.836548  0.913324  0.960386  ...  0.820903  0.810823  0.800935   \n",
       "y13    0.782345  0.866593  0.924653  ...  0.873718  0.864548  0.855488   \n",
       "y14    0.727931  0.818237  0.885223  ...  0.911944  0.903719  0.895706   \n",
       "y15    0.674859  0.769345  0.843262  ...  0.942088  0.935016  0.928010   \n",
       "y16    0.628423  0.724853  0.803896  ...  0.963355  0.957231  0.951362   \n",
       "y17    0.591767  0.688221  0.770272  ...  0.977196  0.971876  0.966845   \n",
       "y18    0.564949  0.660317  0.744000  ...  0.986241  0.981551  0.977213   \n",
       "y19    0.543312  0.637475  0.722489  ...  0.992660  0.988895  0.985188   \n",
       "y20    0.529324  0.622503  0.707949  ...  0.996401  0.993398  0.990309   \n",
       "y21    0.517431  0.609485  0.695357  ...  0.998757  0.996563  0.993792   \n",
       "y22    0.508753  0.599847  0.685995  ...  1.000000  0.998713  0.996658   \n",
       "y23    0.497906  0.588053  0.674620  ...  0.998713  1.000000  0.998755   \n",
       "y24    0.487651  0.577421  0.664145  ...  0.996658  0.998755  1.000000   \n",
       "y25    0.478954  0.567876  0.654339  ...  0.994062  0.996790  0.998827   \n",
       "y26    0.468829  0.556848  0.643205  ...  0.990337  0.993637  0.996595   \n",
       "y27    0.460252  0.547591  0.633683  ...  0.984770  0.988800  0.992605   \n",
       "y28    0.444904  0.531322  0.616845  ...  0.975576  0.980416  0.985392   \n",
       "y29    0.429711  0.514651  0.599392  ...  0.962842  0.968166  0.973768   \n",
       "y30    0.420350  0.503821  0.587530  ...  0.955354  0.960967  0.966866   \n",
       "label  0.366643  0.388144  0.399163  ...  0.323549  0.319676  0.318176   \n",
       "\n",
       "            y25       y26       y27       y28       y29       y30     label  \n",
       "y1    -0.035015 -0.034203 -0.034179 -0.036656 -0.037368 -0.031609  0.073813  \n",
       "y2    -0.018944 -0.019995 -0.021218 -0.025320 -0.027826 -0.023056  0.103461  \n",
       "y3     0.030245  0.026971  0.024110  0.017742  0.013436  0.016161  0.157020  \n",
       "y4     0.151814  0.145532  0.140444  0.130852  0.122168  0.119636  0.220284  \n",
       "y5     0.239354  0.231606  0.225430  0.213928  0.203413  0.199248  0.252137  \n",
       "y6     0.321100  0.312587  0.305611  0.292805  0.280824  0.275433  0.280928  \n",
       "y7     0.394714  0.385048  0.377024  0.362956  0.349006  0.341126  0.338358  \n",
       "y8     0.478954  0.468829  0.460252  0.444904  0.429711  0.420350  0.366643  \n",
       "y9     0.567876  0.556848  0.547591  0.531322  0.514651  0.503821  0.388144  \n",
       "y10    0.654339  0.643205  0.633683  0.616845  0.599392  0.587530  0.399163  \n",
       "y11    0.725342  0.714229  0.704565  0.687858  0.670282  0.657479  0.408133  \n",
       "y12    0.791516  0.780991  0.771324  0.755406  0.738131  0.724945  0.404281  \n",
       "y13    0.846597  0.836627  0.827107  0.811746  0.794838  0.781599  0.398942  \n",
       "y14    0.887556  0.878386  0.869276  0.854439  0.837906  0.825155  0.387695  \n",
       "y15    0.920661  0.912398  0.903451  0.889303  0.873173  0.860921  0.373113  \n",
       "y16    0.944973  0.937680  0.929453  0.916176  0.900491  0.889031  0.357049  \n",
       "y17    0.961306  0.954749  0.946908  0.934300  0.919067  0.908559  0.342403  \n",
       "y18    0.972480  0.966601  0.959430  0.947515  0.933101  0.923522  0.335651  \n",
       "y19    0.981234  0.976096  0.969483  0.958336  0.944621  0.935769  0.329484  \n",
       "y20    0.986834  0.982233  0.975911  0.965349  0.951818  0.943551  0.326549  \n",
       "y21    0.990812  0.986515  0.980559  0.970573  0.957274  0.949287  0.322404  \n",
       "y22    0.994062  0.990337  0.984770  0.975576  0.962842  0.955354  0.323549  \n",
       "y23    0.996790  0.993637  0.988800  0.980416  0.968166  0.960967  0.319676  \n",
       "y24    0.998827  0.996595  0.992605  0.985392  0.973768  0.966866  0.318176  \n",
       "y25    1.000000  0.998695  0.995667  0.989470  0.978571  0.971919  0.314419  \n",
       "y26    0.998695  1.000000  0.998202  0.993525  0.983826  0.977562  0.310231  \n",
       "y27    0.995667  0.998202  1.000000  0.997604  0.990020  0.984084  0.306825  \n",
       "y28    0.989470  0.993525  0.997604  1.000000  0.994597  0.989185  0.301731  \n",
       "y29    0.978571  0.983826  0.990020  0.994597  1.000000  0.996769  0.304244  \n",
       "y30    0.971919  0.977562  0.984084  0.989185  0.996769  1.000000  0.303507  \n",
       "label  0.314419  0.310231  0.306825  0.301731  0.304244  0.303507  1.000000  \n",
       "\n",
       "[31 rows x 31 columns]"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#시계열 데이터 다중공선성(독립변수간에 상관관계가 높은 경우 즉, 선형독립이 아닌 경우) 문제 발생\n",
    "#다중공선성 문제의 경우 과적합 문제가 있음\n",
    "#다중공선성(공선: 1차함수 그래프 위에서 기울기와 y절편이 같음)\n",
    "# -특성 간의 공선성(데이터 유사성) 문제  ->  특성과 특성간의 상관관계가 90% 이상인 것  \n",
    "#   ->  특성을 여러개 넣는 의미가 없음  ->  특성과 라벨 간의 상관관계가 더 낮은 특성을 탈락시키면 된다\n",
    "# -특성과 라벨간의 공선성(데이터 유사성) 문제  ->  특성과 라벨간의 상관관계가 90% 이상인 것 \n",
    "#   ->  분석의 의미가 없음  ->  유사성이 높은 특성을 삭제하거나 처리해야 (다른 특성들과의 관계가 보임?)\n",
    "#        (연역 논증의 동어반복의 오류와 비슷?)\n",
    "\n",
    "\n",
    "#해결방법 (1) 변수 선택법으로 의존적인 변수 삭제\n",
    "#         (2) PCA(principal component analysis) 방법으로 위존적인 성분 삭제\n",
    "#         (3) 규제방법\n",
    "            \n",
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "a35e50b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x1080 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(30,15))\n",
    "cmap = sns .light_palette(\"navy\", as_cmap=True)\n",
    "sns.heatmap(data.corr(), annot=True, cmap=cmap)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f5fc816",
   "metadata": {},
   "source": [
    "### VIF(분산팽창계수)\n",
    "- 다중 공선성을 없애는 가장 기본적인 방법은 다른 독립변수에 의존하는 변수를 없애는 것이다.\n",
    "- 기장 의존적인 독립변수를 선택하는 방법으로는 VIF(Variance Inflation Factor)를 사용할 수 있다.\n",
    "    - VIF는 특정 독립변수를 나머지 독립변수로 Q.{적합했을 때} 성능을 나타낸 것이다.\n",
    "    - 다른 변수에 의존할수록 VIF값이 높게 나온다.\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "74fec0a4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF Factor</th>\n",
       "      <th>features</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44.271064</td>\n",
       "      <td>y1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>86.009634</td>\n",
       "      <td>y2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>42.879934</td>\n",
       "      <td>y3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>289.175312</td>\n",
       "      <td>y4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1136.923495</td>\n",
       "      <td>y5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>907.134314</td>\n",
       "      <td>y6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1535.476182</td>\n",
       "      <td>y7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2468.500068</td>\n",
       "      <td>y8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3855.505495</td>\n",
       "      <td>y9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8820.790291</td>\n",
       "      <td>y10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>9381.786289</td>\n",
       "      <td>y11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12019.128536</td>\n",
       "      <td>y12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15844.466695</td>\n",
       "      <td>y13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>19113.654843</td>\n",
       "      <td>y14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>23348.312036</td>\n",
       "      <td>y15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>29270.205261</td>\n",
       "      <td>y16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>33668.616493</td>\n",
       "      <td>y17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>39415.223492</td>\n",
       "      <td>y18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>46454.681347</td>\n",
       "      <td>y19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>48466.356715</td>\n",
       "      <td>y20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>53829.029998</td>\n",
       "      <td>y21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>54315.667249</td>\n",
       "      <td>y22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>51523.254574</td>\n",
       "      <td>y23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>51623.625463</td>\n",
       "      <td>y24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>52976.854896</td>\n",
       "      <td>y25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>45721.044968</td>\n",
       "      <td>y26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>42290.928874</td>\n",
       "      <td>y27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>18347.514133</td>\n",
       "      <td>y28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>12268.073766</td>\n",
       "      <td>y29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5769.810631</td>\n",
       "      <td>y30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      VIF Factor features\n",
       "0      44.271064       y1\n",
       "1      86.009634       y2\n",
       "2      42.879934       y3\n",
       "3     289.175312       y4\n",
       "4    1136.923495       y5\n",
       "5     907.134314       y6\n",
       "6    1535.476182       y7\n",
       "7    2468.500068       y8\n",
       "8    3855.505495       y9\n",
       "9    8820.790291      y10\n",
       "10   9381.786289      y11\n",
       "11  12019.128536      y12\n",
       "12  15844.466695      y13\n",
       "13  19113.654843      y14\n",
       "14  23348.312036      y15\n",
       "15  29270.205261      y16\n",
       "16  33668.616493      y17\n",
       "17  39415.223492      y18\n",
       "18  46454.681347      y19\n",
       "19  48466.356715      y20\n",
       "20  53829.029998      y21\n",
       "21  54315.667249      y22\n",
       "22  51523.254574      y23\n",
       "23  51623.625463      y24\n",
       "24  52976.854896      y25\n",
       "25  45721.044968      y26\n",
       "26  42290.928874      y27\n",
       "27  18347.514133      y28\n",
       "28  12268.073766      y29\n",
       "29   5769.810631      y30"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "\n",
    "X=data.iloc[:,:-1]\n",
    "y=data.iloc[:,-1]\n",
    "\n",
    "vif = pd.DataFrame()\n",
    "vif[\"VIF Factor\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n",
    "vif[\"features\"] = X.columns\n",
    "vif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "f448bd72",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF Factor</th>\n",
       "      <th>features</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>30.185971</td>\n",
       "      <td>label</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>42.980795</td>\n",
       "      <td>y3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>44.322092</td>\n",
       "      <td>y1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>86.116579</td>\n",
       "      <td>y2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>289.374610</td>\n",
       "      <td>y4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>907.166714</td>\n",
       "      <td>y6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1137.954464</td>\n",
       "      <td>y5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1540.252791</td>\n",
       "      <td>y7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2487.467411</td>\n",
       "      <td>y8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3859.488908</td>\n",
       "      <td>y9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5770.500043</td>\n",
       "      <td>y30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8851.616707</td>\n",
       "      <td>y10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>9419.407357</td>\n",
       "      <td>y11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12029.104565</td>\n",
       "      <td>y12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>12282.912851</td>\n",
       "      <td>y29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15844.476778</td>\n",
       "      <td>y13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>18353.714073</td>\n",
       "      <td>y28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>19124.901650</td>\n",
       "      <td>y14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>23349.632682</td>\n",
       "      <td>y15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>29276.205433</td>\n",
       "      <td>y16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>33716.084665</td>\n",
       "      <td>y17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>39425.850907</td>\n",
       "      <td>y18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>42361.682147</td>\n",
       "      <td>y27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>45722.462437</td>\n",
       "      <td>y26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>46562.664127</td>\n",
       "      <td>y19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>48467.520144</td>\n",
       "      <td>y20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>51618.991296</td>\n",
       "      <td>y23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>51643.848173</td>\n",
       "      <td>y24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>53025.194288</td>\n",
       "      <td>y25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>54004.131635</td>\n",
       "      <td>y21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>54540.949973</td>\n",
       "      <td>y22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      VIF Factor features\n",
       "30     30.185971    label\n",
       "2      42.980795       y3\n",
       "0      44.322092       y1\n",
       "1      86.116579       y2\n",
       "3     289.374610       y4\n",
       "5     907.166714       y6\n",
       "4    1137.954464       y5\n",
       "6    1540.252791       y7\n",
       "7    2487.467411       y8\n",
       "8    3859.488908       y9\n",
       "29   5770.500043      y30\n",
       "9    8851.616707      y10\n",
       "10   9419.407357      y11\n",
       "11  12029.104565      y12\n",
       "28  12282.912851      y29\n",
       "12  15844.476778      y13\n",
       "27  18353.714073      y28\n",
       "13  19124.901650      y14\n",
       "14  23349.632682      y15\n",
       "15  29276.205433      y16\n",
       "16  33716.084665      y17\n",
       "17  39425.850907      y18\n",
       "26  42361.682147      y27\n",
       "25  45722.462437      y26\n",
       "18  46562.664127      y19\n",
       "19  48467.520144      y20\n",
       "22  51618.991296      y23\n",
       "23  51643.848173      y24\n",
       "24  53025.194288      y25\n",
       "20  54004.131635      y21\n",
       "21  54540.949973      y22"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#오름차순으로 정렬 (낮은 것 부터 순서대로 넣으니까)\n",
    "vif_sort = vif.sort_values(by='VIF Factor', ascending=True)\n",
    "vif_sort"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a46d8e02",
   "metadata": {},
   "source": [
    "0: ~75 / 1: / 2: / 3: \n",
    "                \n",
    "                #merge 동일한 값 끼리 연결하는 것 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "711274ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "정확도\n",
      "0.5809212165978652\n",
      "0.5826283597236441\n",
      "오차\n",
      "0.76385121313582\n",
      "0.7785352355087665\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\AI\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:494: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    }
   ],
   "source": [
    "from tqdm import tqdm \n",
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBR = GradientBoostingRegressor(random_state=0, max_depth=1)\n",
    "GBR.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(GBR.score(X_train, y_train))\n",
    "print(GBR.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = GBR.predict(X_train)\n",
    "test_pred_y = GBR.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "\n",
    "y_colname = [\"label\"]\n",
    "X_colname = ['y1', 'y2', 'y3', 'y4', 'y5', 'y6', 'y7', 'y8', 'y9', 'y10', 'y11',\n",
    "        'y12', 'y13', 'y14', 'y15', 'y16', 'y17', 'y18', 'y19', 'y20', 'y21',\n",
    "        'y22', 'y23', 'y24', 'y25', 'y26', 'y27', 'y28', 'y29', 'y30']\n",
    "\n",
    "# for i in tqdm(range(1,len(X.columns)+1)):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "39f01c98",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     label\n",
      "0       62\n",
      "1       32\n",
      "2       46\n",
      "3       59\n",
      "4       91\n",
      "..     ...\n",
      "995     95\n",
      "996     62\n",
      "997     76\n",
      "998     76\n",
      "999     81\n",
      "\n",
      "[999 rows x 1 columns]\n",
      "     label  y3\n",
      "0       62   7\n",
      "1       32   7\n",
      "2       46   8\n",
      "3       59   1\n",
      "4       91  18\n",
      "..     ...  ..\n",
      "995     95  12\n",
      "996     62   5\n",
      "997     76   8\n",
      "998     76  10\n",
      "999     81   4\n",
      "\n",
      "[999 rows x 2 columns]\n",
      "     label  y3  y1\n",
      "0       62   7   0\n",
      "1       32   7   0\n",
      "2       46   8  -8\n",
      "3       59   1  -5\n",
      "4       91  18  12\n",
      "..     ...  ..  ..\n",
      "995     95  12   3\n",
      "996     62   5   1\n",
      "997     76   8   1\n",
      "998     76  10   1\n",
      "999     81   4   0\n",
      "\n",
      "[999 rows x 3 columns]\n",
      "     label  y3  y1  y2\n",
      "0       62   7   0   1\n",
      "1       32   7   0   3\n",
      "2       46   8  -8   0\n",
      "3       59   1  -5  -1\n",
      "4       91  18  12  15\n",
      "..     ...  ..  ..  ..\n",
      "995     95  12   3   6\n",
      "996     62   5   1   2\n",
      "997     76   8   1   3\n",
      "998     76  10   1   4\n",
      "999     81   4   0   0\n",
      "\n",
      "[999 rows x 4 columns]\n",
      "     label  y3  y1  y2  y4\n",
      "0       62   7   0   1  13\n",
      "1       32   7   0   3  13\n",
      "2       46   8  -8   0  15\n",
      "3       59   1  -5  -1   5\n",
      "4       91  18  12  15  22\n",
      "..     ...  ..  ..  ..  ..\n",
      "995     95  12   3   6  19\n",
      "996     62   5   1   2  11\n",
      "997     76   8   1   3  15\n",
      "998     76  10   1   4  17\n",
      "999     81   4   0   0  11\n",
      "\n",
      "[999 rows x 5 columns]\n",
      "     label  y3  y1  y2  y4  y6\n",
      "0       62   7   0   1  13  31\n",
      "1       32   7   0   3  13  22\n",
      "2       46   8  -8   0  15  27\n",
      "3       59   1  -5  -1   5  15\n",
      "4       91  18  12  15  22  25\n",
      "..     ...  ..  ..  ..  ..  ..\n",
      "995     95  12   3   6  19  35\n",
      "996     62   5   1   2  11  22\n",
      "997     76   8   1   3  15  29\n",
      "998     76  10   1   4  17  29\n",
      "999     81   4   0   0  11  23\n",
      "\n",
      "[999 rows x 6 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5\n",
      "0       62   7   0   1  13  31  22\n",
      "1       32   7   0   3  13  22  18\n",
      "2       46   8  -8   0  15  27  22\n",
      "3       59   1  -5  -1   5  15  11\n",
      "4       91  18  12  15  22  25  23\n",
      "..     ...  ..  ..  ..  ..  ..  ..\n",
      "995     95  12   3   6  19  35  27\n",
      "996     62   5   1   2  11  22  17\n",
      "997     76   8   1   3  15  29  23\n",
      "998     76  10   1   4  17  29  23\n",
      "999     81   4   0   0  11  23  17\n",
      "\n",
      "[999 rows x 7 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7\n",
      "0       62   7   0   1  13  31  22  35\n",
      "1       32   7   0   3  13  22  18  29\n",
      "2       46   8  -8   0  15  27  22  30\n",
      "3       59   1  -5  -1   5  15  11  19\n",
      "4       91  18  12  15  22  25  23  27\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..\n",
      "995     95  12   3   6  19  35  27  42\n",
      "996     62   5   1   2  11  22  17  28\n",
      "997     76   8   1   3  15  29  23  36\n",
      "998     76  10   1   4  17  29  23  35\n",
      "999     81   4   0   0  11  23  17  30\n",
      "\n",
      "[999 rows x 8 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8\n",
      "0       62   7   0   1  13  31  22  35  39\n",
      "1       32   7   0   3  13  22  18  29  31\n",
      "2       46   8  -8   0  15  27  22  30  33\n",
      "3       59   1  -5  -1   5  15  11  19  25\n",
      "4       91  18  12  15  22  25  23  27  29\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..\n",
      "995     95  12   3   6  19  35  27  42  49\n",
      "996     62   5   1   2  11  22  17  28  34\n",
      "997     76   8   1   3  15  29  23  36  43\n",
      "998     76  10   1   4  17  29  23  35  41\n",
      "999     81   4   0   0  11  23  17  30  36\n",
      "\n",
      "[999 rows x 9 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9\n",
      "0       62   7   0   1  13  31  22  35  39  44\n",
      "1       32   7   0   3  13  22  18  29  31  33\n",
      "2       46   8  -8   0  15  27  22  30  33  37\n",
      "3       59   1  -5  -1   5  15  11  19  25  29\n",
      "4       91  18  12  15  22  25  23  27  29  30\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..\n",
      "995     95  12   3   6  19  35  27  42  49  56\n",
      "996     62   5   1   2  11  22  17  28  34  39\n",
      "997     76   8   1   3  15  29  23  36  43  47\n",
      "998     76  10   1   4  17  29  23  35  41  46\n",
      "999     81   4   0   0  11  23  17  30  36  40\n",
      "\n",
      "[999 rows x 10 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30\n",
      "0       62   7   0   1  13  31  22  35  39  44   68\n",
      "1       32   7   0   3  13  22  18  29  31  33   54\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36\n",
      "4       91  18  12  15  22  25  23  27  29  30   31\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79\n",
      "996     62   5   1   2  11  22  17  28  34  39   46\n",
      "997     76   8   1   3  15  29  23  36  43  47   56\n",
      "998     76  10   1   4  17  29  23  35  41  46   57\n",
      "999     81   4   0   0  11  23  17  30  36  40   64\n",
      "\n",
      "[999 rows x 11 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50\n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33\n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60\n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42\n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51\n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50\n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44\n",
      "\n",
      "[999 rows x 12 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54\n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37\n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65\n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45\n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54\n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54\n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50\n",
      "\n",
      "[999 rows x 13 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56\n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39\n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70\n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47\n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55\n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58\n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53\n",
      "\n",
      "[999 rows x 14 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68\n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37\n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79\n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47\n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57\n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58\n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65\n",
      "\n",
      "[999 rows x 15 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68   56\n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54   46\n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46\n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40\n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31   32\n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...\n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74\n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50\n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58\n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60\n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57\n",
      "\n",
      "[999 rows x 16 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   \n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   \n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   \n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   \n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   \n",
      "\n",
      "     y28  \n",
      "0     68  \n",
      "1     54  \n",
      "2     58  \n",
      "3     38  \n",
      "4     31  \n",
      "..   ...  \n",
      "995   79  \n",
      "996   47  \n",
      "997   57  \n",
      "998   59  \n",
      "999   65  \n",
      "\n",
      "[999 rows x 17 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   \n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   \n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   \n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   \n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   \n",
      "\n",
      "     y28  y14  \n",
      "0     68   57  \n",
      "1     54   47  \n",
      "2     58   47  \n",
      "3     38   41  \n",
      "4     31   32  \n",
      "..   ...  ...  \n",
      "995   79   76  \n",
      "996   47   51  \n",
      "997   57   60  \n",
      "998   59   62  \n",
      "999   65   60  \n",
      "\n",
      "[999 rows x 18 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   \n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   \n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   \n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   \n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   \n",
      "\n",
      "     y28  y14  y15  \n",
      "0     68   57   58  \n",
      "1     54   47   49  \n",
      "2     58   47   48  \n",
      "3     38   41   41  \n",
      "4     31   32   32  \n",
      "..   ...  ...  ...  \n",
      "995   79   76   77  \n",
      "996   47   51   51  \n",
      "997   57   60   61  \n",
      "998   59   62   63  \n",
      "999   65   60   64  \n",
      "\n",
      "[999 rows x 19 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  y30  y10  y11  y12  y29  y13  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44   68   50   54   56   68   56   \n",
      "1       32   7   0   3  13  22  18  29  31  33   54   36   40   44   54   46   \n",
      "2       46   8  -8   0  15  27  22  30  33  37   59   41   43   45   59   46   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29   36   33   37   39   37   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30   31   31   32   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56   79   60   65   70   79   74   \n",
      "996     62   5   1   2  11  22  17  28  34  39   46   42   45   47   47   50   \n",
      "997     76   8   1   3  15  29  23  36  43  47   56   51   54   55   57   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46   57   50   54   58   58   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40   64   44   50   53   65   57   \n",
      "\n",
      "     y28  y14  y15  y16  \n",
      "0     68   57   58   60  \n",
      "1     54   47   49   51  \n",
      "2     58   47   48   50  \n",
      "3     38   41   41   41  \n",
      "4     31   32   32   32  \n",
      "..   ...  ...  ...  ...  \n",
      "995   79   76   77   78  \n",
      "996   47   51   51   51  \n",
      "997   57   60   61   61  \n",
      "998   59   62   63   64  \n",
      "999   65   60   64   68  \n",
      "\n",
      "[999 rows x 20 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y10  y11  y12  y29  y13  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   50   54   56   68   56   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   36   40   44   54   46   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   41   43   45   59   46   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   33   37   39   37   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   31   32   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   60   65   70   79   74   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   42   45   47   47   50   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   51   54   55   57   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   50   54   58   58   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   44   50   53   65   57   \n",
      "\n",
      "     y28  y14  y15  y16  y17  \n",
      "0     68   57   58   60   61  \n",
      "1     54   47   49   51   53  \n",
      "2     58   47   48   50   52  \n",
      "3     38   41   41   41   41  \n",
      "4     31   32   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   76   77   78   79  \n",
      "996   47   51   51   51   51  \n",
      "997   57   60   61   61   61  \n",
      "998   59   62   63   64   65  \n",
      "999   65   60   64   68   70  \n",
      "\n",
      "[999 rows x 21 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y11  y12  y29  y13  y28  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   54   56   68   56   68   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   40   44   54   46   54   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   43   45   59   46   58   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   37   39   37   40   38   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   32   31   32   31   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   65   70   79   74   79   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   45   47   47   50   47   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   54   55   57   58   57   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   54   58   58   60   59   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   50   53   65   57   65   \n",
      "\n",
      "     y14  y15  y16  y17  y18  \n",
      "0     57   58   60   61   62  \n",
      "1     47   49   51   53   54  \n",
      "2     47   48   50   52   52  \n",
      "3     41   41   41   41   41  \n",
      "4     32   32   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   76   77   78   79   80  \n",
      "996   51   51   51   51   52  \n",
      "997   60   61   61   61   61  \n",
      "998   62   63   64   65   65  \n",
      "999   60   64   68   70   71  \n",
      "\n",
      "[999 rows x 22 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y12  y29  y13  y28  y14  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   56   68   56   68   57   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   44   54   46   54   47   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   45   59   46   58   47   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   39   37   40   38   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   31   32   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   70   79   74   79   76   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   47   47   50   47   51   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   55   57   58   57   60   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   58   58   60   59   62   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   53   65   57   65   60   \n",
      "\n",
      "     y15  y16  y17  y18  y27  \n",
      "0     58   60   61   62   68  \n",
      "1     49   51   53   54   54  \n",
      "2     48   50   52   52   58  \n",
      "3     41   41   41   41   38  \n",
      "4     32   32   32   32   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   77   78   79   80   79  \n",
      "996   51   51   51   52   47  \n",
      "997   61   61   61   61   58  \n",
      "998   63   64   65   65   60  \n",
      "999   64   68   70   71   66  \n",
      "\n",
      "[999 rows x 23 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y29  y13  y28  y14  y15  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   68   56   68   57   58   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   54   46   54   47   49   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   59   46   58   47   48   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   37   40   38   41   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   31   32   31   32   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   79   74   79   76   77   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   47   50   47   51   51   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   57   58   57   60   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   58   60   59   62   63   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   65   57   65   60   64   \n",
      "\n",
      "     y16  y17  y18  y27  y26  \n",
      "0     60   61   62   68   67  \n",
      "1     51   53   54   54   54  \n",
      "2     50   52   52   58   57  \n",
      "3     41   41   41   38   38  \n",
      "4     32   32   32   31   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   78   79   80   79   79  \n",
      "996   51   51   52   47   47  \n",
      "997   61   61   61   58   59  \n",
      "998   64   65   65   60   61  \n",
      "999   68   70   71   66   67  \n",
      "\n",
      "[999 rows x 24 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y13  y28  y14  y15  y16  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   56   68   57   58   60   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   46   54   47   49   51   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   46   58   47   48   50   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   40   38   41   41   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   31   32   32   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   74   79   76   77   78   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   50   47   51   51   51   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   58   57   60   61   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   60   59   62   63   64   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   57   65   60   64   68   \n",
      "\n",
      "     y17  y18  y27  y26  y19  \n",
      "0     61   62   68   67   63  \n",
      "1     53   54   54   54   55  \n",
      "2     52   52   58   57   53  \n",
      "3     41   41   38   38   41  \n",
      "4     32   32   31   31   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   80   79   79   80  \n",
      "996   51   52   47   47   52  \n",
      "997   61   61   58   59   61  \n",
      "998   65   65   60   61   65  \n",
      "999   70   71   66   67   71  \n",
      "\n",
      "[999 rows x 25 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y28  y14  y15  y16  y17  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   68   57   58   60   61   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   54   47   49   51   53   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   58   47   48   50   52   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   38   41   41   41   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   31   32   32   32   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   79   76   77   78   79   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   47   51   51   51   51   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   57   60   61   61   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   59   62   63   64   65   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   65   60   64   68   70   \n",
      "\n",
      "     y18  y27  y26  y19  y20  \n",
      "0     62   68   67   63   64  \n",
      "1     54   54   54   55   55  \n",
      "2     52   58   57   53   54  \n",
      "3     41   38   38   41   40  \n",
      "4     32   31   31   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   79   79   80   80  \n",
      "996   52   47   47   52   52  \n",
      "997   61   58   59   61   61  \n",
      "998   65   60   61   65   65  \n",
      "999   71   66   67   71   71  \n",
      "\n",
      "[999 rows x 26 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y14  y15  y16  y17  y18  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   57   58   60   61   62   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   47   49   51   53   54   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   47   48   50   52   52   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   41   41   41   41   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   32   32   32   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   76   77   78   79   80   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   51   51   51   51   52   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   60   61   61   61   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   62   63   64   65   65   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   60   64   68   70   71   \n",
      "\n",
      "     y27  y26  y19  y20  y23  \n",
      "0     68   67   63   64   65  \n",
      "1     54   54   55   55   54  \n",
      "2     58   57   53   54   55  \n",
      "3     38   38   41   40   39  \n",
      "4     31   31   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   79   80   80   79  \n",
      "996   47   47   52   52   50  \n",
      "997   58   59   61   61   61  \n",
      "998   60   61   65   65   63  \n",
      "999   66   67   71   71   68  \n",
      "\n",
      "[999 rows x 27 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y15  y16  y17  y18  y27  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   58   60   61   62   68   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   49   51   53   54   54   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   48   50   52   52   58   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   41   41   41   41   38   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   32   32   32   31   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   77   78   79   80   79   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   51   51   51   52   47   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   61   61   61   61   58   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   63   64   65   65   60   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   64   68   70   71   66   \n",
      "\n",
      "     y26  y19  y20  y23  y24  \n",
      "0     67   63   64   65   66  \n",
      "1     54   55   55   54   54  \n",
      "2     57   53   54   55   56  \n",
      "3     38   41   40   39   39  \n",
      "4     31   32   32   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   80   80   79   79  \n",
      "996   47   52   52   50   49  \n",
      "997   59   61   61   61   60  \n",
      "998   61   65   65   63   63  \n",
      "999   67   71   71   68   68  \n",
      "\n",
      "[999 rows x 28 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y16  y17  y18  y27  y26  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   60   61   62   68   67   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   51   53   54   54   54   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   50   52   52   58   57   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   41   41   41   38   38   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   32   32   31   31   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   78   79   80   79   79   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   51   51   52   47   47   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   61   61   61   58   59   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   64   65   65   60   61   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   68   70   71   66   67   \n",
      "\n",
      "     y19  y20  y23  y24  y25  \n",
      "0     63   64   65   66   67  \n",
      "1     55   55   54   54   54  \n",
      "2     53   54   55   56   57  \n",
      "3     41   40   39   39   38  \n",
      "4     32   32   32   32   31  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   80   79   79   79  \n",
      "996   52   52   50   49   48  \n",
      "997   61   61   61   60   59  \n",
      "998   65   65   63   63   62  \n",
      "999   71   71   68   68   68  \n",
      "\n",
      "[999 rows x 29 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y17  y18  y27  y26  y19  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   61   62   68   67   63   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   53   54   54   54   55   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   52   52   58   57   53   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   41   41   38   38   41   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   32   31   31   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   79   80   79   79   80   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   51   52   47   47   52   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   61   61   58   59   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   65   65   60   61   65   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   70   71   66   67   71   \n",
      "\n",
      "     y20  y23  y24  y25  y21  \n",
      "0     64   65   66   67   65  \n",
      "1     55   54   54   54   55  \n",
      "2     54   55   56   57   54  \n",
      "3     40   39   39   38   39  \n",
      "4     32   32   32   31   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   80   79   79   79   80  \n",
      "996   52   50   49   48   52  \n",
      "997   61   61   60   59   61  \n",
      "998   65   63   63   62   64  \n",
      "999   71   68   68   68   70  \n",
      "\n",
      "[999 rows x 30 columns]\n",
      "     label  y3  y1  y2  y4  y6  y5  y7  y8  y9  ...  y18  y27  y26  y19  y20  \\\n",
      "0       62   7   0   1  13  31  22  35  39  44  ...   62   68   67   63   64   \n",
      "1       32   7   0   3  13  22  18  29  31  33  ...   54   54   54   55   55   \n",
      "2       46   8  -8   0  15  27  22  30  33  37  ...   52   58   57   53   54   \n",
      "3       59   1  -5  -1   5  15  11  19  25  29  ...   41   38   38   41   40   \n",
      "4       91  18  12  15  22  25  23  27  29  30  ...   32   31   31   32   32   \n",
      "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
      "995     95  12   3   6  19  35  27  42  49  56  ...   80   79   79   80   80   \n",
      "996     62   5   1   2  11  22  17  28  34  39  ...   52   47   47   52   52   \n",
      "997     76   8   1   3  15  29  23  36  43  47  ...   61   58   59   61   61   \n",
      "998     76  10   1   4  17  29  23  35  41  46  ...   65   60   61   65   65   \n",
      "999     81   4   0   0  11  23  17  30  36  40  ...   71   66   67   71   71   \n",
      "\n",
      "     y23  y24  y25  y21  y22  \n",
      "0     65   66   67   65   65  \n",
      "1     54   54   54   55   55  \n",
      "2     55   56   57   54   54  \n",
      "3     39   39   38   39   39  \n",
      "4     32   32   31   32   32  \n",
      "..   ...  ...  ...  ...  ...  \n",
      "995   79   79   79   80   79  \n",
      "996   50   49   48   52   51  \n",
      "997   61   60   59   61   61  \n",
      "998   63   63   62   64   63  \n",
      "999   68   68   68   70   69  \n",
      "\n",
      "[999 rows x 31 columns]\n"
     ]
    }
   ],
   "source": [
    "X_col = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col]\n",
    "    print(var_col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "59f4df5b",
   "metadata": {},
   "outputs": [
    {
     "ename": "ImportError",
     "evalue": "cannot import name 'train_test_split_test_split' from 'sklearn.model_selection' (C:\\Users\\AI\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\__init__.py)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mImportError\u001b[0m                               Traceback (most recent call last)",
      "Input \u001b[1;32mIn [7]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mmodel_selection\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m train_test_split_test_split \n\u001b[0;32m      2\u001b[0m X_train, X_test, y_train, y_test \u001b[38;5;241m=\u001b[39m train_test_split(X,y,random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m999\u001b[39m)\n",
      "\u001b[1;31mImportError\u001b[0m: cannot import name 'train_test_split_test_split' from 'sklearn.model_selection' (C:\\Users\\AI\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\__init__.py)"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split_test_split \n",
    "X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=999)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "6f4cbf3f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "label컬럼까지 사용\n",
      "Train 정확도 : 0.16395439029314562\n",
      "Test 정확도 : -0.00010794936649261011\n",
      "Train 오차 :  262.7788154192094\n",
      "Test 오차 :  292.3381811038488\n",
      " \n",
      "y3컬럼까지 사용\n",
      "Train 정확도 : 0.3241536959743644\n",
      "Test 정확도 : 0.10030037349548415\n",
      "Train 오차 :  236.26497075327373\n",
      "Test 오차 :  277.2751002301489\n",
      " \n",
      "y1컬럼까지 사용\n",
      "Train 정확도 : 0.3834383277777277\n",
      "Test 정확도 : 0.14327218009801623\n",
      "Train 오차 :  225.66469899087042\n",
      "Test 오차 :  270.57242604147103\n",
      " \n",
      "y2컬럼까지 사용\n",
      "Train 정확도 : 0.39962573337984075\n",
      "Test 정확도 : 0.12413230823589672\n",
      "Train 오차 :  222.6826596837147\n",
      "Test 오차 :  273.57811586993483\n",
      " \n",
      "y4컬럼까지 사용\n",
      "Train 정확도 : 0.4436686731167241\n",
      "Test 정확도 : 0.1429924856875382\n",
      "Train 오차 :  214.35919777605633\n",
      "Test 오차 :  270.6165890871087\n",
      " \n",
      "y6컬럼까지 사용\n",
      "Train 정확도 : 0.4824655052396999\n",
      "Test 정확도 : 0.1805894497759436\n",
      "Train 오차 :  206.74976095954824\n",
      "Test 오차 :  264.61403579794353\n",
      " \n",
      "y5컬럼까지 사용\n",
      "Train 정확도 : 0.49226430216120876\n",
      "Test 정확도 : 0.18619208235319995\n",
      "Train 오차 :  204.7831479056287\n",
      "Test 오차 :  263.7078489743967\n",
      " \n",
      "y7컬럼까지 사용\n",
      "Train 정확도 : 0.5004959745219311\n",
      "Test 정확도 : 0.15647830181849987\n",
      "Train 오차 :  203.11633963414116\n",
      "Test 오차 :  268.4789434983976\n",
      " \n",
      "y8컬럼까지 사용\n",
      "Train 정확도 : 0.5080778503647173\n",
      "Test 정확도 : 0.19847750188129942\n",
      "Train 오차 :  201.56891316848547\n",
      "Test 오차 :  261.7097842637135\n",
      " \n",
      "y9컬럼까지 사용\n",
      "Train 정확도 : 0.5117443999359224\n",
      "Test 정확도 : 0.18729562784052456\n",
      "Train 오차 :  200.81630960874614\n",
      "Test 오차 :  263.5289908415887\n",
      " \n",
      "y30컬럼까지 사용\n",
      "Train 정확도 : 0.5423652103593027\n",
      "Test 정확도 : 0.19639036748355243\n",
      "Train 오차 :  194.41728831552027\n",
      "Test 오차 :  262.0503039435158\n",
      " \n",
      "y10컬럼까지 사용\n",
      "Train 정확도 : 0.5491297350014205\n",
      "Test 정확도 : 0.19812756249401486\n",
      "Train 오차 :  192.9750501422231\n",
      "Test 오차 :  261.7669084042485\n",
      " \n",
      "y11컬럼까지 사용\n",
      "Train 정확도 : 0.5566198448241644\n",
      "Test 정확도 : 0.20474294233350032\n",
      "Train 오차 :  191.3654322717221\n",
      "Test 오차 :  260.68489471650116\n",
      " \n",
      "y12컬럼까지 사용\n",
      "Train 정확도 : 0.5748083520480423\n",
      "Test 정확도 : 0.19277998249913808\n",
      "Train 오차 :  187.39919793124673\n",
      "Test 오차 :  262.6383022598997\n",
      " \n",
      "y29컬럼까지 사용\n",
      "Train 정확도 : 0.5649881295096411\n",
      "Test 정확도 : 0.2035423055780562\n",
      "Train 오차 :  189.55092986440107\n",
      "Test 오차 :  260.8816045848122\n",
      " \n",
      "y13컬럼까지 사용\n",
      "Train 정확도 : 0.5630607382171505\n",
      "Test 정확도 : 0.22206534813888967\n",
      "Train 오차 :  189.97038397257657\n",
      "Test 오차 :  257.83012507910445\n",
      " \n",
      "y28컬럼까지 사용\n",
      "Train 정확도 : 0.5701435303025886\n",
      "Test 정확도 : 0.21243029407166936\n",
      "Train 오차 :  188.4243817871322\n",
      "Test 오차 :  259.4218799041548\n",
      " \n",
      "y14컬럼까지 사용\n",
      "Train 정확도 : 0.5820045723847438\n",
      "Test 정확도 : 0.21108939005859306\n",
      "Train 오차 :  185.80659759366847\n",
      "Test 오차 :  259.64262982504533\n",
      " \n",
      "y15컬럼까지 사용\n",
      "Train 정확도 : 0.5838936581350561\n",
      "Test 정확도 : 0.2166884592568138\n",
      "Train 오차 :  185.3862555836073\n",
      "Test 오차 :  258.71961926212697\n",
      " \n",
      "y16컬럼까지 사용\n",
      "Train 정확도 : 0.5943118667247665\n",
      "Test 정확도 : 0.21396654102314305\n",
      "Train 오차 :  183.0507520292419\n",
      "Test 오차 :  259.1687400190445\n",
      " \n",
      "y17컬럼까지 사용\n",
      "Train 정확도 : 0.5933980970029795\n",
      "Test 정확도 : 0.21382736568072358\n",
      "Train 오차 :  183.25678733022858\n",
      "Test 오차 :  259.1916832546212\n",
      " \n",
      "y18컬럼까지 사용\n",
      "Train 정확도 : 0.5987805666087482\n",
      "Test 정확도 : 0.18891581083996078\n",
      "Train 오차 :  182.0397981874461\n",
      "Test 오차 :  263.26617805623147\n",
      " \n",
      "y27컬럼까지 사용\n",
      "Train 정확도 : 0.6006873828111042\n",
      "Test 정확도 : 0.20723237981200038\n",
      "Train 오차 :  181.60670620222666\n",
      "Test 오차 :  260.2765566796874\n",
      " \n",
      "y26컬럼까지 사용\n",
      "Train 정확도 : 0.6078106741664593\n",
      "Test 정확도 : 0.19199889013219806\n",
      "Train 오차 :  179.97958658945956\n",
      "Test 오차 :  262.7653402213724\n",
      " \n",
      "y19컬럼까지 사용\n",
      "Train 정확도 : 0.6071939632079326\n",
      "Test 정확도 : 0.20356965612223765\n",
      "Train 오차 :  180.1210384033464\n",
      "Test 오차 :  260.87712517858637\n",
      " \n",
      "y20컬럼까지 사용\n",
      "Train 정확도 : 0.6046926894512308\n",
      "Test 정확도 : 0.19583974902073453\n",
      "Train 오차 :  180.69360736197535\n",
      "Test 오차 :  262.14006458226385\n",
      " \n",
      "y23컬럼까지 사용\n",
      "Train 정확도 : 0.6110481834365625\n",
      "Test 정확도 : 0.20677088756709405\n",
      "Train 오차 :  179.23518453289435\n",
      "Test 오차 :  260.35230279607794\n",
      " \n",
      "y24컬럼까지 사용\n",
      "Train 정확도 : 0.6055127304884116\n",
      "Test 정확도 : 0.2075382967395435\n",
      "Train 오차 :  180.506091099732\n",
      "Test 오차 :  260.22633345833526\n",
      " \n",
      "y25컬럼까지 사용\n",
      "Train 정확도 : 0.6113356414730591\n",
      "Test 정확도 : 0.2039427895283774\n",
      "Train 오차 :  179.16893967287447\n",
      "Test 오차 :  260.81600660426477\n",
      " \n",
      "y21컬럼까지 사용\n",
      "Train 정확도 : 0.6081982654068929\n",
      "Test 정확도 : 0.20840893525474313\n",
      "Train 오차 :  179.89062986587268\n",
      "Test 오차 :  260.083345267067\n",
      " \n",
      "y22컬럼까지 사용\n",
      "Train 정확도 : 0.6094838074765314\n",
      "Test 정확도 : 0.2168957273501223\n",
      "Train 오차 :  179.59526749435386\n",
      "Test 오차 :  258.68538775449497\n",
      " \n"
     ]
    }
   ],
   "source": [
    "X_col = []\n",
    "Train_list = []\n",
    "Test_list = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col] #feature\n",
    "    y #label\n",
    "    GBR = GradientBoostingRegressor(random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    X_train, X_test, y_train, y_test = train_test_split(var_col,y,random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    \n",
    "    print(f'{i}컬럼까지 사용')\n",
    "    print(\"Train 정확도 :\",GBR.score(X_train, y_train))\n",
    "    print(\"Test 정확도 :\",GBR.score(X_test, y_test))\n",
    "    \n",
    "    train_pred_y = GBR.predict(X_train)\n",
    "    test_pred_y = GBR.predict(X_test)\n",
    "    print(\"Train 오차 : \",np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "    print(\"Test 오차 : \",np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "    print(\" \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "4ea372e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_col = []\n",
    "Train_list = []\n",
    "Test_list = []\n",
    "for i in vif_sort[\"features\"]:\n",
    "    X_col.append(i)\n",
    "    var_col=data[X_col] #feature\n",
    "    y #label\n",
    "    GBR = GradientBoostingRegressor(random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    X_train, X_test, y_train, y_test = train_test_split(var_col,y,random_state=999)\n",
    "    GBR.fit(X_train, y_train)\n",
    "    \n",
    "#     print(f'{i}컬럼까지 사용')\n",
    "#     print(\"Train 정확도 :\",GBR.score(X_train, y_train))\n",
    "#     print(\"Test 정확도 :\",GBR.score(X_test, y_test))\n",
    "    \n",
    "    train_pred_y = GBR.predict(X_train)\n",
    "    test_pred_y = GBR.predict(X_test)\n",
    "#     print(\"Train 오차 : \",np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "#     print(\"Test 오차 : \",np.sqrt(mean_squared_error(test_pred_y, y_test)))\n",
    "#     print(\" \")\n",
    "    \n",
    "    Train_scor=GBR.score(X_train, y_train)\n",
    "    Train_list.append(Train_scor)\n",
    "    Test_scor=GBR.score(X_test, y_test)\n",
    "    Test_list.append(Test_scor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "5e3e7c62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.float64"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(Train_scor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "a9d1960d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1d4d45a5ca0>"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(range(0, len(Train_list)), Train_list, label=\"Train\")\n",
    "plt.plot(range(0, len(Train_list)), Test_list, label=\"Test\")\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "79eb6037",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'numpy.float64' object has no attribute 'index'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Input \u001b[1;32mIn [103]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m30\u001b[39m,\u001b[38;5;241m15\u001b[39m))\n\u001b[1;32m----> 2\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(\u001b[38;5;28mint\u001b[39m((\u001b[43mTrain_scor\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mindex\u001b[49m)\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m), \u001b[38;5;28mint\u001b[39m(Train_scor\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m)\u001b[38;5;241m.\u001b[39mmax())\n\u001b[0;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(\u001b[38;5;28mint\u001b[39m((Test_scor\u001b[38;5;241m.\u001b[39mindex)\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m),\u001b[38;5;28mint\u001b[39m(Test_scor\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m100\u001b[39m)\u001b[38;5;241m.\u001b[39mmax())\n\u001b[0;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mshow\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'numpy.float64' object has no attribute 'index'"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 2160x1080 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(30,15))\n",
    "plt.plot(int((Train_scor.index)*100), int(Train_scor*100).max())\n",
    "plt.plot(int((Test_scor.index)*100),int(Test_scor*100).max())\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "653aab05",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "5eb8f68c",
   "metadata": {},
   "source": [
    "- 조건수 감소 방법\n",
    "    - 스케일링 : 변수들의 단위차로 숫자의 스케일이 다른 경우\n",
    "    - 차원추소 (VIF,PCA) : \n",
    "        - VIF(Variance Inflation Factor) 분산팽창인수\n",
    "        - PCA(Prinsipal Component Analysis)\n",
    "    - 정규화(Resulariztion) : "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a24eb27",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "89a399c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "raw_all = data\n",
    "\n",
    "#Feature Engineering\n",
    "raw_fe = X\n",
    "target = \n",
    "raw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec90cc95",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4eb50938",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4a5045f7",
   "metadata": {},
   "source": [
    "# Modeling"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5808b13",
   "metadata": {},
   "source": [
    "## Autogluon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "865a5538",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install autogluon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c130a4a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "df993c1c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#AutoGluon의 로딩\n",
    "from autogluon.tabular import TabularPredictor as task\n",
    "\n",
    "#autoGluon은 X,y 나누지 않고 테스트 데이터와 트레인 데이터로만 나눔\n",
    "df_train, df_test = train_test_split(data, test_size=0.3, random_state=999)\n",
    "\n",
    "#predictor = task.fit(\"data/train_first.csv\", label=\"income\") #학습\n",
    "predictor = task(label=\"label\").fit(df_train)\n",
    "predictions = predictor.predict(df_test) #테스트 데이터에 대한 예측"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1281c3b4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "predictor.fit_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91fb67a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "predictor.get_model_best()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "726aa8cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# print(np.sqrt(mean_squared_error(pred, y_test)))\n",
    "# 코드 수정해서 오차 봐야함"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d50d2efe",
   "metadata": {},
   "source": [
    "## LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d678d8ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=999)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "727a2bd7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "정확도\n",
      "0.2861209431268896\n",
      "0.14495444740894037\n",
      "오차\n",
      "244.73332021904272\n",
      "264.11642542333095\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import numpy as np\n",
    "\n",
    "lr = LinearRegression()\n",
    "lr.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(lr.score(X_train, y_train))\n",
    "print(lr.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = lr.predict(X_train)\n",
    "test_pred_y = lr.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "281cd9ca",
   "metadata": {},
   "source": [
    "## Gradient Boost Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "50e7b36e",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'X_train' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GradientBoostingRegressor\n\u001b[0;32m      3\u001b[0m GBR \u001b[38;5;241m=\u001b[39m GradientBoostingRegressor(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m, max_depth\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m----> 4\u001b[0m GBR\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m정확도\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(GBR\u001b[38;5;241m.\u001b[39mscore(X_train, y_train))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'X_train' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBR = GradientBoostingRegressor(random_state=0, max_depth=1)\n",
    "GBR.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(GBR.score(X_train, y_train))\n",
    "print(GBR.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = GBR.predict(X_train)\n",
    "test_pred_y = GBR.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1adec615",
   "metadata": {},
   "source": [
    "## RandomForest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b92572d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "rf = RandomForestRegressor(random_state=777, max_leaf_nodes=50)\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(rf.score(X_train, y_train))\n",
    "print(rf.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = rf.predict(X_train)\n",
    "test_pred_y = rf.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa19533a",
   "metadata": {},
   "source": [
    "## Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b945e4d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Lasso\n",
    "\n",
    "lasso = Lasso()\n",
    "lasso.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(lasso.score(X_train, y_train))\n",
    "print(lasso.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = lasso.predict(X_train)\n",
    "test_pred_y = lasso.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9261e775",
   "metadata": {},
   "source": [
    "## Ridge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d96263d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Ridge\n",
    "\n",
    "ridge = Ridge()\n",
    "ridge.fit(X_train, y_train)\n",
    "\n",
    "print('정확도')\n",
    "print(ridge.score(X_train, y_train))\n",
    "print(ridge.score(X_test, y_test))\n",
    "\n",
    "train_pred_y = ridge.predict(X_train)\n",
    "test_pred_y = ridge.predict(X_test)\n",
    "\n",
    "print('오차')\n",
    "print(np.sqrt(mean_squared_error(train_pred_y, y_train)))\n",
    "print(np.sqrt(mean_squared_error(test_pred_y, y_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea651175",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "841d85a1",
   "metadata": {},
   "source": [
    "# 피드백"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3af1775c",
   "metadata": {},
   "source": [
    "## 클러스트링"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63e1e08b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install scipy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f93f5e22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'cluster distance')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.cluster.hierarchy import dendrogram, ward\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "linkage_array = ward(X)\n",
    "\n",
    "# 클러스터 간의 거리 정보가 담긴 linkage_array를 사용해 덴드로그램을 그림\n",
    "dendrogram(linkage_array)\n",
    "\n",
    "# 두 개와 세 개의 클러스터를 구분하는 커트라인을 표시\n",
    "ax = plt.gca()       #현재 그려진 그래프의 정보를 가지고오는 함수\n",
    "\n",
    "bounds = ax.get_xbound()      #x축정보를 가지고옴\n",
    "\n",
    "ax.plot(bounds, [20, 20], '--', c='k')\n",
    "ax.plot(bounds, [10, 10], '--', c='k')\n",
    "\n",
    "ax.text(bounds[1], 20, ' two cluster', fontdict={'size': 15})\n",
    "ax.text(bounds[1], 10, ' three cluster', fontdict={'size': 15})\n",
    "plt.xlabel(\"Sample number\")\n",
    "plt.ylabel(\"cluster distance\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "90eedb9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AgglomerativeClustering(n_clusters=4)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "model=AgglomerativeClustering(n_clusters=4, linkage='ward')\n",
    "model.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "9bc182b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#위 덴드로그램 X라벨값 추출\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f4abd9fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# y = y.drop(810)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "abb3d7af",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>999 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust\n",
       "0        0\n",
       "1        1\n",
       "2        1\n",
       "3        3\n",
       "4        3\n",
       "..     ...\n",
       "995      2\n",
       "996      1\n",
       "997      0\n",
       "998      0\n",
       "999      0\n",
       "\n",
       "[999 rows x 1 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels = model.labels_\n",
    "#해당 인덱스 번호에 배정된 라벨 값이 할당된 군집이 '0'칼럼에 배정\n",
    "y = pd.DataFrame(labels)\n",
    "# y = y.drop(810)\n",
    "y.columns=['clust']\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "bd263174",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      62\n",
       "1      32\n",
       "2      46\n",
       "3      59\n",
       "4      91\n",
       "       ..\n",
       "995    95\n",
       "996    62\n",
       "997    76\n",
       "998    76\n",
       "999    81\n",
       "Name: label, Length: 999, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "L=data.iloc[:,-1]\n",
    "L"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c38ce414",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>y10</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>51</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>999 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     y1  y2  y3  y4  y5  y6  y7  y8  y9  y10  ...  y22  y23  y24  y25  y26  \\\n",
       "0     0   1   7  13  22  31  35  39  44   50  ...   65   65   66   67   67   \n",
       "1     0   3   7  13  18  22  29  31  33   36  ...   55   54   54   54   54   \n",
       "2    -8   0   8  15  22  27  30  33  37   41  ...   54   55   56   57   57   \n",
       "3    -5  -1   1   5  11  15  19  25  29   33  ...   39   39   39   38   38   \n",
       "4    12  15  18  22  23  25  27  29  30   31  ...   32   32   32   31   31   \n",
       "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
       "995   3   6  12  19  27  35  42  49  56   60  ...   79   79   79   79   79   \n",
       "996   1   2   5  11  17  22  28  34  39   42  ...   51   50   49   48   47   \n",
       "997   1   3   8  15  23  29  36  43  47   51  ...   61   61   60   59   59   \n",
       "998   1   4  10  17  23  29  35  41  46   50  ...   63   63   63   62   61   \n",
       "999   0   0   4  11  17  23  30  36  40   44  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[999 rows x 31 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "0a9a5687",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>999 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "0        0   0   1   7  13  22  31  35  39  44  ...   65   65   66   67   67   \n",
       "1        1   0   3   7  13  18  22  29  31  33  ...   55   54   54   54   54   \n",
       "2        1  -8   0   8  15  22  27  30  33  37  ...   54   55   56   57   57   \n",
       "3        3  -5  -1   1   5  11  15  19  25  29  ...   39   39   39   38   38   \n",
       "4        3  12  15  18  22  23  25  27  29  30  ...   32   32   32   31   31   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "995      2   3   6  12  19  27  35  42  49  56  ...   79   79   79   79   79   \n",
       "996      1   1   2   5  11  17  22  28  34  39  ...   51   50   49   48   47   \n",
       "997      0   1   3   8  15  23  29  36  43  47  ...   61   61   60   59   59   \n",
       "998      0   1   4  10  17  23  29  35  41  46  ...   63   63   63   62   61   \n",
       "999      0   0   0   4  11  17  23  30  36  40  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "995   79   79   79   79     95  \n",
       "996   47   47   47   46     62  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[999 rows x 32 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con = pd.concat([y, data], axis=1)\n",
    "con"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "7c068b5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "list0 =con[con[\"clust\"]==0]\n",
    "list1 =con[con[\"clust\"]==1]\n",
    "list2 =con[con[\"clust\"]==2]\n",
    "list3 =con[con[\"clust\"]==3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a7e86388",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>356.0</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "      <td>356.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.0</td>\n",
       "      <td>6.050562</td>\n",
       "      <td>8.713483</td>\n",
       "      <td>13.193820</td>\n",
       "      <td>19.188202</td>\n",
       "      <td>25.567416</td>\n",
       "      <td>31.491573</td>\n",
       "      <td>36.558989</td>\n",
       "      <td>41.266854</td>\n",
       "      <td>45.303371</td>\n",
       "      <td>...</td>\n",
       "      <td>62.339888</td>\n",
       "      <td>62.269663</td>\n",
       "      <td>62.132022</td>\n",
       "      <td>61.971910</td>\n",
       "      <td>61.721910</td>\n",
       "      <td>61.457865</td>\n",
       "      <td>61.165730</td>\n",
       "      <td>60.792135</td>\n",
       "      <td>60.477528</td>\n",
       "      <td>71.758427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>10.076201</td>\n",
       "      <td>10.585238</td>\n",
       "      <td>10.681777</td>\n",
       "      <td>9.967891</td>\n",
       "      <td>9.289913</td>\n",
       "      <td>8.381565</td>\n",
       "      <td>7.382461</td>\n",
       "      <td>6.807131</td>\n",
       "      <td>6.590483</td>\n",
       "      <td>...</td>\n",
       "      <td>3.740104</td>\n",
       "      <td>3.791804</td>\n",
       "      <td>3.840773</td>\n",
       "      <td>3.874699</td>\n",
       "      <td>4.014575</td>\n",
       "      <td>4.228797</td>\n",
       "      <td>4.622426</td>\n",
       "      <td>5.318217</td>\n",
       "      <td>5.424208</td>\n",
       "      <td>13.323623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.0</td>\n",
       "      <td>-5.000000</td>\n",
       "      <td>-2.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>63.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>72.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.250000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>80.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.0</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>109.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  356.0  356.000000  356.000000  356.000000  356.000000  356.000000   \n",
       "mean     0.0    6.050562    8.713483   13.193820   19.188202   25.567416   \n",
       "std      0.0   10.076201   10.585238   10.681777    9.967891    9.289913   \n",
       "min      0.0   -5.000000   -2.000000   -1.000000    0.000000    4.000000   \n",
       "25%      0.0    0.000000    2.000000    6.000000   12.000000   19.000000   \n",
       "50%      0.0    2.000000    6.000000   11.000000   18.000000   25.000000   \n",
       "75%      0.0    7.000000   11.250000   17.000000   24.000000   30.250000   \n",
       "max      0.0   73.000000   73.000000   73.000000   73.000000   74.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...         y22  \\\n",
       "count  356.000000  356.000000  356.000000  356.000000  ...  356.000000   \n",
       "mean    31.491573   36.558989   41.266854   45.303371  ...   62.339888   \n",
       "std      8.381565    7.382461    6.807131    6.590483  ...    3.740104   \n",
       "min      9.000000   11.000000   12.000000    5.000000  ...   42.000000   \n",
       "25%     25.000000   31.000000   37.000000   42.000000  ...   60.000000   \n",
       "50%     31.000000   37.000000   41.000000   45.000000  ...   63.000000   \n",
       "75%     36.000000   41.000000   45.000000   49.000000  ...   65.000000   \n",
       "max     73.000000   64.000000   66.000000   68.000000  ...   73.000000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  356.000000  356.000000  356.000000  356.000000  356.000000  356.000000   \n",
       "mean    62.269663   62.132022   61.971910   61.721910   61.457865   61.165730   \n",
       "std      3.791804    3.840773    3.874699    4.014575    4.228797    4.622426   \n",
       "min     44.000000   45.000000   46.000000   47.000000   41.000000   29.000000   \n",
       "25%     60.000000   60.000000   60.000000   59.000000   59.000000   59.000000   \n",
       "50%     63.000000   63.000000   62.000000   62.000000   62.000000   61.000000   \n",
       "75%     65.000000   65.000000   65.000000   64.000000   64.000000   64.000000   \n",
       "max     74.000000   74.000000   74.000000   74.000000   74.000000   74.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  356.000000  356.000000  356.000000  \n",
       "mean    60.792135   60.477528   71.758427  \n",
       "std      5.318217    5.424208   13.323623  \n",
       "min      5.000000    5.000000   31.000000  \n",
       "25%     58.000000   58.000000   63.000000  \n",
       "50%     61.000000   61.000000   72.000000  \n",
       "75%     64.000000   64.000000   80.000000  \n",
       "max     74.000000   74.000000  109.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list0.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "4988b259",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>44</td>\n",
       "      <td>...</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>60</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>41</td>\n",
       "      <td>43</td>\n",
       "      <td>45</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>60</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>41</td>\n",
       "      <td>44</td>\n",
       "      <td>47</td>\n",
       "      <td>50</td>\n",
       "      <td>53</td>\n",
       "      <td>57</td>\n",
       "      <td>59</td>\n",
       "      <td>61</td>\n",
       "      <td>...</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>55</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>37</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>62</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>38</td>\n",
       "      <td>42</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>64</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "      <td>...</td>\n",
       "      <td>61</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>63</td>\n",
       "      <td>62</td>\n",
       "      <td>61</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>64</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>356 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "0        0   0   1   7  13  22  31  35  39  44  ...   65   65   66   67   67   \n",
       "9        0   0  -1   0   7  13  19  26  31  35  ...   60   61   61   61   61   \n",
       "10       0  18  21  26  31  35  38  41  43  45  ...   61   61   61   61   61   \n",
       "11       0  37  41  44  47  50  53  57  59  61  ...   66   66   66   66   66   \n",
       "12       0  12  17  23  29  35  39  45  50  55  ...   67   67   68   68   68   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "992      0   1   5   9  14  20  24  30  37  42  ...   62   62   61   61   60   \n",
       "993      0   1   2   5  10  17  24  30  38  42  ...   67   67   67   67   67   \n",
       "997      0   1   3   8  15  23  29  36  43  47  ...   61   61   60   59   59   \n",
       "998      0   1   4  10  17  23  29  35  41  46  ...   63   63   63   62   61   \n",
       "999      0   0   0   4  11  17  23  30  36  40  ...   69   68   68   68   67   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "0     68   68   68   68     62  \n",
       "9     61   61   61   61     70  \n",
       "10    61   61   60   60     79  \n",
       "11    66   66   66   65     65  \n",
       "12    68   68   68   68     70  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "992   59   59   59   58     77  \n",
       "993   66   65   64   64     76  \n",
       "997   58   57   57   56     76  \n",
       "998   60   59   58   57     76  \n",
       "999   66   65   65   64     81  \n",
       "\n",
       "[356 rows x 32 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "e7a5980f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>331.0</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.398792</td>\n",
       "      <td>4.540785</td>\n",
       "      <td>8.703927</td>\n",
       "      <td>14.492447</td>\n",
       "      <td>20.410876</td>\n",
       "      <td>26.009063</td>\n",
       "      <td>31.135952</td>\n",
       "      <td>35.658610</td>\n",
       "      <td>39.522659</td>\n",
       "      <td>...</td>\n",
       "      <td>53.175227</td>\n",
       "      <td>53.012085</td>\n",
       "      <td>52.830816</td>\n",
       "      <td>52.607251</td>\n",
       "      <td>52.314199</td>\n",
       "      <td>51.981873</td>\n",
       "      <td>51.616314</td>\n",
       "      <td>51.226586</td>\n",
       "      <td>50.673716</td>\n",
       "      <td>67.223565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5.241258</td>\n",
       "      <td>5.973730</td>\n",
       "      <td>5.233628</td>\n",
       "      <td>5.429083</td>\n",
       "      <td>5.382947</td>\n",
       "      <td>5.174815</td>\n",
       "      <td>4.907904</td>\n",
       "      <td>4.684734</td>\n",
       "      <td>4.401301</td>\n",
       "      <td>...</td>\n",
       "      <td>3.935786</td>\n",
       "      <td>4.036182</td>\n",
       "      <td>4.110049</td>\n",
       "      <td>4.176755</td>\n",
       "      <td>4.268036</td>\n",
       "      <td>4.412754</td>\n",
       "      <td>4.574724</td>\n",
       "      <td>4.758408</td>\n",
       "      <td>5.040070</td>\n",
       "      <td>12.131034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.0</td>\n",
       "      <td>-63.000000</td>\n",
       "      <td>-67.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>32.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>50.500000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>59.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>52.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>66.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>23.500000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>55.500000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>74.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.0</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>112.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  331.0  331.000000  331.000000  331.000000  331.000000  331.000000   \n",
       "mean     1.0    2.398792    4.540785    8.703927   14.492447   20.410876   \n",
       "std      0.0    5.241258    5.973730    5.233628    5.429083    5.382947   \n",
       "min      1.0  -63.000000  -67.000000    0.000000    1.000000    2.000000   \n",
       "25%      1.0    0.000000    1.000000    5.000000   11.000000   17.000000   \n",
       "50%      1.0    1.000000    4.000000    8.000000   14.000000   20.000000   \n",
       "75%      1.0    3.000000    7.000000   11.000000   18.000000   23.500000   \n",
       "max      1.0   23.000000   26.000000   30.000000   34.000000   37.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...         y22  \\\n",
       "count  331.000000  331.000000  331.000000  331.000000  ...  331.000000   \n",
       "mean    26.009063   31.135952   35.658610   39.522659  ...   53.175227   \n",
       "std      5.174815    4.907904    4.684734    4.401301  ...    3.935786   \n",
       "min      7.000000   14.000000   18.000000   22.000000  ...   44.000000   \n",
       "25%     23.000000   28.000000   33.000000   37.000000  ...   50.500000   \n",
       "50%     26.000000   31.000000   36.000000   40.000000  ...   54.000000   \n",
       "75%     29.000000   34.000000   39.000000   42.000000  ...   56.000000   \n",
       "max     41.000000   45.000000   48.000000   51.000000  ...   63.000000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000   \n",
       "mean    53.012085   52.830816   52.607251   52.314199   51.981873   51.616314   \n",
       "std      4.036182    4.110049    4.176755    4.268036    4.412754    4.574724   \n",
       "min     43.000000   42.000000   42.000000   41.000000   40.000000   39.000000   \n",
       "25%     50.000000   50.000000   50.000000   50.000000   49.000000   49.000000   \n",
       "50%     53.000000   53.000000   53.000000   53.000000   52.000000   52.000000   \n",
       "75%     56.000000   56.000000   56.000000   55.500000   55.000000   55.000000   \n",
       "max     63.000000   63.000000   63.000000   63.000000   63.000000   63.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  331.000000  331.000000  331.000000  \n",
       "mean    51.226586   50.673716   67.223565  \n",
       "std      4.758408    5.040070   12.131034  \n",
       "min     34.000000   27.000000   32.000000  \n",
       "25%     48.000000   47.000000   59.000000  \n",
       "50%     52.000000   51.000000   66.000000  \n",
       "75%     55.000000   54.000000   74.000000  \n",
       "max     63.000000   63.000000  112.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "4e938fcd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>-8</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>54</td>\n",
       "      <td>55</td>\n",
       "      <td>56</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>57</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>-4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>55</td>\n",
       "      <td>54</td>\n",
       "      <td>53</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>985</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>52</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>51</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>60</td>\n",
       "      <td>60</td>\n",
       "      <td>59</td>\n",
       "      <td>58</td>\n",
       "      <td>57</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>56</td>\n",
       "      <td>55</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>51</td>\n",
       "      <td>50</td>\n",
       "      <td>49</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>331 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "1        1   0   3   7  13  18  22  29  31  33  ...   55   54   54   54   54   \n",
       "2        1  -8   0   8  15  22  27  30  33  37  ...   54   55   56   57   57   \n",
       "7        1   7  10  13  16  20  24  29  34  38  ...   49   49   48   47   47   \n",
       "8        1  12  15  17  21  25  30  34  38  41  ...   57   57   57   57   57   \n",
       "13       1  -4   0   1   1   2   7  14  23  32  ...   59   59   59   58   57   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "985      1   0   3   6  11  17  22  27  32  36  ...   56   56   56   56   56   \n",
       "989      1   1   3   7  12  18  24  30  32  35  ...   46   45   45   45   44   \n",
       "990      1   0   2   5  10  15  20  25  30  34  ...   53   53   53   53   52   \n",
       "991      1   2   5  10  16  21  26  31  35  39  ...   60   60   59   58   57   \n",
       "996      1   1   2   5  11  17  22  28  34  39  ...   51   50   49   48   47   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "1     54   54   54   54     32  \n",
       "2     58   58   59   59     46  \n",
       "7     47   47   47   47     63  \n",
       "8     57   57   57   57     92  \n",
       "13    56   55   54   53     84  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "985   56   56   56   56     59  \n",
       "989   43   42   42   41     53  \n",
       "990   51   51   51   51     59  \n",
       "991   56   56   56   55     66  \n",
       "996   47   47   47   46     62  \n",
       "\n",
       "[331 rows x 32 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "71968bfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>258.0</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>258.00000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "      <td>258.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.0</td>\n",
       "      <td>3.077519</td>\n",
       "      <td>5.918605</td>\n",
       "      <td>11.441860</td>\n",
       "      <td>19.569767</td>\n",
       "      <td>27.317829</td>\n",
       "      <td>34.275194</td>\n",
       "      <td>40.655039</td>\n",
       "      <td>46.341085</td>\n",
       "      <td>51.383721</td>\n",
       "      <td>...</td>\n",
       "      <td>72.46124</td>\n",
       "      <td>72.441860</td>\n",
       "      <td>72.422481</td>\n",
       "      <td>72.298450</td>\n",
       "      <td>72.174419</td>\n",
       "      <td>71.984496</td>\n",
       "      <td>71.790698</td>\n",
       "      <td>71.519380</td>\n",
       "      <td>71.023256</td>\n",
       "      <td>78.236434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>8.253864</td>\n",
       "      <td>9.403884</td>\n",
       "      <td>10.308024</td>\n",
       "      <td>8.692150</td>\n",
       "      <td>8.714213</td>\n",
       "      <td>8.607178</td>\n",
       "      <td>8.320501</td>\n",
       "      <td>7.937005</td>\n",
       "      <td>7.516781</td>\n",
       "      <td>...</td>\n",
       "      <td>4.89823</td>\n",
       "      <td>4.949405</td>\n",
       "      <td>4.997645</td>\n",
       "      <td>5.046099</td>\n",
       "      <td>5.132164</td>\n",
       "      <td>5.202490</td>\n",
       "      <td>5.257826</td>\n",
       "      <td>5.358873</td>\n",
       "      <td>5.582024</td>\n",
       "      <td>13.180958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.0</td>\n",
       "      <td>-73.000000</td>\n",
       "      <td>-80.000000</td>\n",
       "      <td>-85.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>64.00000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>44.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>29.250000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>46.250000</td>\n",
       "      <td>...</td>\n",
       "      <td>69.00000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>68.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>71.00000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>78.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>75.00000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>74.750000</td>\n",
       "      <td>87.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.0</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>97.00000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>110.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust          y1          y2          y3          y4          y5  \\\n",
       "count  258.0  258.000000  258.000000  258.000000  258.000000  258.000000   \n",
       "mean     2.0    3.077519    5.918605   11.441860   19.569767   27.317829   \n",
       "std      0.0    8.253864    9.403884   10.308024    8.692150    8.714213   \n",
       "min      2.0  -73.000000  -80.000000  -85.000000    0.000000    0.000000   \n",
       "25%      2.0    0.000000    1.000000    7.000000   14.000000   22.000000   \n",
       "50%      2.0    1.000000    4.000000   11.000000   19.000000   27.000000   \n",
       "75%      2.0    4.000000    8.000000   15.000000   23.000000   31.000000   \n",
       "max      2.0   50.000000   57.000000   63.000000   68.000000   71.000000   \n",
       "\n",
       "               y6          y7          y8          y9  ...        y22  \\\n",
       "count  258.000000  258.000000  258.000000  258.000000  ...  258.00000   \n",
       "mean    34.275194   40.655039   46.341085   51.383721  ...   72.46124   \n",
       "std      8.607178    8.320501    7.937005    7.516781  ...    4.89823   \n",
       "min      3.000000   11.000000   19.000000   23.000000  ...   64.00000   \n",
       "25%     29.250000   36.000000   41.000000   46.250000  ...   69.00000   \n",
       "50%     34.000000   41.000000   46.000000   51.000000  ...   71.00000   \n",
       "75%     38.000000   45.000000   50.000000   55.000000  ...   75.00000   \n",
       "max     72.000000   73.000000   74.000000   74.000000  ...   97.00000   \n",
       "\n",
       "              y23         y24         y25         y26         y27         y28  \\\n",
       "count  258.000000  258.000000  258.000000  258.000000  258.000000  258.000000   \n",
       "mean    72.441860   72.422481   72.298450   72.174419   71.984496   71.790698   \n",
       "std      4.949405    4.997645    5.046099    5.132164    5.202490    5.257826   \n",
       "min     64.000000   64.000000   64.000000   64.000000   64.000000   64.000000   \n",
       "25%     69.000000   69.000000   69.000000   69.000000   68.000000   68.000000   \n",
       "50%     71.000000   71.000000   71.000000   71.000000   71.000000   71.000000   \n",
       "75%     75.000000   75.000000   75.000000   75.000000   75.000000   75.000000   \n",
       "max     98.000000   98.000000   98.000000   99.000000  100.000000  101.000000   \n",
       "\n",
       "              y29         y30       label  \n",
       "count  258.000000  258.000000  258.000000  \n",
       "mean    71.519380   71.023256   78.236434  \n",
       "std      5.358873    5.582024   13.180958  \n",
       "min     63.000000   55.000000   44.000000  \n",
       "25%     68.000000   67.000000   68.250000  \n",
       "50%     70.000000   70.000000   78.500000  \n",
       "75%     75.000000   74.750000   87.000000  \n",
       "max    101.000000  101.000000  110.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list2.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "503ac53d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>34</td>\n",
       "      <td>40</td>\n",
       "      <td>48</td>\n",
       "      <td>54</td>\n",
       "      <td>59</td>\n",
       "      <td>64</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>65</td>\n",
       "      <td>65</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>43</td>\n",
       "      <td>48</td>\n",
       "      <td>52</td>\n",
       "      <td>56</td>\n",
       "      <td>60</td>\n",
       "      <td>...</td>\n",
       "      <td>76</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>74</td>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "      <td>35</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>50</td>\n",
       "      <td>56</td>\n",
       "      <td>61</td>\n",
       "      <td>65</td>\n",
       "      <td>69</td>\n",
       "      <td>...</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>75</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>36</td>\n",
       "      <td>44</td>\n",
       "      <td>52</td>\n",
       "      <td>61</td>\n",
       "      <td>68</td>\n",
       "      <td>...</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>88</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>38</td>\n",
       "      <td>44</td>\n",
       "      <td>49</td>\n",
       "      <td>...</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>981</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>21</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>40</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>66</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>33</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>66</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>29</td>\n",
       "      <td>35</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>73</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>17</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>36</td>\n",
       "      <td>41</td>\n",
       "      <td>46</td>\n",
       "      <td>...</td>\n",
       "      <td>70</td>\n",
       "      <td>69</td>\n",
       "      <td>69</td>\n",
       "      <td>68</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>67</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>42</td>\n",
       "      <td>49</td>\n",
       "      <td>56</td>\n",
       "      <td>...</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>258 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "14       2  12  19  26  34  40  48  54  59  64  ...   70   69   69   68   67   \n",
       "15       2  20  25  29  36  43  48  52  56  60  ...   76   75   75   75   75   \n",
       "16       2  28  35  39  45  50  56  61  65  69  ...   76   76   76   76   76   \n",
       "17       2   6  10  16  26  36  44  52  61  68  ...   88   88   88   88   88   \n",
       "27       2   3   6  12  18  23  28  38  44  49  ...   66   66   66   66   66   \n",
       "..     ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...   \n",
       "981      2   0   3   6  12  21  29  35  40  46  ...   67   67   67   67   67   \n",
       "987      2   0   0   2   7  14  21  27  33  41  ...   70   70   70   70   70   \n",
       "988      2   1   3   7  12  17  23  29  35  41  ...   73   73   73   73   73   \n",
       "994      2   0   1   9  17  24  30  36  41  46  ...   70   69   69   68   67   \n",
       "995      2   3   6  12  19  27  35  42  49  56  ...   79   79   79   79   79   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "14    67   66   65   65     93  \n",
       "15    75   75   75   74     85  \n",
       "16    76   76   76   75     94  \n",
       "17    88   88   88   88     98  \n",
       "27    67   67   67   66     66  \n",
       "..   ...  ...  ...  ...    ...  \n",
       "981   66   66   66   66     67  \n",
       "987   69   68   67   66     73  \n",
       "988   73   73   73   73     82  \n",
       "994   67   67   67   67     79  \n",
       "995   79   79   79   79     95  \n",
       "\n",
       "[258 rows x 32 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list2 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "b5f64702",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>54.0</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>54.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.462963</td>\n",
       "      <td>5.333333</td>\n",
       "      <td>8.833333</td>\n",
       "      <td>13.777778</td>\n",
       "      <td>18.833333</td>\n",
       "      <td>23.592593</td>\n",
       "      <td>27.574074</td>\n",
       "      <td>31.037037</td>\n",
       "      <td>33.796296</td>\n",
       "      <td>...</td>\n",
       "      <td>42.407407</td>\n",
       "      <td>42.074074</td>\n",
       "      <td>41.666667</td>\n",
       "      <td>41.407407</td>\n",
       "      <td>41.148148</td>\n",
       "      <td>40.777778</td>\n",
       "      <td>40.462963</td>\n",
       "      <td>40.074074</td>\n",
       "      <td>39.648148</td>\n",
       "      <td>64.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4.128653</td>\n",
       "      <td>4.605165</td>\n",
       "      <td>5.448732</td>\n",
       "      <td>5.833109</td>\n",
       "      <td>5.951851</td>\n",
       "      <td>6.054839</td>\n",
       "      <td>6.202866</td>\n",
       "      <td>5.958862</td>\n",
       "      <td>5.734305</td>\n",
       "      <td>...</td>\n",
       "      <td>2.993821</td>\n",
       "      <td>2.957892</td>\n",
       "      <td>2.907375</td>\n",
       "      <td>3.117319</td>\n",
       "      <td>3.158740</td>\n",
       "      <td>3.254412</td>\n",
       "      <td>3.374225</td>\n",
       "      <td>3.335639</td>\n",
       "      <td>3.354284</td>\n",
       "      <td>13.521123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.0</td>\n",
       "      <td>-5.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>42.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>9.500000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>19.250000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>38.250000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>53.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.500000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>63.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.0</td>\n",
       "      <td>5.750000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>18.750000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>71.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.0</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>105.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       clust         y1         y2         y3         y4         y5  \\\n",
       "count   54.0  54.000000  54.000000  54.000000  54.000000  54.000000   \n",
       "mean     3.0   3.462963   5.333333   8.833333  13.777778  18.833333   \n",
       "std      0.0   4.128653   4.605165   5.448732   5.833109   5.951851   \n",
       "min      3.0  -5.000000  -1.000000   0.000000   2.000000   3.000000   \n",
       "25%      3.0   0.000000   1.000000   5.000000   9.500000  15.000000   \n",
       "50%      3.0   2.500000   4.000000   8.000000  13.000000  19.000000   \n",
       "75%      3.0   5.750000   8.000000  13.000000  18.750000  23.000000   \n",
       "max      3.0  13.000000  16.000000  20.000000  25.000000  28.000000   \n",
       "\n",
       "              y6         y7         y8         y9  ...        y22        y23  \\\n",
       "count  54.000000  54.000000  54.000000  54.000000  ...  54.000000  54.000000   \n",
       "mean   23.592593  27.574074  31.037037  33.796296  ...  42.407407  42.074074   \n",
       "std     6.054839   6.202866   5.958862   5.734305  ...   2.993821   2.957892   \n",
       "min     4.000000   6.000000   8.000000  10.000000  ...  32.000000  32.000000   \n",
       "25%    19.250000  24.000000  27.000000  30.000000  ...  41.000000  40.000000   \n",
       "50%    25.000000  30.000000  33.000000  35.000000  ...  43.000000  42.500000   \n",
       "75%    28.000000  32.000000  36.000000  38.000000  ...  44.000000  44.000000   \n",
       "max    34.000000  38.000000  39.000000  41.000000  ...  48.000000  48.000000   \n",
       "\n",
       "             y24        y25        y26        y27        y28        y29  \\\n",
       "count  54.000000  54.000000  54.000000  54.000000  54.000000  54.000000   \n",
       "mean   41.666667  41.407407  41.148148  40.777778  40.462963  40.074074   \n",
       "std     2.907375   3.117319   3.158740   3.254412   3.374225   3.335639   \n",
       "min    32.000000  31.000000  31.000000  31.000000  31.000000  31.000000   \n",
       "25%    40.000000  40.000000  40.000000  39.000000  38.250000  38.000000   \n",
       "50%    42.000000  42.000000  41.000000  41.000000  41.000000  40.000000   \n",
       "75%    43.000000  43.000000  43.000000  42.000000  42.000000  42.000000   \n",
       "max    48.000000  48.000000  48.000000  48.000000  48.000000  47.000000   \n",
       "\n",
       "             y30       label  \n",
       "count  54.000000   54.000000  \n",
       "mean   39.648148   64.500000  \n",
       "std     3.354284   13.521123  \n",
       "min    31.000000   42.000000  \n",
       "25%    38.000000   53.500000  \n",
       "50%    40.000000   63.000000  \n",
       "75%    42.000000   71.000000  \n",
       "max    46.000000  105.000000  \n",
       "\n",
       "[8 rows x 32 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list3.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d226e1d3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-5</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>33</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>32</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>37</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>30</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>41</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>37</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>358</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>25</td>\n",
       "      <td>31</td>\n",
       "      <td>37</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>548</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>48</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>574</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>30</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>35</td>\n",
       "      <td>34</td>\n",
       "      <td>34</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>575</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>580</th>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>37</td>\n",
       "      <td>40</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>626</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>642</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>643</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>684</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>35</td>\n",
       "      <td>34</td>\n",
       "      <td>33</td>\n",
       "      <td>32</td>\n",
       "      <td>31</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>690</th>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>37</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>704</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>710</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>724</th>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>34</td>\n",
       "      <td>37</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>38</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>739</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>764</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>32</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>777</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>22</td>\n",
       "      <td>23</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>43</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>856</th>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>46</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>936</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>949</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>26</td>\n",
       "      <td>31</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>40</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>954</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>28</td>\n",
       "      <td>31</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>960</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>43</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>975</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>26</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>982</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>31</td>\n",
       "      <td>33</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>983</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>26</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>46</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>45</td>\n",
       "      <td>44</td>\n",
       "      <td>43</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     clust  y1  y2  y3  y4  y5  y6  y7  y8  y9  ...  y22  y23  y24  y25  y26  \\\n",
       "3        3  -5  -1   1   5  11  15  19  25  29  ...   39   39   39   38   38   \n",
       "4        3  12  15  18  22  23  25  27  29  30  ...   32   32   32   31   31   \n",
       "5        3  13  13  15  19  24  27  30  33  36  ...   37   37   37   36   36   \n",
       "6        3  11  11  13  17  20  26  31  35  38  ...   40   40   39   38   38   \n",
       "76       3   7   8   8  13  19  26  33  36  40  ...   41   40   39   39   39   \n",
       "92       3   4   7  10  16  22  28  32  35  40  ...   43   43   43   43   43   \n",
       "100      3   3   5  11  17  21  26  33  37  38  ...   44   44   44   44   44   \n",
       "101      3   6   6   8  14  19  25  32  37  38  ...   44   44   43   42   42   \n",
       "115      3   2   6  11  15  23  28  32  36  37  ...   44   44   44   44   44   \n",
       "116      3   0   0   3   8  14  21  26  31  35  ...   44   43   42   41   40   \n",
       "123      3   3   4   8  13  18  24  29  30  32  ...   40   40   40   40   40   \n",
       "140      3   3   4   9  16  22  27  31  35  38  ...   40   40   40   40   40   \n",
       "141      3   1   4   7  12  17  22  27  31  35  ...   41   40   39   39   38   \n",
       "142      3   0   1   7  12  19  25  28  32  34  ...   40   40   40   41   41   \n",
       "150      3   5   9  15  21  26  30  32  34  36  ...   39   39   39   39   39   \n",
       "158      3   0   1   5  12  19  25  28  31  32  ...   46   46   45   45   45   \n",
       "167      3   1   3   7  13  19  26  31  36  39  ...   45   44   43   43   43   \n",
       "174      3   9  13  18  23  28  34  38  39  41  ...   42   41   40   40   39   \n",
       "175      3   5   9  16  22  25  28  31  34  36  ...   45   44   43   43   42   \n",
       "227      3   0   0   0   2   3   4   6   8  10  ...   37   38   39   40   41   \n",
       "358      3  12  12  16  17  21  25  30  33  35  ...   46   46   45   45   45   \n",
       "540      3   0   3   6  11  18  25  31  37  40  ...   43   43   43   42   41   \n",
       "548      3   0   0   1   5  11  19  24  27  30  ...   44   43   42   42   41   \n",
       "557      3   0   0   0   2   5  10  14  21  27  ...   48   48   48   48   48   \n",
       "574      3   2   2   3   7  13  18  24  30  35  ...   35   34   34   33   33   \n",
       "575      3   0   1   3   6   9  12  15  18  21  ...   40   40   40   40   40   \n",
       "580      3  11  13  17  21  27  32  34  37  40  ...   43   43   43   42   41   \n",
       "626      3   0   0   1   7  11  14  17  22  28  ...   42   42   43   43   43   \n",
       "642      3   0   2   7  14  20  24  26  26  29  ...   41   41   41   41   41   \n",
       "643      3   0   0   4   8  14  19  22  25  27  ...   43   43   43   43   43   \n",
       "644      3   0   1   4   9  14  19  22  25  29  ...   42   42   42   42   42   \n",
       "663      3   6   9  14  20  25  30  33  36  39  ...   41   40   39   38   38   \n",
       "684      3   3   7  12  19  25  29  32  35  38  ...   39   38   37   36   35   \n",
       "690      3  10  14  19  23  28  31  35  37  39  ...   42   42   41   40   39   \n",
       "697      3   7  11  16  22  27  31  34  36  39  ...   43   42   42   42   42   \n",
       "704      3   0   2   6  11  19  24  28  32  34  ...   44   43   42   41   41   \n",
       "710      3   4   7  12  17  23  27  31  33  35  ...   45   45   44   44   43   \n",
       "724      3   4   8  14  19  23  28  34  37  39  ...   43   43   43   43   43   \n",
       "732      3   3   7  11  17  23  28  31  33  35  ...   42   41   40   39   39   \n",
       "733      3   5   8  13  19  24  29  33  35  36  ...   43   43   43   43   43   \n",
       "739      3   3   4   7  12  19  26  31  36  38  ...   43   42   41   41   40   \n",
       "764      3   2   5   9  16  23  28  32  36  39  ...   44   43   42   41   40   \n",
       "777      3   6   8  13  19  24  27  31  36  38  ...   43   42   41   41   41   \n",
       "789      3   8  10  11  13  15  18  18  22  23  ...   40   41   41   42   42   \n",
       "856      3  13  16  20  25  27  29  31  33  35  ...   45   45   45   45   44   \n",
       "889      3   0   0   2   8  14  20  24  27  30  ...   46   45   45   45   45   \n",
       "911      3   0   0   0   3   7  11  17  22  26  ...   47   47   47   47   47   \n",
       "936      3   0   1   5   9  15  19  23  27  30  ...   43   42   41   41   41   \n",
       "949      3   1   3   6  11  16  21  26  31  35  ...   43   43   42   41   40   \n",
       "954      3   2   3   7  13  18  23  28  31  34  ...   44   44   43   42   41   \n",
       "960      3   3   6  11  18  23  27  30  33  36  ...   43   42   42   42   42   \n",
       "975      3   1   3   7  11  15  19  23  26  29  ...   45   45   45   45   45   \n",
       "982      3   1   3   7  13  18  23  27  31  33  ...   46   45   45   45   45   \n",
       "983      3   0   1   3   7  11  17  22  26  30  ...   46   46   45   45   45   \n",
       "\n",
       "     y27  y28  y29  y30  label  \n",
       "3     38   38   37   36     59  \n",
       "4     31   31   31   31     91  \n",
       "5     35   35   35   35     48  \n",
       "6     38   38   38   38     51  \n",
       "76    38   38   38   38     75  \n",
       "92    42   42   41   41     55  \n",
       "100   43   43   43   42     70  \n",
       "101   42   42   42   41     64  \n",
       "115   44   43   42   42     65  \n",
       "116   39   38   38   38     63  \n",
       "123   40   40   39   39     68  \n",
       "140   40   39   38   38     80  \n",
       "141   37   37   36   35     49  \n",
       "142   41   41   41   41     63  \n",
       "150   39   39   38   37     55  \n",
       "158   45   44   43   43     62  \n",
       "167   42   41   40   40     47  \n",
       "174   39   38   38   39     75  \n",
       "175   41   40   40   40     43  \n",
       "227   42   43   43   43     61  \n",
       "358   45   45   44   43     63  \n",
       "540   41   40   39   38     77  \n",
       "548   40   40   40   39     72  \n",
       "557   48   48   47   46     71  \n",
       "574   33   32   32   31     96  \n",
       "575   39   38   38   38    105  \n",
       "580   41   40   39   38     89  \n",
       "626   42   42   42   41     68  \n",
       "642   41   41   41   41     57  \n",
       "643   43   43   43   43     46  \n",
       "644   42   42   42   42     53  \n",
       "663   38   37   37   36     84  \n",
       "684   34   33   32   31     60  \n",
       "690   38   37   37   36     67  \n",
       "697   41   41   41   41     83  \n",
       "704   40   40   40   40     68  \n",
       "710   42   42   41   41     74  \n",
       "724   42   41   40   39     62  \n",
       "732   38   38   37   36     64  \n",
       "733   43   43   43   43     57  \n",
       "739   40   39   39   38     64  \n",
       "764   39   39   39   39     64  \n",
       "777   41   41   41   41     50  \n",
       "789   42   42   42   43     53  \n",
       "856   43   42   41   40     80  \n",
       "889   45   45   45   44     68  \n",
       "911   47   47   47   46     71  \n",
       "936   41   41   40   39     42  \n",
       "949   39   39   39   39     51  \n",
       "954   41   41   41   41     62  \n",
       "960   42   41   41   41     63  \n",
       "975   45   45   44   43     53  \n",
       "982   45   45   45   44     53  \n",
       "983   45   45   44   43     49  \n",
       "\n",
       "[54 rows x 32 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "175a5cc2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((749, 30), (250, 30), (749, 1), (250, 1))"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=999)\n",
    "X_train.shape, X_test.shape, y_train.shape, y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f7cb6ac8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\AI\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:494: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9746328437917223\n",
      "0.928\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "\n",
    "GBC = GradientBoostingClassifier(random_state=0, max_depth=1)\n",
    "\n",
    "GBC.fit(X_train, y_train)\n",
    "\n",
    "print(GBC.score(X_train, y_train))\n",
    "print(GBC.score(X_test, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "97876e1b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# list2 = []\n",
    "# def concat2(row):\n",
    "#     list2.append(row)\n",
    "#     print(list2)\n",
    "#     return list2\n",
    "\n",
    "# concat2(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "b0ac22a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((750, 31), (250, 31), (750,), (250,))"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X3 =con.iloc[:, :-2]\n",
    "y3 =con.iloc[:, -2]\n",
    "\n",
    "X_train3, X_test3, y_train3, y_test3 = train_test_split(X3, y3, random_state=999)\n",
    "X_train3.shape, X_test3.shape, y_train3.shape, y_test3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "3c5cf4cf",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Input contains NaN, infinity or a value too large for dtype('float32').",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[1;32mIn [130]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mensemble\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m GradientBoostingRegressor\n\u001b[0;32m      3\u001b[0m GBC3 \u001b[38;5;241m=\u001b[39m GradientBoostingRegressor()\n\u001b[1;32m----> 4\u001b[0m \u001b[43mGBC3\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX_train3\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_train3\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(GBC3\u001b[38;5;241m.\u001b[39mscore(X_train3, y_train3))\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28mprint\u001b[39m(GBC3\u001b[38;5;241m.\u001b[39mscore(X_test3, y_test3))\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\_gb.py:486\u001b[0m, in \u001b[0;36mBaseGradientBoosting.fit\u001b[1;34m(self, X, y, sample_weight, monitor)\u001b[0m\n\u001b[0;32m    480\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_clear_state()\n\u001b[0;32m    482\u001b[0m \u001b[38;5;66;03m# Check input\u001b[39;00m\n\u001b[0;32m    483\u001b[0m \u001b[38;5;66;03m# Since check_array converts both X and y to the same dtype, but the\u001b[39;00m\n\u001b[0;32m    484\u001b[0m \u001b[38;5;66;03m# trees use different types for X and y, checking them separately.\u001b[39;00m\n\u001b[1;32m--> 486\u001b[0m X, y \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_validate_data\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    487\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maccept_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcsr\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcsc\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcoo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mDTYPE\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmulti_output\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\n\u001b[0;32m    488\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    490\u001b[0m sample_weight_is_none \u001b[38;5;241m=\u001b[39m sample_weight \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m    492\u001b[0m sample_weight \u001b[38;5;241m=\u001b[39m _check_sample_weight(sample_weight, X)\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\base.py:581\u001b[0m, in \u001b[0;36mBaseEstimator._validate_data\u001b[1;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[0;32m    579\u001b[0m         y \u001b[38;5;241m=\u001b[39m check_array(y, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_y_params)\n\u001b[0;32m    580\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 581\u001b[0m         X, y \u001b[38;5;241m=\u001b[39m check_X_y(X, y, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_params)\n\u001b[0;32m    582\u001b[0m     out \u001b[38;5;241m=\u001b[39m X, y\n\u001b[0;32m    584\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m check_params\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mensure_2d\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mTrue\u001b[39;00m):\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\utils\\validation.py:964\u001b[0m, in \u001b[0;36mcheck_X_y\u001b[1;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[0;32m    961\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m    962\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my cannot be None\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m--> 964\u001b[0m X \u001b[38;5;241m=\u001b[39m \u001b[43mcheck_array\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    965\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    966\u001b[0m \u001b[43m    \u001b[49m\u001b[43maccept_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maccept_sparse\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    967\u001b[0m \u001b[43m    \u001b[49m\u001b[43maccept_large_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maccept_large_sparse\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    968\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    969\u001b[0m \u001b[43m    \u001b[49m\u001b[43morder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43morder\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    970\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    971\u001b[0m \u001b[43m    \u001b[49m\u001b[43mforce_all_finite\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mforce_all_finite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    972\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_2d\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_2d\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    973\u001b[0m \u001b[43m    \u001b[49m\u001b[43mallow_nd\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mallow_nd\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    974\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_min_samples\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_min_samples\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    975\u001b[0m \u001b[43m    \u001b[49m\u001b[43mensure_min_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mensure_min_features\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    976\u001b[0m \u001b[43m    \u001b[49m\u001b[43mestimator\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mestimator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    977\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    979\u001b[0m y \u001b[38;5;241m=\u001b[39m _check_y(y, multi_output\u001b[38;5;241m=\u001b[39mmulti_output, y_numeric\u001b[38;5;241m=\u001b[39my_numeric)\n\u001b[0;32m    981\u001b[0m check_consistent_length(X, y)\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\utils\\validation.py:800\u001b[0m, in \u001b[0;36mcheck_array\u001b[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)\u001b[0m\n\u001b[0;32m    794\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    795\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFound array with dim \u001b[39m\u001b[38;5;132;01m%d\u001b[39;00m\u001b[38;5;124m. \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m expected <= 2.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    796\u001b[0m             \u001b[38;5;241m%\u001b[39m (array\u001b[38;5;241m.\u001b[39mndim, estimator_name)\n\u001b[0;32m    797\u001b[0m         )\n\u001b[0;32m    799\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m force_all_finite:\n\u001b[1;32m--> 800\u001b[0m         \u001b[43m_assert_all_finite\u001b[49m\u001b[43m(\u001b[49m\u001b[43marray\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mallow_nan\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mforce_all_finite\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mallow-nan\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m    802\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m ensure_min_samples \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m    803\u001b[0m     n_samples \u001b[38;5;241m=\u001b[39m _num_samples(array)\n",
      "File \u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\utils\\validation.py:114\u001b[0m, in \u001b[0;36m_assert_all_finite\u001b[1;34m(X, allow_nan, msg_dtype)\u001b[0m\n\u001b[0;32m    107\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m (\n\u001b[0;32m    108\u001b[0m         allow_nan\n\u001b[0;32m    109\u001b[0m         \u001b[38;5;129;01mand\u001b[39;00m np\u001b[38;5;241m.\u001b[39misinf(X)\u001b[38;5;241m.\u001b[39many()\n\u001b[0;32m    110\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m allow_nan\n\u001b[0;32m    111\u001b[0m         \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m np\u001b[38;5;241m.\u001b[39misfinite(X)\u001b[38;5;241m.\u001b[39mall()\n\u001b[0;32m    112\u001b[0m     ):\n\u001b[0;32m    113\u001b[0m         type_err \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minfinity\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m allow_nan \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNaN, infinity\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m--> 114\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    115\u001b[0m             msg_err\u001b[38;5;241m.\u001b[39mformat(\n\u001b[0;32m    116\u001b[0m                 type_err, msg_dtype \u001b[38;5;28;01mif\u001b[39;00m msg_dtype \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m X\u001b[38;5;241m.\u001b[39mdtype\n\u001b[0;32m    117\u001b[0m             )\n\u001b[0;32m    118\u001b[0m         )\n\u001b[0;32m    119\u001b[0m \u001b[38;5;66;03m# for object dtype data, we only check for NaNs (GH-13254)\u001b[39;00m\n\u001b[0;32m    120\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m X\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m==\u001b[39m np\u001b[38;5;241m.\u001b[39mdtype(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mobject\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m allow_nan:\n",
      "\u001b[1;31mValueError\u001b[0m: Input contains NaN, infinity or a value too large for dtype('float32')."
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingRegressor\n",
    "\n",
    "GBC3 = GradientBoostingRegressor()\n",
    "GBC3.fit(X_train3, y_train3)\n",
    "\n",
    "print(GBC3.score(X_train3, y_train3))\n",
    "print(GBC3.score(X_test3, y_test3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "10747a63",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>clust</th>\n",
       "      <th>y1</th>\n",
       "      <th>y2</th>\n",
       "      <th>y3</th>\n",
       "      <th>y4</th>\n",
       "      <th>y5</th>\n",
       "      <th>y6</th>\n",
       "      <th>y7</th>\n",
       "      <th>y8</th>\n",
       "      <th>y9</th>\n",
       "      <th>...</th>\n",
       "      <th>y22</th>\n",
       "      <th>y23</th>\n",
       "      <th>y24</th>\n",
       "      <th>y25</th>\n",
       "      <th>y26</th>\n",
       "      <th>y27</th>\n",
       "      <th>y28</th>\n",
       "      <th>y29</th>\n",
       "      <th>y30</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>clust</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.138440</td>\n",
       "      <td>-0.131670</td>\n",
       "      <td>-0.109118</td>\n",
       "      <td>-0.060560</td>\n",
       "      <td>-0.033800</td>\n",
       "      <td>-0.015959</td>\n",
       "      <td>0.013532</td>\n",
       "      <td>0.029720</td>\n",
       "      <td>0.045737</td>\n",
       "      <td>...</td>\n",
       "      <td>0.054752</td>\n",
       "      <td>0.052491</td>\n",
       "      <td>0.052104</td>\n",
       "      <td>0.051631</td>\n",
       "      <td>0.054613</td>\n",
       "      <td>0.054829</td>\n",
       "      <td>0.056519</td>\n",
       "      <td>0.058045</td>\n",
       "      <td>0.051365</td>\n",
       "      <td>0.071537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y1</th>\n",
       "      <td>-0.138440</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.978751</td>\n",
       "      <td>0.883588</td>\n",
       "      <td>0.704674</td>\n",
       "      <td>0.638007</td>\n",
       "      <td>0.576251</td>\n",
       "      <td>0.388102</td>\n",
       "      <td>0.316000</td>\n",
       "      <td>0.217886</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.039209</td>\n",
       "      <td>-0.037238</td>\n",
       "      <td>-0.036767</td>\n",
       "      <td>-0.035015</td>\n",
       "      <td>-0.034203</td>\n",
       "      <td>-0.034179</td>\n",
       "      <td>-0.036656</td>\n",
       "      <td>-0.037368</td>\n",
       "      <td>-0.031609</td>\n",
       "      <td>0.073813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y2</th>\n",
       "      <td>-0.131670</td>\n",
       "      <td>0.978751</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.935573</td>\n",
       "      <td>0.782544</td>\n",
       "      <td>0.720951</td>\n",
       "      <td>0.660986</td>\n",
       "      <td>0.484906</td>\n",
       "      <td>0.409866</td>\n",
       "      <td>0.309173</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.018259</td>\n",
       "      <td>-0.018059</td>\n",
       "      <td>-0.019142</td>\n",
       "      <td>-0.018944</td>\n",
       "      <td>-0.019995</td>\n",
       "      <td>-0.021218</td>\n",
       "      <td>-0.025320</td>\n",
       "      <td>-0.027826</td>\n",
       "      <td>-0.023056</td>\n",
       "      <td>0.103461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y3</th>\n",
       "      <td>-0.109118</td>\n",
       "      <td>0.883588</td>\n",
       "      <td>0.935573</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.887771</td>\n",
       "      <td>0.833800</td>\n",
       "      <td>0.773929</td>\n",
       "      <td>0.608719</td>\n",
       "      <td>0.533323</td>\n",
       "      <td>0.432197</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036314</td>\n",
       "      <td>0.034673</td>\n",
       "      <td>0.031714</td>\n",
       "      <td>0.030245</td>\n",
       "      <td>0.026971</td>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.017742</td>\n",
       "      <td>0.013436</td>\n",
       "      <td>0.016161</td>\n",
       "      <td>0.157020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y4</th>\n",
       "      <td>-0.060560</td>\n",
       "      <td>0.704674</td>\n",
       "      <td>0.782544</td>\n",
       "      <td>0.887771</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.977791</td>\n",
       "      <td>0.931728</td>\n",
       "      <td>0.787036</td>\n",
       "      <td>0.719699</td>\n",
       "      <td>0.624749</td>\n",
       "      <td>...</td>\n",
       "      <td>0.166106</td>\n",
       "      <td>0.161841</td>\n",
       "      <td>0.155913</td>\n",
       "      <td>0.151814</td>\n",
       "      <td>0.145532</td>\n",
       "      <td>0.140444</td>\n",
       "      <td>0.130852</td>\n",
       "      <td>0.122168</td>\n",
       "      <td>0.119636</td>\n",
       "      <td>0.220284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y5</th>\n",
       "      <td>-0.033800</td>\n",
       "      <td>0.638007</td>\n",
       "      <td>0.720951</td>\n",
       "      <td>0.833800</td>\n",
       "      <td>0.977791</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.979287</td>\n",
       "      <td>0.862713</td>\n",
       "      <td>0.807161</td>\n",
       "      <td>0.723227</td>\n",
       "      <td>...</td>\n",
       "      <td>0.258303</td>\n",
       "      <td>0.251983</td>\n",
       "      <td>0.244776</td>\n",
       "      <td>0.239354</td>\n",
       "      <td>0.231606</td>\n",
       "      <td>0.225430</td>\n",
       "      <td>0.213928</td>\n",
       "      <td>0.203413</td>\n",
       "      <td>0.199248</td>\n",
       "      <td>0.252137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y6</th>\n",
       "      <td>-0.015959</td>\n",
       "      <td>0.576251</td>\n",
       "      <td>0.660986</td>\n",
       "      <td>0.773929</td>\n",
       "      <td>0.931728</td>\n",
       "      <td>0.979287</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.918696</td>\n",
       "      <td>0.876334</td>\n",
       "      <td>0.805015</td>\n",
       "      <td>...</td>\n",
       "      <td>0.343269</td>\n",
       "      <td>0.335645</td>\n",
       "      <td>0.327575</td>\n",
       "      <td>0.321100</td>\n",
       "      <td>0.312587</td>\n",
       "      <td>0.305611</td>\n",
       "      <td>0.292805</td>\n",
       "      <td>0.280824</td>\n",
       "      <td>0.275433</td>\n",
       "      <td>0.280928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y7</th>\n",
       "      <td>0.013532</td>\n",
       "      <td>0.388102</td>\n",
       "      <td>0.484906</td>\n",
       "      <td>0.608719</td>\n",
       "      <td>0.787036</td>\n",
       "      <td>0.862713</td>\n",
       "      <td>0.918696</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.983479</td>\n",
       "      <td>0.927569</td>\n",
       "      <td>...</td>\n",
       "      <td>0.423079</td>\n",
       "      <td>0.412514</td>\n",
       "      <td>0.402603</td>\n",
       "      <td>0.394714</td>\n",
       "      <td>0.385048</td>\n",
       "      <td>0.377024</td>\n",
       "      <td>0.362956</td>\n",
       "      <td>0.349006</td>\n",
       "      <td>0.341126</td>\n",
       "      <td>0.338358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y8</th>\n",
       "      <td>0.029720</td>\n",
       "      <td>0.316000</td>\n",
       "      <td>0.409866</td>\n",
       "      <td>0.533323</td>\n",
       "      <td>0.719699</td>\n",
       "      <td>0.807161</td>\n",
       "      <td>0.876334</td>\n",
       "      <td>0.983479</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.966235</td>\n",
       "      <td>...</td>\n",
       "      <td>0.508753</td>\n",
       "      <td>0.497906</td>\n",
       "      <td>0.487651</td>\n",
       "      <td>0.478954</td>\n",
       "      <td>0.468829</td>\n",
       "      <td>0.460252</td>\n",
       "      <td>0.444904</td>\n",
       "      <td>0.429711</td>\n",
       "      <td>0.420350</td>\n",
       "      <td>0.366643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y9</th>\n",
       "      <td>0.045737</td>\n",
       "      <td>0.217886</td>\n",
       "      <td>0.309173</td>\n",
       "      <td>0.432197</td>\n",
       "      <td>0.624749</td>\n",
       "      <td>0.723227</td>\n",
       "      <td>0.805015</td>\n",
       "      <td>0.927569</td>\n",
       "      <td>0.966235</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.599847</td>\n",
       "      <td>0.588053</td>\n",
       "      <td>0.577421</td>\n",
       "      <td>0.567876</td>\n",
       "      <td>0.556848</td>\n",
       "      <td>0.547591</td>\n",
       "      <td>0.531322</td>\n",
       "      <td>0.514651</td>\n",
       "      <td>0.503821</td>\n",
       "      <td>0.388144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y10</th>\n",
       "      <td>0.053120</td>\n",
       "      <td>0.161592</td>\n",
       "      <td>0.246035</td>\n",
       "      <td>0.364220</td>\n",
       "      <td>0.560373</td>\n",
       "      <td>0.664173</td>\n",
       "      <td>0.753229</td>\n",
       "      <td>0.880000</td>\n",
       "      <td>0.933065</td>\n",
       "      <td>0.985840</td>\n",
       "      <td>...</td>\n",
       "      <td>0.685995</td>\n",
       "      <td>0.674620</td>\n",
       "      <td>0.664145</td>\n",
       "      <td>0.654339</td>\n",
       "      <td>0.643205</td>\n",
       "      <td>0.633683</td>\n",
       "      <td>0.616845</td>\n",
       "      <td>0.599392</td>\n",
       "      <td>0.587530</td>\n",
       "      <td>0.399163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y11</th>\n",
       "      <td>0.059291</td>\n",
       "      <td>0.112239</td>\n",
       "      <td>0.188201</td>\n",
       "      <td>0.298982</td>\n",
       "      <td>0.493611</td>\n",
       "      <td>0.602133</td>\n",
       "      <td>0.696306</td>\n",
       "      <td>0.824522</td>\n",
       "      <td>0.887810</td>\n",
       "      <td>0.954264</td>\n",
       "      <td>...</td>\n",
       "      <td>0.756700</td>\n",
       "      <td>0.745708</td>\n",
       "      <td>0.735225</td>\n",
       "      <td>0.725342</td>\n",
       "      <td>0.714229</td>\n",
       "      <td>0.704565</td>\n",
       "      <td>0.687858</td>\n",
       "      <td>0.670282</td>\n",
       "      <td>0.657479</td>\n",
       "      <td>0.408133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y12</th>\n",
       "      <td>0.063156</td>\n",
       "      <td>0.065924</td>\n",
       "      <td>0.133897</td>\n",
       "      <td>0.237616</td>\n",
       "      <td>0.431574</td>\n",
       "      <td>0.542546</td>\n",
       "      <td>0.639225</td>\n",
       "      <td>0.764422</td>\n",
       "      <td>0.836548</td>\n",
       "      <td>0.913324</td>\n",
       "      <td>...</td>\n",
       "      <td>0.820903</td>\n",
       "      <td>0.810823</td>\n",
       "      <td>0.800935</td>\n",
       "      <td>0.791516</td>\n",
       "      <td>0.780991</td>\n",
       "      <td>0.771324</td>\n",
       "      <td>0.755406</td>\n",
       "      <td>0.738131</td>\n",
       "      <td>0.724945</td>\n",
       "      <td>0.404281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y13</th>\n",
       "      <td>0.067838</td>\n",
       "      <td>0.025361</td>\n",
       "      <td>0.085492</td>\n",
       "      <td>0.182330</td>\n",
       "      <td>0.373271</td>\n",
       "      <td>0.485817</td>\n",
       "      <td>0.583469</td>\n",
       "      <td>0.704122</td>\n",
       "      <td>0.782345</td>\n",
       "      <td>0.866593</td>\n",
       "      <td>...</td>\n",
       "      <td>0.873718</td>\n",
       "      <td>0.864548</td>\n",
       "      <td>0.855488</td>\n",
       "      <td>0.846597</td>\n",
       "      <td>0.836627</td>\n",
       "      <td>0.827107</td>\n",
       "      <td>0.811746</td>\n",
       "      <td>0.794838</td>\n",
       "      <td>0.781599</td>\n",
       "      <td>0.398942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y14</th>\n",
       "      <td>0.068875</td>\n",
       "      <td>-0.002779</td>\n",
       "      <td>0.050010</td>\n",
       "      <td>0.139751</td>\n",
       "      <td>0.320151</td>\n",
       "      <td>0.432397</td>\n",
       "      <td>0.530052</td>\n",
       "      <td>0.646044</td>\n",
       "      <td>0.727931</td>\n",
       "      <td>0.818237</td>\n",
       "      <td>...</td>\n",
       "      <td>0.911944</td>\n",
       "      <td>0.903719</td>\n",
       "      <td>0.895706</td>\n",
       "      <td>0.887556</td>\n",
       "      <td>0.878386</td>\n",
       "      <td>0.869276</td>\n",
       "      <td>0.854439</td>\n",
       "      <td>0.837906</td>\n",
       "      <td>0.825155</td>\n",
       "      <td>0.387695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y15</th>\n",
       "      <td>0.069536</td>\n",
       "      <td>-0.023824</td>\n",
       "      <td>0.020942</td>\n",
       "      <td>0.102530</td>\n",
       "      <td>0.272143</td>\n",
       "      <td>0.382243</td>\n",
       "      <td>0.478661</td>\n",
       "      <td>0.589356</td>\n",
       "      <td>0.674859</td>\n",
       "      <td>0.769345</td>\n",
       "      <td>...</td>\n",
       "      <td>0.942088</td>\n",
       "      <td>0.935016</td>\n",
       "      <td>0.928010</td>\n",
       "      <td>0.920661</td>\n",
       "      <td>0.912398</td>\n",
       "      <td>0.903451</td>\n",
       "      <td>0.889303</td>\n",
       "      <td>0.873173</td>\n",
       "      <td>0.860921</td>\n",
       "      <td>0.373113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y16</th>\n",
       "      <td>0.062996</td>\n",
       "      <td>-0.037710</td>\n",
       "      <td>0.000530</td>\n",
       "      <td>0.074682</td>\n",
       "      <td>0.237155</td>\n",
       "      <td>0.343640</td>\n",
       "      <td>0.437992</td>\n",
       "      <td>0.541267</td>\n",
       "      <td>0.628423</td>\n",
       "      <td>0.724853</td>\n",
       "      <td>...</td>\n",
       "      <td>0.963355</td>\n",
       "      <td>0.957231</td>\n",
       "      <td>0.951362</td>\n",
       "      <td>0.944973</td>\n",
       "      <td>0.937680</td>\n",
       "      <td>0.929453</td>\n",
       "      <td>0.916176</td>\n",
       "      <td>0.900491</td>\n",
       "      <td>0.889031</td>\n",
       "      <td>0.357049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y17</th>\n",
       "      <td>0.057253</td>\n",
       "      <td>-0.045933</td>\n",
       "      <td>-0.012258</td>\n",
       "      <td>0.055643</td>\n",
       "      <td>0.210260</td>\n",
       "      <td>0.313954</td>\n",
       "      <td>0.406258</td>\n",
       "      <td>0.504149</td>\n",
       "      <td>0.591767</td>\n",
       "      <td>0.688221</td>\n",
       "      <td>...</td>\n",
       "      <td>0.977196</td>\n",
       "      <td>0.971876</td>\n",
       "      <td>0.966845</td>\n",
       "      <td>0.961306</td>\n",
       "      <td>0.954749</td>\n",
       "      <td>0.946908</td>\n",
       "      <td>0.934300</td>\n",
       "      <td>0.919067</td>\n",
       "      <td>0.908559</td>\n",
       "      <td>0.342403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y18</th>\n",
       "      <td>0.056758</td>\n",
       "      <td>-0.045152</td>\n",
       "      <td>-0.015599</td>\n",
       "      <td>0.047848</td>\n",
       "      <td>0.194037</td>\n",
       "      <td>0.294774</td>\n",
       "      <td>0.385222</td>\n",
       "      <td>0.477943</td>\n",
       "      <td>0.564949</td>\n",
       "      <td>0.660317</td>\n",
       "      <td>...</td>\n",
       "      <td>0.986241</td>\n",
       "      <td>0.981551</td>\n",
       "      <td>0.977213</td>\n",
       "      <td>0.972480</td>\n",
       "      <td>0.966601</td>\n",
       "      <td>0.959430</td>\n",
       "      <td>0.947515</td>\n",
       "      <td>0.933101</td>\n",
       "      <td>0.923522</td>\n",
       "      <td>0.335651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y19</th>\n",
       "      <td>0.055012</td>\n",
       "      <td>-0.044697</td>\n",
       "      <td>-0.018045</td>\n",
       "      <td>0.042033</td>\n",
       "      <td>0.182626</td>\n",
       "      <td>0.280291</td>\n",
       "      <td>0.368997</td>\n",
       "      <td>0.456588</td>\n",
       "      <td>0.543312</td>\n",
       "      <td>0.637475</td>\n",
       "      <td>...</td>\n",
       "      <td>0.992660</td>\n",
       "      <td>0.988895</td>\n",
       "      <td>0.985188</td>\n",
       "      <td>0.981234</td>\n",
       "      <td>0.976096</td>\n",
       "      <td>0.969483</td>\n",
       "      <td>0.958336</td>\n",
       "      <td>0.944621</td>\n",
       "      <td>0.935769</td>\n",
       "      <td>0.329484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y20</th>\n",
       "      <td>0.054750</td>\n",
       "      <td>-0.044576</td>\n",
       "      <td>-0.019799</td>\n",
       "      <td>0.038149</td>\n",
       "      <td>0.174971</td>\n",
       "      <td>0.270958</td>\n",
       "      <td>0.358381</td>\n",
       "      <td>0.443013</td>\n",
       "      <td>0.529324</td>\n",
       "      <td>0.622503</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996401</td>\n",
       "      <td>0.993398</td>\n",
       "      <td>0.990309</td>\n",
       "      <td>0.986834</td>\n",
       "      <td>0.982233</td>\n",
       "      <td>0.975911</td>\n",
       "      <td>0.965349</td>\n",
       "      <td>0.951818</td>\n",
       "      <td>0.943551</td>\n",
       "      <td>0.326549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y21</th>\n",
       "      <td>0.054976</td>\n",
       "      <td>-0.042189</td>\n",
       "      <td>-0.019793</td>\n",
       "      <td>0.035674</td>\n",
       "      <td>0.168613</td>\n",
       "      <td>0.262944</td>\n",
       "      <td>0.349131</td>\n",
       "      <td>0.431446</td>\n",
       "      <td>0.517431</td>\n",
       "      <td>0.609485</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998757</td>\n",
       "      <td>0.996563</td>\n",
       "      <td>0.993792</td>\n",
       "      <td>0.990812</td>\n",
       "      <td>0.986515</td>\n",
       "      <td>0.980559</td>\n",
       "      <td>0.970573</td>\n",
       "      <td>0.957274</td>\n",
       "      <td>0.949287</td>\n",
       "      <td>0.322404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y22</th>\n",
       "      <td>0.054752</td>\n",
       "      <td>-0.039209</td>\n",
       "      <td>-0.018259</td>\n",
       "      <td>0.036314</td>\n",
       "      <td>0.166106</td>\n",
       "      <td>0.258303</td>\n",
       "      <td>0.343269</td>\n",
       "      <td>0.423079</td>\n",
       "      <td>0.508753</td>\n",
       "      <td>0.599847</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998713</td>\n",
       "      <td>0.996658</td>\n",
       "      <td>0.994062</td>\n",
       "      <td>0.990337</td>\n",
       "      <td>0.984770</td>\n",
       "      <td>0.975576</td>\n",
       "      <td>0.962842</td>\n",
       "      <td>0.955354</td>\n",
       "      <td>0.323549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y23</th>\n",
       "      <td>0.052491</td>\n",
       "      <td>-0.037238</td>\n",
       "      <td>-0.018059</td>\n",
       "      <td>0.034673</td>\n",
       "      <td>0.161841</td>\n",
       "      <td>0.251983</td>\n",
       "      <td>0.335645</td>\n",
       "      <td>0.412514</td>\n",
       "      <td>0.497906</td>\n",
       "      <td>0.588053</td>\n",
       "      <td>...</td>\n",
       "      <td>0.998713</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998755</td>\n",
       "      <td>0.996790</td>\n",
       "      <td>0.993637</td>\n",
       "      <td>0.988800</td>\n",
       "      <td>0.980416</td>\n",
       "      <td>0.968166</td>\n",
       "      <td>0.960967</td>\n",
       "      <td>0.319676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y24</th>\n",
       "      <td>0.052104</td>\n",
       "      <td>-0.036767</td>\n",
       "      <td>-0.019142</td>\n",
       "      <td>0.031714</td>\n",
       "      <td>0.155913</td>\n",
       "      <td>0.244776</td>\n",
       "      <td>0.327575</td>\n",
       "      <td>0.402603</td>\n",
       "      <td>0.487651</td>\n",
       "      <td>0.577421</td>\n",
       "      <td>...</td>\n",
       "      <td>0.996658</td>\n",
       "      <td>0.998755</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998827</td>\n",
       "      <td>0.996595</td>\n",
       "      <td>0.992605</td>\n",
       "      <td>0.985392</td>\n",
       "      <td>0.973768</td>\n",
       "      <td>0.966866</td>\n",
       "      <td>0.318176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y25</th>\n",
       "      <td>0.051631</td>\n",
       "      <td>-0.035015</td>\n",
       "      <td>-0.018944</td>\n",
       "      <td>0.030245</td>\n",
       "      <td>0.151814</td>\n",
       "      <td>0.239354</td>\n",
       "      <td>0.321100</td>\n",
       "      <td>0.394714</td>\n",
       "      <td>0.478954</td>\n",
       "      <td>0.567876</td>\n",
       "      <td>...</td>\n",
       "      <td>0.994062</td>\n",
       "      <td>0.996790</td>\n",
       "      <td>0.998827</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998695</td>\n",
       "      <td>0.995667</td>\n",
       "      <td>0.989470</td>\n",
       "      <td>0.978571</td>\n",
       "      <td>0.971919</td>\n",
       "      <td>0.314419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y26</th>\n",
       "      <td>0.054613</td>\n",
       "      <td>-0.034203</td>\n",
       "      <td>-0.019995</td>\n",
       "      <td>0.026971</td>\n",
       "      <td>0.145532</td>\n",
       "      <td>0.231606</td>\n",
       "      <td>0.312587</td>\n",
       "      <td>0.385048</td>\n",
       "      <td>0.468829</td>\n",
       "      <td>0.556848</td>\n",
       "      <td>...</td>\n",
       "      <td>0.990337</td>\n",
       "      <td>0.993637</td>\n",
       "      <td>0.996595</td>\n",
       "      <td>0.998695</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998202</td>\n",
       "      <td>0.993525</td>\n",
       "      <td>0.983826</td>\n",
       "      <td>0.977562</td>\n",
       "      <td>0.310231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y27</th>\n",
       "      <td>0.054829</td>\n",
       "      <td>-0.034179</td>\n",
       "      <td>-0.021218</td>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.140444</td>\n",
       "      <td>0.225430</td>\n",
       "      <td>0.305611</td>\n",
       "      <td>0.377024</td>\n",
       "      <td>0.460252</td>\n",
       "      <td>0.547591</td>\n",
       "      <td>...</td>\n",
       "      <td>0.984770</td>\n",
       "      <td>0.988800</td>\n",
       "      <td>0.992605</td>\n",
       "      <td>0.995667</td>\n",
       "      <td>0.998202</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.997604</td>\n",
       "      <td>0.990020</td>\n",
       "      <td>0.984084</td>\n",
       "      <td>0.306825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y28</th>\n",
       "      <td>0.056519</td>\n",
       "      <td>-0.036656</td>\n",
       "      <td>-0.025320</td>\n",
       "      <td>0.017742</td>\n",
       "      <td>0.130852</td>\n",
       "      <td>0.213928</td>\n",
       "      <td>0.292805</td>\n",
       "      <td>0.362956</td>\n",
       "      <td>0.444904</td>\n",
       "      <td>0.531322</td>\n",
       "      <td>...</td>\n",
       "      <td>0.975576</td>\n",
       "      <td>0.980416</td>\n",
       "      <td>0.985392</td>\n",
       "      <td>0.989470</td>\n",
       "      <td>0.993525</td>\n",
       "      <td>0.997604</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.994597</td>\n",
       "      <td>0.989185</td>\n",
       "      <td>0.301731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y29</th>\n",
       "      <td>0.058045</td>\n",
       "      <td>-0.037368</td>\n",
       "      <td>-0.027826</td>\n",
       "      <td>0.013436</td>\n",
       "      <td>0.122168</td>\n",
       "      <td>0.203413</td>\n",
       "      <td>0.280824</td>\n",
       "      <td>0.349006</td>\n",
       "      <td>0.429711</td>\n",
       "      <td>0.514651</td>\n",
       "      <td>...</td>\n",
       "      <td>0.962842</td>\n",
       "      <td>0.968166</td>\n",
       "      <td>0.973768</td>\n",
       "      <td>0.978571</td>\n",
       "      <td>0.983826</td>\n",
       "      <td>0.990020</td>\n",
       "      <td>0.994597</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.996769</td>\n",
       "      <td>0.304244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y30</th>\n",
       "      <td>0.051365</td>\n",
       "      <td>-0.031609</td>\n",
       "      <td>-0.023056</td>\n",
       "      <td>0.016161</td>\n",
       "      <td>0.119636</td>\n",
       "      <td>0.199248</td>\n",
       "      <td>0.275433</td>\n",
       "      <td>0.341126</td>\n",
       "      <td>0.420350</td>\n",
       "      <td>0.503821</td>\n",
       "      <td>...</td>\n",
       "      <td>0.955354</td>\n",
       "      <td>0.960967</td>\n",
       "      <td>0.966866</td>\n",
       "      <td>0.971919</td>\n",
       "      <td>0.977562</td>\n",
       "      <td>0.984084</td>\n",
       "      <td>0.989185</td>\n",
       "      <td>0.996769</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.303507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>label</th>\n",
       "      <td>0.071537</td>\n",
       "      <td>0.073813</td>\n",
       "      <td>0.103461</td>\n",
       "      <td>0.157020</td>\n",
       "      <td>0.220284</td>\n",
       "      <td>0.252137</td>\n",
       "      <td>0.280928</td>\n",
       "      <td>0.338358</td>\n",
       "      <td>0.366643</td>\n",
       "      <td>0.388144</td>\n",
       "      <td>...</td>\n",
       "      <td>0.323549</td>\n",
       "      <td>0.319676</td>\n",
       "      <td>0.318176</td>\n",
       "      <td>0.314419</td>\n",
       "      <td>0.310231</td>\n",
       "      <td>0.306825</td>\n",
       "      <td>0.301731</td>\n",
       "      <td>0.304244</td>\n",
       "      <td>0.303507</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          clust        y1        y2        y3        y4        y5        y6  \\\n",
       "clust  1.000000 -0.138440 -0.131670 -0.109118 -0.060560 -0.033800 -0.015959   \n",
       "y1    -0.138440  1.000000  0.978751  0.883588  0.704674  0.638007  0.576251   \n",
       "y2    -0.131670  0.978751  1.000000  0.935573  0.782544  0.720951  0.660986   \n",
       "y3    -0.109118  0.883588  0.935573  1.000000  0.887771  0.833800  0.773929   \n",
       "y4    -0.060560  0.704674  0.782544  0.887771  1.000000  0.977791  0.931728   \n",
       "y5    -0.033800  0.638007  0.720951  0.833800  0.977791  1.000000  0.979287   \n",
       "y6    -0.015959  0.576251  0.660986  0.773929  0.931728  0.979287  1.000000   \n",
       "y7     0.013532  0.388102  0.484906  0.608719  0.787036  0.862713  0.918696   \n",
       "y8     0.029720  0.316000  0.409866  0.533323  0.719699  0.807161  0.876334   \n",
       "y9     0.045737  0.217886  0.309173  0.432197  0.624749  0.723227  0.805015   \n",
       "y10    0.053120  0.161592  0.246035  0.364220  0.560373  0.664173  0.753229   \n",
       "y11    0.059291  0.112239  0.188201  0.298982  0.493611  0.602133  0.696306   \n",
       "y12    0.063156  0.065924  0.133897  0.237616  0.431574  0.542546  0.639225   \n",
       "y13    0.067838  0.025361  0.085492  0.182330  0.373271  0.485817  0.583469   \n",
       "y14    0.068875 -0.002779  0.050010  0.139751  0.320151  0.432397  0.530052   \n",
       "y15    0.069536 -0.023824  0.020942  0.102530  0.272143  0.382243  0.478661   \n",
       "y16    0.062996 -0.037710  0.000530  0.074682  0.237155  0.343640  0.437992   \n",
       "y17    0.057253 -0.045933 -0.012258  0.055643  0.210260  0.313954  0.406258   \n",
       "y18    0.056758 -0.045152 -0.015599  0.047848  0.194037  0.294774  0.385222   \n",
       "y19    0.055012 -0.044697 -0.018045  0.042033  0.182626  0.280291  0.368997   \n",
       "y20    0.054750 -0.044576 -0.019799  0.038149  0.174971  0.270958  0.358381   \n",
       "y21    0.054976 -0.042189 -0.019793  0.035674  0.168613  0.262944  0.349131   \n",
       "y22    0.054752 -0.039209 -0.018259  0.036314  0.166106  0.258303  0.343269   \n",
       "y23    0.052491 -0.037238 -0.018059  0.034673  0.161841  0.251983  0.335645   \n",
       "y24    0.052104 -0.036767 -0.019142  0.031714  0.155913  0.244776  0.327575   \n",
       "y25    0.051631 -0.035015 -0.018944  0.030245  0.151814  0.239354  0.321100   \n",
       "y26    0.054613 -0.034203 -0.019995  0.026971  0.145532  0.231606  0.312587   \n",
       "y27    0.054829 -0.034179 -0.021218  0.024110  0.140444  0.225430  0.305611   \n",
       "y28    0.056519 -0.036656 -0.025320  0.017742  0.130852  0.213928  0.292805   \n",
       "y29    0.058045 -0.037368 -0.027826  0.013436  0.122168  0.203413  0.280824   \n",
       "y30    0.051365 -0.031609 -0.023056  0.016161  0.119636  0.199248  0.275433   \n",
       "label  0.071537  0.073813  0.103461  0.157020  0.220284  0.252137  0.280928   \n",
       "\n",
       "             y7        y8        y9  ...       y22       y23       y24  \\\n",
       "clust  0.013532  0.029720  0.045737  ...  0.054752  0.052491  0.052104   \n",
       "y1     0.388102  0.316000  0.217886  ... -0.039209 -0.037238 -0.036767   \n",
       "y2     0.484906  0.409866  0.309173  ... -0.018259 -0.018059 -0.019142   \n",
       "y3     0.608719  0.533323  0.432197  ...  0.036314  0.034673  0.031714   \n",
       "y4     0.787036  0.719699  0.624749  ...  0.166106  0.161841  0.155913   \n",
       "y5     0.862713  0.807161  0.723227  ...  0.258303  0.251983  0.244776   \n",
       "y6     0.918696  0.876334  0.805015  ...  0.343269  0.335645  0.327575   \n",
       "y7     1.000000  0.983479  0.927569  ...  0.423079  0.412514  0.402603   \n",
       "y8     0.983479  1.000000  0.966235  ...  0.508753  0.497906  0.487651   \n",
       "y9     0.927569  0.966235  1.000000  ...  0.599847  0.588053  0.577421   \n",
       "y10    0.880000  0.933065  0.985840  ...  0.685995  0.674620  0.664145   \n",
       "y11    0.824522  0.887810  0.954264  ...  0.756700  0.745708  0.735225   \n",
       "y12    0.764422  0.836548  0.913324  ...  0.820903  0.810823  0.800935   \n",
       "y13    0.704122  0.782345  0.866593  ...  0.873718  0.864548  0.855488   \n",
       "y14    0.646044  0.727931  0.818237  ...  0.911944  0.903719  0.895706   \n",
       "y15    0.589356  0.674859  0.769345  ...  0.942088  0.935016  0.928010   \n",
       "y16    0.541267  0.628423  0.724853  ...  0.963355  0.957231  0.951362   \n",
       "y17    0.504149  0.591767  0.688221  ...  0.977196  0.971876  0.966845   \n",
       "y18    0.477943  0.564949  0.660317  ...  0.986241  0.981551  0.977213   \n",
       "y19    0.456588  0.543312  0.637475  ...  0.992660  0.988895  0.985188   \n",
       "y20    0.443013  0.529324  0.622503  ...  0.996401  0.993398  0.990309   \n",
       "y21    0.431446  0.517431  0.609485  ...  0.998757  0.996563  0.993792   \n",
       "y22    0.423079  0.508753  0.599847  ...  1.000000  0.998713  0.996658   \n",
       "y23    0.412514  0.497906  0.588053  ...  0.998713  1.000000  0.998755   \n",
       "y24    0.402603  0.487651  0.577421  ...  0.996658  0.998755  1.000000   \n",
       "y25    0.394714  0.478954  0.567876  ...  0.994062  0.996790  0.998827   \n",
       "y26    0.385048  0.468829  0.556848  ...  0.990337  0.993637  0.996595   \n",
       "y27    0.377024  0.460252  0.547591  ...  0.984770  0.988800  0.992605   \n",
       "y28    0.362956  0.444904  0.531322  ...  0.975576  0.980416  0.985392   \n",
       "y29    0.349006  0.429711  0.514651  ...  0.962842  0.968166  0.973768   \n",
       "y30    0.341126  0.420350  0.503821  ...  0.955354  0.960967  0.966866   \n",
       "label  0.338358  0.366643  0.388144  ...  0.323549  0.319676  0.318176   \n",
       "\n",
       "            y25       y26       y27       y28       y29       y30     label  \n",
       "clust  0.051631  0.054613  0.054829  0.056519  0.058045  0.051365  0.071537  \n",
       "y1    -0.035015 -0.034203 -0.034179 -0.036656 -0.037368 -0.031609  0.073813  \n",
       "y2    -0.018944 -0.019995 -0.021218 -0.025320 -0.027826 -0.023056  0.103461  \n",
       "y3     0.030245  0.026971  0.024110  0.017742  0.013436  0.016161  0.157020  \n",
       "y4     0.151814  0.145532  0.140444  0.130852  0.122168  0.119636  0.220284  \n",
       "y5     0.239354  0.231606  0.225430  0.213928  0.203413  0.199248  0.252137  \n",
       "y6     0.321100  0.312587  0.305611  0.292805  0.280824  0.275433  0.280928  \n",
       "y7     0.394714  0.385048  0.377024  0.362956  0.349006  0.341126  0.338358  \n",
       "y8     0.478954  0.468829  0.460252  0.444904  0.429711  0.420350  0.366643  \n",
       "y9     0.567876  0.556848  0.547591  0.531322  0.514651  0.503821  0.388144  \n",
       "y10    0.654339  0.643205  0.633683  0.616845  0.599392  0.587530  0.399163  \n",
       "y11    0.725342  0.714229  0.704565  0.687858  0.670282  0.657479  0.408133  \n",
       "y12    0.791516  0.780991  0.771324  0.755406  0.738131  0.724945  0.404281  \n",
       "y13    0.846597  0.836627  0.827107  0.811746  0.794838  0.781599  0.398942  \n",
       "y14    0.887556  0.878386  0.869276  0.854439  0.837906  0.825155  0.387695  \n",
       "y15    0.920661  0.912398  0.903451  0.889303  0.873173  0.860921  0.373113  \n",
       "y16    0.944973  0.937680  0.929453  0.916176  0.900491  0.889031  0.357049  \n",
       "y17    0.961306  0.954749  0.946908  0.934300  0.919067  0.908559  0.342403  \n",
       "y18    0.972480  0.966601  0.959430  0.947515  0.933101  0.923522  0.335651  \n",
       "y19    0.981234  0.976096  0.969483  0.958336  0.944621  0.935769  0.329484  \n",
       "y20    0.986834  0.982233  0.975911  0.965349  0.951818  0.943551  0.326549  \n",
       "y21    0.990812  0.986515  0.980559  0.970573  0.957274  0.949287  0.322404  \n",
       "y22    0.994062  0.990337  0.984770  0.975576  0.962842  0.955354  0.323549  \n",
       "y23    0.996790  0.993637  0.988800  0.980416  0.968166  0.960967  0.319676  \n",
       "y24    0.998827  0.996595  0.992605  0.985392  0.973768  0.966866  0.318176  \n",
       "y25    1.000000  0.998695  0.995667  0.989470  0.978571  0.971919  0.314419  \n",
       "y26    0.998695  1.000000  0.998202  0.993525  0.983826  0.977562  0.310231  \n",
       "y27    0.995667  0.998202  1.000000  0.997604  0.990020  0.984084  0.306825  \n",
       "y28    0.989470  0.993525  0.997604  1.000000  0.994597  0.989185  0.301731  \n",
       "y29    0.978571  0.983826  0.990020  0.994597  1.000000  0.996769  0.304244  \n",
       "y30    0.971919  0.977562  0.984084  0.989185  0.996769  1.000000  0.303507  \n",
       "label  0.314419  0.310231  0.306825  0.301731  0.304244  0.303507  1.000000  \n",
       "\n",
       "[32 rows x 32 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "2799483f",
   "metadata": {},
   "outputs": [],
   "source": [
    "clust0=list0.iloc[:, 1:-1]\n",
    "clust1=list1.iloc[:, 1:-1]\n",
    "clust2=list2.iloc[:, 1:-1]\n",
    "clust3=list3.iloc[:, 1:-1]\n",
    "\n",
    "cnt = []\n",
    "for i in range(1,31):\n",
    "    cnt.append(i/10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "a2cb7416",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Tclust0=clust0.T\n",
    "# Tclust0 = Tclust0.iloc[:, 0]\n",
    "# Tclust0 = Tclust0.to_list()\n",
    "# type(Tclust0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f4601297",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'clusta' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mclusta\u001b[49m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'clusta' is not defined"
     ]
    }
   ],
   "source": [
    "clusta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "b14bd8a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "31"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(clusta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "1e9c071c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from tqdm import tqdm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "f818d042",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|███████████████████████████████████████████████████████████████████████████████| 356/356 [00:00<00:00, 502.38it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|███████████████████████████████████████████████████████████████████████████████| 331/331 [00:00<00:00, 482.03it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|███████████████████████████████████████████████████████████████████████████████| 258/258 [00:00<00:00, 459.01it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|█████████████████████████████████████████████████████████████████████████████████| 54/54 [00:00<00:00, 460.39it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "clust0=list0.iloc[:, 1:-2]\n",
    "clust1=list1.iloc[:, 1:-2]\n",
    "clust2=list2.iloc[:, 1:-2]\n",
    "clust3=list3.iloc[:, 1:-2]\n",
    "\n",
    "cnt = []\n",
    "for i in range(1,31):\n",
    "    cnt.append(i/10)\n",
    "    \n",
    "##################################################################################################################################\n",
    "\n",
    "plt.xticks([0,10,20,30,40,50,60,70,80,90,100], labels=['0','10','20','30','40','50','60','70','80','90','100'])\n",
    "\n",
    "for i in tqdm(range(0,len(clust0.index))):\n",
    "    plt.xticks([0,10,20,30,40,50,60,70,80,90,100], labels=['0','10','20','30','40','50','60','70','80','90','100'])\n",
    "    clust0=list0.iloc[:, 1:-1]\n",
    "    clust0=clust0.T\n",
    "    clust0=clust0.iloc[:, i]\n",
    "    clusta=clust0.to_list()\n",
    "    plt.scatter(clusta, cnt, color='blue')\n",
    "plt.show()\n",
    "for i in tqdm(range(0,len(clust1.index))):\n",
    "    clust1=list1.iloc[:, 1:-1]\n",
    "    clust1=clust1.T\n",
    "    clust1=clust1.iloc[:, i]\n",
    "    clustb=clust1.to_list()\n",
    "    plt.xticks([0,10,20,30,40,50,60,70,80,90,100], labels=['0','10','20','30','40','50','60','70','80','90','100'])\n",
    "    plt.scatter(clustb, cnt, color='red')\n",
    "plt.show()\n",
    "for i in tqdm(range(0,len(clust2.index))):\n",
    "    clust2=list2.iloc[:, 1:-1]\n",
    "    clust2=clust2.T\n",
    "    clust2=clust2.iloc[:, i]\n",
    "    clustc=clust2.to_list()\n",
    "    plt.xticks([0,10,20,30,40,50,60,70,80,90,100], labels=['0','10','20','30','40','50','60','70','80','90','100'])\n",
    "    plt.scatter(clustc, cnt, color='green')\n",
    "plt.show()\n",
    "for i in tqdm(range(0,len(clust3.index))):\n",
    "    clust3=list3.iloc[:, 1:-1]\n",
    "    clust3=clust3.T\n",
    "    clust3=clust3.iloc[:, i]\n",
    "    clustd=clust3.to_list()\n",
    "    plt.xticks([0,10,20,30,40,50,60,70,80,90,100], labels=['0','10','20','30','40','50','60','70','80','90','100'])\n",
    "    plt.scatter(clustd, cnt, color='black')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a66d8fce",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "662c8b62",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e3aec1e7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81e770b7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ef394d1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e5e61f1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4a32261",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "abd7ec12",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80939120",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "55298d94",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9283be7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c6315d4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e58b516",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b1ba4a42",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a77a1b23",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e8e8e5b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6fcb0f76",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "26aaa05d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39a06015",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16d8e1aa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3dd5f856",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "504edaf7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36f04f85",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "349.091px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
